<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<select id="getBoardList" parameterType="hashmap" resultType="hashmap">
			SELECT b.board_content_no AS content_no,
			   b.board_content_name AS content_name,
			   m.member_name AS member_name,
			   c.commentCnt,
			   DATE_FORMAT(b.board_content_reg_time, '%Y-%m-%d') AS reg_time,
			   b.board_content_hit AS hit
			FROM board_content b INNER JOIN member m
									     ON b.member_no = m.member_no
						    	 LEFT OUTER JOIN (SELECT COUNT(board_content_no) AS commentCnt, board_content_no
												  FROM comment
												  WHERE comment_del_time IS NULL
												  GROUP BY board_content_no) c
											  ON b.board_content_no = c.board_content_no
		WHERE b.board_no = 1
		AND board_content_del_time IS NULL
		ORDER BY b.board_content_no DESC
	</select>
	<select id="getBoardListCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(board_content_no) AS bCount
		FROM board_content
		WHERE board_no = 1
		AND board_content_del_time IS NULL
	</select>
	<select id="getBoardContent" parameterType="hashmap" resultType="hashmap">
		SELECT m.member_name AS member_name,
			   DATE_FORMAT(b.board_content_reg_time, '%Y-%m-%d %H:%m:%s') AS reg_time,
			   b.board_content_name AS content_name,
			   b.board_content_detail AS content_detail
		FROM board_content b INNER JOIN (SELECT member_no, member_name
										 FROM member) AS m
									 ON b.member_no = m.member_no
		WHERE b.board_content_no = #{boardNo}
	</select>
	<update id="boardContentHit" parameterType="hashmap">
		UPDATE board_content
		SET board_content_hit = (SELECT board_content_hit
		   						 FROM board_content
								 WHERE board_content_no = #{boardNo}) + 1
		WHERE board_content_no = #{boardNo}
	</update>
	<select id="getComment" parameterType="hashmap" resultType="hashmap">
	SELECT m.member_name AS member_name,
		   m.member_no AS member_no,
		   DATE_FORMAT(c.comment_reg_time, '%Y-%m-%d %H:%m:%s') AS reg_time,
		   c.comment_no AS comment_no,
		   c.comment_content AS comment_content
	FROM comment c INNER JOIN (SELECT member_name, member_no
							   FROM member
							   WHERE member_delete_yn = 1) m
						   ON c.member_no = m.member_no
	WHERE comment_del_time IS NULL
	AND board_content_no = #{boardNo}
	<if test="commentNo != null and commentNo != ''">
		AND comment_no = #{commentNo}
	</if>
	ORDER BY reg_time ASC
	</select>
	<insert id="commentAdd" parameterType="hashmap">
		INSERT INTO comment (board_content_no, member_no, comment_content, comment_reg_time)
		VALUES (#{boardNo}, #{userNo}, #{comment}, NOW());
	</insert>
	<update id="commentDel" parameterType="hashmap">
		UPDATE comment
		SET comment_del_time = NOW()
		WHERE board_content_no = #{bNo}
		AND comment_no = #{coNo}
		AND member_no = #{uNo}
	</update>
	<update id="commentMod" parameterType="hashmap">
		UPDATE comment
		SET comment_mod_time = NOW(),
		comment_content = #{comment}
		WHERE board_content_no = #{bNo}
		AND comment_no = #{coNo}
		AND member_no = #{uNo}
	</update>
	
</mapper>