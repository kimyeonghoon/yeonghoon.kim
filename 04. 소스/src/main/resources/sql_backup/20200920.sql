-- --------------------------------------------------------
-- 호스트:                          127.0.0.1
-- 서버 버전:                        10.5.5-MariaDB - mariadb.org binary distribution
-- 서버 OS:                        Win64
-- HeidiSQL 버전:                  11.0.0.5919
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- yeonghoon.kim 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `yeonghoon.kim`;
CREATE DATABASE IF NOT EXISTS `yeonghoon.kim` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `yeonghoon.kim`;

-- 테이블 yeonghoon.kim.academy 구조 내보내기
DROP TABLE IF EXISTS `academy`;
CREATE TABLE IF NOT EXISTS `academy` (
  `academy_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '교육번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `academy_course` varchar(50) NOT NULL COMMENT '교육과정',
  `academy_content` text NOT NULL COMMENT '교육내용',
  `academy_academy` varchar(20) NOT NULL COMMENT '학원명',
  `academy_startdate` date NOT NULL COMMENT '시작년월',
  `academy_enddate` date NOT NULL COMMENT '종료년월',
  `academy_upload_path` tinytext DEFAULT NULL COMMENT '증명서류경로',
  `academy_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  `academy_status_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '수료여부',
  PRIMARY KEY (`academy_no`),
  KEY `academy_member.FK` (`member_no`),
  CONSTRAINT `academy_member.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COMMENT='교육에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.academy:~8 rows (대략적) 내보내기
/*!40000 ALTER TABLE `academy` DISABLE KEYS */;
REPLACE INTO `academy` (`academy_no`, `member_no`, `academy_course`, `academy_content`, `academy_academy`, `academy_startdate`, `academy_enddate`, `academy_upload_path`, `academy_delete_yn`, `academy_status_yn`) VALUES
	(1, 1, '오라클기반 정보시스템 운영', '1. Windows Server/Linux Server 실무 및 보안\r\n2. 네트워크 인프라 솔루션(CCNA, CCNP)\r\n3. 가상사설망 VPN\r\n4. 오라클 데이터베이스\r\n5. 실전 클라우드 가상화 구축 기술\r\n6. 실무 Project', '아이티윌 부산교육센터', '2014-12-22', '2015-06-09', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067808_kgsglhif.jpg', 1, 1),
	(2, 1, '자바기반 스마트 웹&콘텐츠 개발자 양성과정', '1. Web Front-End (UI) : html, CSS, JavaScript, jQuery, JSP\r\n2. DataBase : Oracle DB\r\n3. Web Back-End : JAVA, SpringFramework, MyBatis\r\n4. Team Project ', '구디아카데미', '2020-02-17', '2020-08-05', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067791_aeltduzq.jpg', 1, 1),
	(6, 1, '자바기반 스마트 웹&콘텐츠 개발자 양성과정', '1. Web Front-End (UI) : html, CSS, JavaScript, jQuery, JSP\r\n2. DataBase : Oracle DB\r\n3. Web Back-End : JAVA, SpringFramework, MyBatis\r\n4. Team Project ', '구디아카데미', '2020-02-17', '2020-08-05', NULL, 0, 1),
	(7, 1, '코스', '컨텐츠', '교육기관', '2020-09-07', '2020-09-07', NULL, 0, 1),
	(8, 1, '마바사', 'ㅇㄴㅁㅇㅁㄴㅁㄴ아자', '가나달아', '2018-09-12', '2020-09-13', NULL, 0, 0),
	(9, 1, 'dsadasdas', 'dsadasdasas', 'dsadasdasd', '2020-08-02', '2020-09-02', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599556842_wrdmhxhi.png', 0, 0),
	(10, 1, 'dasdsadcas', 'dasdasdsad', 'dsadsad', '2020-09-01', '2020-09-01', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599556854_zuigvxla.jpg', 0, 1),
	(11, 1, 'ewqeqweqw', 'eqweqweqweqweqweq', 'wqewqeqw', '2020-09-01', '2020-09-15', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599557354_vsfigfny.jpg', 0, 1);
/*!40000 ALTER TABLE `academy` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.base_transceiver_station 구조 내보내기
DROP TABLE IF EXISTS `base_transceiver_station`;
CREATE TABLE IF NOT EXISTS `base_transceiver_station` (
  `bts_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '기지국정보번호',
  `bts_name` varchar(10) NOT NULL COMMENT '기지국명',
  `bts_station_no` tinyint(2) unsigned NOT NULL COMMENT '기지국번호',
  PRIMARY KEY (`bts_no`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COMMENT='기지국 정보를 담은 테이블';

-- 테이블 데이터 yeonghoon.kim.base_transceiver_station:~24 rows (대략적) 내보내기
/*!40000 ALTER TABLE `base_transceiver_station` DISABLE KEYS */;
REPLACE INTO `base_transceiver_station` (`bts_no`, `bts_name`, `bts_station_no`) VALUES
	(1, '모바일공통\r\n', 10),
	(2, 'SKT', 11),
	(3, 'KT\r\n', 16),
	(4, 'SKT(신세기)\r\n', 17),
	(5, 'KT(한솔)\r\n', 18),
	(6, 'LG\r\n', 19),
	(7, '서울특별시\r\n', 2),
	(8, '경기도\r\n', 31),
	(9, '인천광역시\r\n', 32),
	(10, '강원도\r\n', 33),
	(11, '충청남도\r\n', 41),
	(12, '대전광역시\r\n', 42),
	(13, '충청북도\r\n', 43),
	(14, '세종특별자치시\r\n', 44),
	(15, '부산광역시\r\n', 51),
	(16, '울산광역시\r\n', 52),
	(17, '대구광역시\r\n', 53),
	(18, '경상북도\r\n', 54),
	(19, '경상남도\r\n', 55),
	(20, '전라남도\r\n', 61),
	(21, '광주광역시\r\n', 62),
	(22, '전라북도\r\n', 63),
	(23, '제주특별자치도\r\n', 64),
	(24, 'VOIP\r\n', 70);
/*!40000 ALTER TABLE `base_transceiver_station` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.board 구조 내보내기
DROP TABLE IF EXISTS `board`;
CREATE TABLE IF NOT EXISTS `board` (
  `board_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '게시판번호',
  `board_type_no` int(11) unsigned NOT NULL COMMENT '게시판구분번호',
  `board_name` varchar(20) NOT NULL COMMENT '게시판명',
  `board_category` tinyint(1) unsigned NOT NULL COMMENT '게시판유형',
  `board_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`board_no`),
  KEY `board_board_type.FK` (`board_type_no`),
  CONSTRAINT `board_board_type.FK` FOREIGN KEY (`board_type_no`) REFERENCES `board_type` (`board_type_no`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='게시판 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.board:~2 rows (대략적) 내보내기
/*!40000 ALTER TABLE `board` DISABLE KEYS */;
REPLACE INTO `board` (`board_no`, `board_type_no`, `board_name`, `board_category`, `board_delete_yn`) VALUES
	(1, 1, '일반게시판', 1, 1),
	(2, 2, '갤러리', 2, 1);
/*!40000 ALTER TABLE `board` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.board_content 구조 내보내기
DROP TABLE IF EXISTS `board_content`;
CREATE TABLE IF NOT EXISTS `board_content` (
  `board_content_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '게시글번호',
  `board_no` int(11) unsigned NOT NULL COMMENT '게시판번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `board_content_name` varchar(200) NOT NULL COMMENT '제목',
  `board_content_detail` text NOT NULL DEFAULT '0' COMMENT '내용',
  `board_content_reg_time` datetime NOT NULL COMMENT '등록시간',
  `board_content_mod_time` datetime DEFAULT NULL COMMENT '수정시간',
  `board_content_hit` int(11) unsigned NOT NULL DEFAULT 0 COMMENT '조회수',
  `board_content_del_time` datetime DEFAULT NULL COMMENT '삭제시간',
  PRIMARY KEY (`board_content_no`),
  KEY `board_no.FK` (`board_no`),
  KEY `member_no.FK` (`member_no`),
  CONSTRAINT `board_no.FK` FOREIGN KEY (`board_no`) REFERENCES `board` (`board_no`),
  CONSTRAINT `member_no.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=205 DEFAULT CHARSET=utf8mb4 COMMENT='게시글 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.board_content:~162 rows (대략적) 내보내기
/*!40000 ALTER TABLE `board_content` DISABLE KEYS */;
REPLACE INTO `board_content` (`board_content_no`, `board_no`, `member_no`, `board_content_name`, `board_content_detail`, `board_content_reg_time`, `board_content_mod_time`, `board_content_hit`, `board_content_del_time`) VALUES
	(8, 1, 1, 'CentOS8 초기 설정 - centos8_init.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>---<br>- hosts: centos8_init<br>&nbsp; become: yes<br><br>&nbsp; vars:<br>&nbsp;&nbsp;&nbsp; hostname: localhost<br>&nbsp;&nbsp;&nbsp; user: ioniere<br>&nbsp;&nbsp;&nbsp; user_passwd: secret<br><br>&nbsp; tasks:<br>&nbsp; - name: 호스트네임 설정<br>&nbsp;&nbsp;&nbsp; hostname:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: "{{ hostname }}"<br><br>&nbsp; - name: 불필요한 데몬 구동되지 않도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: \'{{ item }}\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: stopped<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: no<br>&nbsp;&nbsp;&nbsp; with_items:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - firewalld<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - import-state<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - irqbalance<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - kdump<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - microcode<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - nis-domainname<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - rngd<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - selinux-autorelabel-mark<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - sssd<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - tuned<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - sssd-kcm.socket<br><br>&nbsp; - name: SELINUX 비활성화<br>&nbsp;&nbsp;&nbsp; selinux:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: disabled<br><br>&nbsp; - name: 불필요한 계정 삭제<br>&nbsp;&nbsp;&nbsp; user:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: "{{ item }}"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: absent<br>&nbsp;&nbsp;&nbsp; with_items:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - ftp<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - adm<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - lp<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - shutdown<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - halt<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - operator<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - games<br><br>&nbsp; - name: 관리자 계정 생성<br>&nbsp;&nbsp;&nbsp; user:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: "{{ user }}"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; password: "{{ user_passwd | password_hash(\'sha512\') }}"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; groups: wheel<br><br>&nbsp; - name: su 파일 권한 및 소유권 설정<br>&nbsp;&nbsp;&nbsp; file:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /bin/su<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; owner: root<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; group: wheel<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mode: 04750<br><br>&nbsp; - name: wheel 그룹에 포함되어 있는 유저만 su 사용가능하도록 설정<br>&nbsp;&nbsp;&nbsp; pamd:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: su<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type: auth<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; control: sufficient<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; module_path: pam_rootok.so<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new_type: auth<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new_control: required<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new_module_path: pam_wheel.so<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; module_arguments: \'use_uid\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: after<br><br>&nbsp; - name: SSHD ROOT 로그인 불허<br>&nbsp;&nbsp;&nbsp; replace:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/ssh/sshd_config<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: "^PermitRootLogin yes"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; replace: "PermitRootLogin no"<br><br>&nbsp; - name: SSHD ipv4로만 작동하도록 설정<br>&nbsp;&nbsp;&nbsp; replace:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/ssh/sshd_config<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: "^#ListenAddress 0.0.0.0"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; replace: "ListenAddress 0.0.0.0"<br><br>&nbsp; - name: yum 업데이트<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: "*"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: 히스토리 개수 변경<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/profile<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: "^HISTSIZE"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "HISTSIZE=10000"<br><br>&nbsp; - name: 히스토리 시간 보이도록 설정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/profile<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "HISTTIMEFORMAT=\\"[%Y-%m-%d %H:%M:%S] \\"\\nexport HISTTIMEFORMAT"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br><br>&nbsp; - name: 기본 프로그램 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'iptables-services\', \'vim-enhanced\', \'net-tools\', \'psmisc\', \'wget\', \'git\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: iptables 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: iptables<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br>\r\n</p></blockquote><p>-변수 수정 후 사용<br>\r\nhostname: 호스트명<br>\r\nuser: 관리자계정<br>\r\nuser_passwrd: 관리자 계정 패스워드</p>', '2019-09-29 10:18:00', NULL, 94, NULL),
	(9, 1, 1, 'CentOS7 docker_ce 설치 - centos7_docker.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">---<br>- hosts: centos7_docker<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; tasks:<br><br>&nbsp; - name: 필수 라이브러리 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'device-mapper-persistent-data\', \'lvm2\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: docker_ce repo 추가<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/yum.repos.d/docker-ce.repo<br><br>&nbsp; - name: docker-ce 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: docker-ce<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: docker-composer 다운로드<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64">https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /usr/local/bin/docker-compose<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mode: 0755<br><br>&nbsp; - name: docker-composer 심볼릭 링크 걸기<br>&nbsp;&nbsp;&nbsp; file:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; src: /usr/local/bin/docker-compose<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /usr/bin/docker-compose<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: link<br><br>&nbsp; - name: docker 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: docker<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes</blockquote><p>CentOS8의 경우 현재(20190929) 공식 버전이 준비되지 않아서 의존성 문제 발생함</p>', '2019-09-29 11:06:00', NULL, 82, NULL),
	(10, 1, 1, '인터넷 익스플로러 cockpit 사용 불가', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/b9c23ac993ec0e2ef2093a4a93a8ce4e_1571989323_8764.png" title="b9c23ac993ec0e2ef2093a4a93a8ce4e_1571989323_8764.png"> <br></p><p><br></p><p>CentOS8에 기본 탑재된 프로그램.</p><p>익스플로러에서는 사용 불가능.</p>', '2019-09-30 08:00:00', NULL, 84, NULL),
	(11, 1, 1, 'kvm virt-install 예시', '<p>virt-install 예시 - CentOS8</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>virt-install \\<br>--virt-type=kvm \\<br>--name centos8 \\<br>--ram 2048 \\<br>--vcpus=2 \\<br>--os-variant=centos7.0 \\<br>--cdrom=/volume01/iso/CentOS-8-x86_64-1905-dvd1.iso \\<br>--network=bridge=br0,model=virtio \\<br>--graphics vnc \\<br>--disk path=/VM/centos8_ori.qcow2,size=20,bus=virtio,format=qcow2</p></blockquote><p>virt-install 예시 - Windows2012R2<br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"> virt-install \\<br>--virt-type kvm \\<br>--name windows2012r2 \\<br>--vcpus 4 \\<br>--memory 4096 \\<br>--os-variant win10 \\<br>--disk path=/volume01/iso/Server_2012_R2_STD_and_DC.ISO,device=cdrom,bus=ide \\<br>--disk path=/volume01/iso/virtio-win.iso,device=cdrom,bus=ide \\<br>--disk path=/VM/203_windows2012r2.qcow2,format=qcow2,size=40,bus=virtio \\<br>--network=bridge=br0,model=virtio \\<br>--graphics vnc</blockquote><p>-네트워크 인터페이스 - 브릿지(br0)<br></p><p>&nbsp;<br></p>', '2019-09-30 14:47:00', NULL, 84, NULL),
	(12, 1, 1, 'CentOS8 npm 설치(저사양) - centos8_npm.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; vars:<br>&nbsp;&nbsp;&nbsp; db_passwd: secret<br><br>&nbsp; tasks:<br><br>&nbsp; - name: nginx 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: nginx<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: mariadb 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'mariadb-server\', \'mariadb\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: php 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'php-bcmath\', \'php-cli\', \'php-common\', \'php-dba\', \'php-dbg\', \'php-devel\', \'php-embedded\', \'php-enchant\', \'php-fpm\', \'php-gd\', \'php-gmp\', \'php-intl\', \'php-json\', \'php-ldap\', \'php-mbstring\', \'php-mysqlnd\', \'php-odbc\', \'php-opcache\', \'php-pdo\', \'php-pear\', \'php-pecl-apcu\', \'php-pecl-apcu-devel\', \'php-pecl-zip\', \'php-pgsql\', \'php-process\', \'php-recode\', \'php-snmp\', \'php-soap\', \'php-xml\', \'php-xmlrpc\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: nginx.conf 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/nginx.conf">http://data.yeonghoon.kim/centos8_npm/source/nginx.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/nginx/nginx.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: nginx fastcgi_params 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/fastcgi_params">http://data.yeonghoon.kim/centos8_npm/source/fastcgi_params</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/nginx/fastcgi_params<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: nginx virtualhost.conf_sample 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/virtualhost_sample_conf">http://data.yeonghoon.kim/centos8_npm/source/virtualhost_sample_conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/nginx/conf.d/virtualhost_sample_conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: mariadb-server.cnf(my.cnf) 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/mariadb-server.cnf">http://data.yeonghoon.kim/centos8_npm/source/mariadb-server.cnf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/my.cnf.d/mariadb-server.cnf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: php.ini 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/php.ini">http://data.yeonghoon.kim/centos8_npm/source/php.ini</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/php.ini<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: php-fpm.conf 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/php-fpm.conf">http://data.yeonghoon.kim/centos8_npm/source/php-fpm.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/php-fpm.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: <a href="http://www.conf(php-fpm)">www.conf(php-fpm)</a> 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/www.conf">http://data.yeonghoon.kim/centos8_npm/source/www.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/php-fpm.d/<a href="http://www.conf">www.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: test 디비 존재유무 확인(mysql_install_secure.sql 실행 유무 판단)<br>&nbsp;&nbsp;&nbsp; stat:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /var/lib/mysql/test<br>&nbsp;&nbsp;&nbsp; register: test_db_check<br><br>&nbsp; - name: mysql_secure_install.sql 파일 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_npm/source/mysql_secure_install.sql">http://data.yeonghoon.kim/centos8_npm/source/mysql_secure_install.sql</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /tmp/mysql_secure_install.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br>&nbsp;&nbsp;&nbsp; when: test_db_check.stat.exists == False<br><br>&nbsp; - name: php 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: php-fpm<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br><br>&nbsp; - name: nginx 구동 및 부팅 시 구동되도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: nginx<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br><br>&nbsp; - name: mariadb 구동 및 부팅 시 구동되도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: mariadb<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br><br>&nbsp; - name: mysql 루트 패스워드 설정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /tmp/mysql_secure_install.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^UPDATE\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "UPDATE mysql.user SET Password=PASSWORD(\'{{ db_passwd }}\') WHERE User=\'root\';"<br>&nbsp;&nbsp;&nbsp; when: test_db_check.stat.exists == False<br><br>&nbsp; - name: mysql_secure_install.sql 실행<br>&nbsp;&nbsp;&nbsp; shell: mysql -sfu root &lt; /tmp/mysql_secure_install.sql<br>&nbsp;&nbsp;&nbsp; when: test_db_check.stat.exists == False<br><br>&nbsp; - name: mysql_secure_install.sql 삭제<br>&nbsp;&nbsp;&nbsp; file:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /tmp/mysql_secure_install.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: absent<br>&nbsp;&nbsp;&nbsp; when: test_db_check.stat.exists == False<br></p></blockquote><p>host, user, db_passwd는 상황에 맞게 수정 후 사용<br>방화벽 설정은 별도로 진행<br></p>', '2019-09-30 14:50:00', NULL, 180, NULL),
	(13, 1, 1, 'CentOS8 MariaDB 저사양용 - /etc/my.cnf.d/mariadb-server.cnf', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>#<br># These groups are read by MariaDB server.<br># Use it for options that only the server (but not clients) should see<br>#<br># See the examples of server my.cnf files in /usr/share/mysql/<br>#<br><br># this is read by the standalone daemon and embedded servers<br>[server]<br><br># this is only for the mysqld standalone daemon<br># Settings user and group are ignored when systemd is used.<br># If you need to run mysqld under a different user or group,<br># customize your systemd unit file for mysqld/mariadb according to the<br># instructions in <a href="http://fedoraproject.org/wiki/Systemd">http://fedoraproject.org/wiki/Systemd</a><br>[mysqld]<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br>pid-file=/run/mariadb/mariadb.pid<br><br>symbolic-links = 0<br>general_log = 1<br>bind-address = 0.0.0.0<br>log_bin=mysql-bin<br>character-set-client-handshake = FALSE<br>character-set-server = utf8mb4<br>collation-server = utf8mb4_general_ci<br>log-short-format<br>long_query_time = 5<br>slow_query_log = 1<br>log-error = /var/log/mariadb/mysql_errors.log<br>slow_query_log_file = /var/log/mariadb/mysql_slow_queries.log<br>server-id = 1<br>performance_schema = NO<br><br><br>#<br># * Galera-related settings<br>#<br>[galera]<br># Mandatory settings<br>#wsrep_on=ON<br>#wsrep_provider=<br>#wsrep_cluster_address=<br>#binlog_format=row<br>#default_storage_engine=InnoDB<br>#innodb_autoinc_lock_mode=2<br>#<br># Allow server to accept connections on all interfaces.<br>#<br>#bind-address=0.0.0.0<br>#<br># Optional setting<br>#wsrep_slave_threads=1<br>#innodb_flush_log_at_trx_commit=0<br><br># this is only for embedded server<br>[embedded]<br><br># This group is only read by MariaDB servers, not by MySQL.<br># If you use the same .cnf file for MySQL and MariaDB,<br># you can put MariaDB-only options here<br>[mariadb]<br><br># This group is only read by MariaDB-10.3 servers.<br># If you use the same .cnf file for MariaDB of different versions,<br># use this group for options that older servers don\'t understand<br>[mariadb-10.3]<br></p></blockquote><p>&nbsp;</p>', '2019-09-30 14:53:00', NULL, 94, NULL),
	(14, 1, 1, 'CentOS8 svn 설치 - centos8_svnserver.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; vars:<br>&nbsp;&nbsp;&nbsp; svn_user: test_user<br>&nbsp;&nbsp;&nbsp; svn_pass: test_user_pass<br>&nbsp;&nbsp;&nbsp; subversion_root: /svn<br>&nbsp;&nbsp;&nbsp; svn_repo_name: test<br><br>&nbsp; tasks:<br><br>&nbsp; - name: subversion 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: subversion<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: svn root 디렉토리 생성<br>&nbsp;&nbsp;&nbsp; file:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: directory<br><br>&nbsp; - name: svn repo 생성<br>&nbsp;&nbsp;&nbsp; command: "svnadmin create --fs-type fsfs {{ subversion_root }}/{{ svn_repo_name }}"<br><br>&nbsp; - name: svn 계정 생성<br>&nbsp;&nbsp;&nbsp; blockinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/passwd"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: |<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{ svn_user }} = {{ svn_pass }}<br><br>&nbsp; - name: svn 인증 설정 1 - anon-access<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/svnserve.conf"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^# anon-access \'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: anon-access = none<br><br>&nbsp; - name: svn 인증 설정 2 - auth-access<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/svnserve.conf"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^# auth-access \'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: auth-access = write<br><br>&nbsp; - name: svn 인증 설정 3 - password-db<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/svnserve.conf"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^# password-db \'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: password-db = passwd<br><br>&nbsp; - name: svn 인증 설정 4 - auth-access<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/svnserve.conf"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^# authz-db \'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: authz-db = authz<br><br>&nbsp; - name: svn 인증 설정 5 - realm<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/svnserve.conf"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^# realm \'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "realm = {{ svn_repo_name }} Repository"<br><br>&nbsp; - name: 계정 권한 설정<br>&nbsp;&nbsp;&nbsp; blockinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: "{{ subversion_root }}/{{ svn_repo_name }}/conf/authz"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: |<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [/]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{ svn_user }} = rw<br><br>&nbsp; - name: svnserve 파일 수정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/sysconfig/svnserve<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^OPTIONS\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: \'OPTIONS="--threads --root {{ subversion_root }}"\'<br><br>&nbsp; - name: svnserve 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: svnserve<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br>&nbsp;</p></blockquote><p>host, user, svn_user, svn_pass, subversion_root, svn_repo_name은 상황에 맞게 수정 후 사용<br>service(systemctl) 명령을 이용하지 않을 거라면 svnserve 파일 수정, svnserver 구동 부분 삭제<br>방화벽 설정은 별도로 진행(3690)<br><br><br>&nbsp;</p>', '2019-09-30 17:56:00', NULL, 121, NULL),
	(15, 1, 1, 'CentOS8 vsftpd 설치 - centos8_vsftpd.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>--- <br>- hosts: centos8_init <br>&nbsp; user: ioniere <br>&nbsp; become: yes <br><br>&nbsp; tasks: <br><br>&nbsp; - name: vsftpd 설치 <br>&nbsp;&nbsp;&nbsp; yum: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: vsftpd <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest <br><br>&nbsp; - name: vsftpd.conf 수정 1 - 20번 포트 미사용 <br>&nbsp;&nbsp;&nbsp; lineinfile: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/vsftpd/vsftpd.conf <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^connect_from_port_20=YES$\' <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: connect_from_port_20=NO <br><br>&nbsp; - name: vsftpd.conf 수정 2 - chroot 주석해제 <br>&nbsp;&nbsp;&nbsp; lineinfile: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/vsftpd/vsftpd.conf <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^#chroot_local_user=YES$\' <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: chroot_local_user=YES <br><br>&nbsp; - name: vsftpd.conf 수정 3 - ipv4 listen <br>&nbsp;&nbsp;&nbsp; lineinfile: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/vsftpd/vsftpd.conf <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^listen=NO$\' <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: listen=YES <br><br>&nbsp; - name: vsftpd.conf 수정 4 - ipv6 listen off <br>&nbsp;&nbsp;&nbsp; lineinfile: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/vsftpd/vsftpd.conf <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^listen_ipv6=YES$\' <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: listen_ipv6=NO <br><br>&nbsp; - name: 기타 추가 설정 <br>&nbsp;&nbsp;&nbsp; blockinfile: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/vsftpd/vsftpd.conf <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: | <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use_localtime=YES <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max_clients=30 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max_per_ip=5 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pasv_enable=YES <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pasv_min_port=50001 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pasv_max_port=50005 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; allow_writeable_chroot=YES <br><br>&nbsp; - name: vsftpd 구동 <br>&nbsp;&nbsp;&nbsp; service: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: vsftpd <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes </p></blockquote><p>host, user는 상황에 맞게 수정 후 사용<br>방화벽 설정은 별도로 진행(21, 50001, 50002, 50003, 50004, 50005)<br></p><p><br></p>', '2019-10-01 11:29:00', NULL, 95, NULL),
	(16, 1, 1, 'CentOS8 network-scripts', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>yum install network-scripts</p></blockquote><p>CentOS에서는 기본적으로 nmcli를 사용하도록 되어 있음.<br>service netowrk start/stop과 같은 명령을 이용하고 싶다면 아래 명령을 이용하여 network-scripts를 설치해야 함<br></p><p><br></p>', '2019-10-04 15:33:00', NULL, 105, NULL),
	(17, 1, 1, '맥OS 미리알림 동기화 안되는 문제', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/10d4ccd53becab25be03f53e750aa65a_1571996098_8852.png" title="10d4ccd53becab25be03f53e750aa65a_1571996098_8852.png">&nbsp;</p><p><br></p><p>macOS 10.15 Catalina 업데이트 이후 동기화 될 예정(10월 중 업데이트)<br></p>', '2019-10-04 15:33:00', NULL, 91, NULL),
	(18, 1, 1, 'CentOS8 postfix 설치 - centos8_postfix.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; vars:<br>&nbsp;&nbsp;&nbsp; myhostname: mail.25ni.site<br>&nbsp;&nbsp;&nbsp; mydomain: 25ni.site<br><br>&nbsp; tasks:<br><br>&nbsp; - name: postfix 및 saslauthd 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'postfix\', \'cyrus-sasl\', \'cyrus-sasl-plain\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: main.cf 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_postfix/source/main.cf">http://data.yeonghoon.kim/centos8_postfix/source/main.cf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/postfix/main.cf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: master.cf 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_postfix/source/master.cf">http://data.yeonghoon.kim/centos8_postfix/source/master.cf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/postfix/master.cf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br><br>&nbsp; - name: main.cf 설정 - 도메인 추가<br>&nbsp;&nbsp;&nbsp; blockinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/postfix/main.cf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: |<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myhostname = {{ myhostname }}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mydomain = {{ mydomain }}<br><br>&nbsp; - name: saslauthd 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: saslauthd<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br><br>&nbsp; - name: postfix 구동<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: postfix<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br></blockquote><p>&nbsp;-메일 테스트(계정 인증) - 성공</p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>[root@25ni ~]# telnet 222.239.xxx.xxx 587<br>Trying 222.239.xxx.xxx...<br>Connected to 222.239.xxx.xxx.<br>Escape character is \'^]\'.<br>220 mail.25ni.site ESMTP Postfix<br>auth login<br>334 VXNlcm5hbWU6<br>id(base64형식)<br>334 UGFzc3dvcmQ6<br>password(base64형식)<br>235 2.7.0 Authentication successful<br>mail from:ioniere@25ni.site<br>250 2.1.0 Ok<br>rcpt to:me@yeonghoon.kim<br>250 2.1.5 Ok<br>data<br>354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;<br>abcdefg_test<br>.<br>250 2.0.0 Ok: queued as 5B15820F78E3<br>quit<br>221 2.0.0 Bye<br>Connection closed by foreign host.<br>&nbsp;</p></blockquote><p>&nbsp;-메일 테스트(계정 인증 X) - 실패</p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>[root@25ni ~]# telnet 222.239.xxx.xxx 587<br>Trying 222.239.xxx.xxx...<br>Connected to 222.239.xxx.xxx.<br>Escape character is \'^]\'.<br>220 mail.25ni.site ESMTP Postfix<br>mail from:ioniere@25ni.site<br>250 2.1.0 Ok<br>rcpt to:me@yeonghoon.kim<br>554 5.7.1 &lt;mail.25ni.pe.kr[115.68.xxx.xxx]&gt;: Client host rejected: Access denied<br>quit<br>221 2.0.0 Bye<br>Connection closed by foreign host.<br></p></blockquote><p>&nbsp;host, user, myhostname, mydomain은 상황에 맞게 수정 후 사용<br><br><br>방화벽 설정은 별도로 진행(25, 587)</p>', '2019-10-04 15:46:00', NULL, 91, NULL),
	(19, 1, 1, '도메인 만료 관련 피싱 메일', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/da07ac6d8eec923b1b4c9d872f828407_1572231802_5239.png" title="da07ac6d8eec923b1b4c9d872f828407_1572231802_5239.png"></p><p>도메인 만료 안내 메일이 와서 확인해보았더니... 영어로 된 메일..<br>실제 사용하고 있는 도메인은 국내도메인(pe.kr)임에도 불구하고... <br>혹시 몰라 리눅스 PC로 해당 링크 확인해보니 카드 결제하라고 뜸.<br></p><p><br style="clear:both;"><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/da07ac6d8eec923b1b4c9d872f828407_1572231802_5571.png" title="da07ac6d8eec923b1b4c9d872f828407_1572231802_5571.png"></p><p>1년 연장하는데 86달러 달라고 하는데... 저돈이면 10년 연장이 가능.....한 것 같은디...;;;</p><p><br></p><p><br style="clear:both;"><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/da07ac6d8eec923b1b4c9d872f828407_1572231802_5906.png" title="da07ac6d8eec923b1b4c9d872f828407_1572231802_5906.png">&nbsp;</p><p><br></p><p>확인 결과 해당 메일은 스피어 피싱인듯...<br style="clear:both;">&nbsp;</p>', '2019-10-06 16:51:00', NULL, 90, NULL),
	(20, 1, 1, '도메인 기관 이전 절차', '<p>도메인 기관을 이전하는 이유는 여러 가지(관리적 측면, 비용적 측면 등)가 있겠지만... 나 같은 경우엔 cafe24에 접속할 일이 없어서 기관 이전 진행.</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_6758.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_6758.png"></p><p>도메인 기관 이전을 위해서는 인증코드(Auth Code)가 필요함</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_7897.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_7897.png">&nbsp;</p><p>도메인 소유자 메일로 발송됨.</p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_8438.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_8438.png">&nbsp;</p><p>인증코드가 도착하면 해당 코드를 가지고 이전하려는 기관에 도메인 기관이전 신청을 하면 됨.</p><p>기관이전 시 도메인 잠금설정이 되어 있을 경우 풀어줘야 함.(<span style="color: #ee2323;" data-mce-style="color: #ee2323;"><b>기관이전 소요 시간 증가 요인1</b></span>)</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_8755.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_8755.png">&nbsp;</p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_9315.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_9315.png">&nbsp;</p><p>도메인 검색</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_9825.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486702_9825.png">&nbsp;</p><p>도메인 정보 입력. 여기에서는 우편번호 검색 기능을 이용해서 자동으로 영문주소가 기입하도록 되어 있지만, 그렇지 않을 경우 직접 입력해야 함. 직업 입력 시 이상하게 기입할 경우 피곤해짐..(<span style="color: #ee2323;" data-mce-style="color: #ee2323;"><b>기관이전 소요 시간 증가 요인2</b></span>)</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_114.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_114.png">&nbsp;</p><p>네임서버 정보 입력 후 확인하기 버튼 누르면 신청 끝.</p><p>기존 네임서버를 계속 사용한다면 기존 네임서버 정보를 입력하면 됨.</p><p><span style="color: #ee2323;" data-mce-style="color: #ee2323;"><b>만약 다른 네임서버를 사용할 거라면 그에 맞는 네임서버 정보 입력 후, 해당 네임서버에 도메인 레코드 설정을 해야 함.</b></span></p><p><br></p><p><br></p><p>기존 기관에서 기관이전 관련 메일을 발송하는 경우 승인처리를 해줘야 정상적으로 진행되므로 메일 확인을 수시로 할 것(<span style="color: #ee2323;" data-mce-style="color: #ee2323;"><b>기관이전 소요 시간 증가 요인3</b></span>)</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_1656.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_1656.png">&nbsp;</p><p>신청 후 일정시간이 지나면 기존 기관에서 기관 이전 동의 메일이 오게 됨.</p><p>이전 진행 페이지 바로가기를 누르면 동의 여부를 묻는 창이 뜸</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3115.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3115.jpg">&nbsp;</p><p>여기에서 동의를 누르면 됨</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3401.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3401.png">&nbsp;</p><p>기관 이전 완료 메일(기존 기관)</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3881.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572486703_3881.jpg">&nbsp;</p><p>이전할 기관에서 안내 메일 도착. 이후 기관 이전 완료됨.</p><p><br></p><p><br></p><p><b>-기관 이전 소요 시간</b></p><p>[비영업일] 일요일 17시 06분 신청 -&gt; [영업일] 월요일 11시 36분 기관 이전 동의 메일 도착 -&gt; 15시 03분 기관 이전 완료 <br></p><p><br></p>', '2019-10-06 17:26:00', NULL, 87, NULL),
	(21, 1, 1, '제습기 - 신일 SDH-PM360', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572487842_8127.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572487842_8127.png"></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>구입일 : 2019-10-06<br>구매비용 : 317,340원(권장 소비자가는 390,000원인듯...)<br>구매이유 : 기존 제습기 물통 깨짐, 노후화<br>장점 : 물받이통 용량이 큼(7.5L). 물받이통이 본체 앞부분에 달려 있음.<br>단점 : 물 비운 후 다시 본체에 넣을 때 인식이 잘 안됨(만수등 표시). -&gt; 물이 중간 이상 차올라서 물비울 때는 문제 없음<br></p></blockquote><p>&nbsp;</p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572487930_9302.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572487930_9302.jpg"></p><p>기존에 사용했던 제습기와 크기 비교. 높이만 길어짐</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572487968_2452.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572487968_2452.png"></p><p>배수 호수. 연속 배수를 할 일이 없으므로 사용 안함.</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572487999_0872.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572487999_0872.png"></p><p>집중 건조 키트. 신발 말릴 때 사용. 매뉴얼에 따르면 2시간 정도 사용 후 30분 사용 중지하라고 되어 있음.</p><p>아마 첫눈이 내릴 때 사용하지 않을까 싶음. <br></p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572488038_8921.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572488038_8921.jpg"></p><p>물받이통. 용량이 매우 크며, 기기 앞에 위치해 있어서 편리함.</p><p>만수시 물통 무게 8.3kg(빈통 1.1kg). 손잡이가 달린 이유가 있음.</p><p><br></p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572488078_3276.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572488078_3276.jpg"></p><p>제습기를 제어할 수 있는 부분. 희망습도(+, _), 기능 선택(인공지능, 의류건조, 신발/집중건조) 버튼 말고는 누를 일이 거의 없음.</p><p>인공지능 - 지정한 습도에 도달하면 콤프레셔가 돌지 않음(바람만 나옴). 비오는 날 집에 있을 때는 50%, 집에 없을 때는 60%으로 돌려놓음.</p><p>의류건조 - 연속 운전 모드. 아마 가장 많이 사용하는 기능이 아닐까 싶음.</p><p>신발/집중건조 - 아마 비가 많이 오거나 눈이 많이 올 때 쓸 듯. 아직 안써봐서 모름.</p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572488106_8875.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572488106_8875.png"></p><p>대기전력 - 0.4 W</p><p><br></p><p><br style="clear:both;"><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572488138_3851.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572488138_3851.png"></p><p>컴프레셔 작동 시 - 245~270 W. 평균적으로 250W 사용한다고 보면 됨.</p><p><br style="clear:both;">&nbsp;</p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572488166_6229.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572488166_6229.png">&nbsp;</p><p>컴프레셔 작동 안할 때 - 30~38w. 평균적으로 35w 전력 소모.</p>', '2019-10-09 19:11:00', NULL, 84, NULL),
	(22, 1, 1, 'CentOS8 dovecot 설치 - centos8_dovecot.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; tasks:<br>&nbsp; - name: dovecot 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: dovecot<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: dovecot.conf 수정(imap, ipv4)<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_dovecot/source/dovecot.conf">http://data.yeonghoon.kim/centos8_dovecot/source/dovecot.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/dovecot/dovecot.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: ssl 끄기<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/dovecot/conf.d/10-ssl.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^ssl = required$\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "ssl = no"<br><br>&nbsp; - name: mail_location 설정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/dovecot/conf.d/10-mail.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^#mail_location = $\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "mail_location = mbox:~/mail:INBOX=/var/mail/%u"<br><br>&nbsp; - name: 메일 사용 가능한 그룹 설정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/dovecot/conf.d/10-mail.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^#mail_privileged_group =$\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "mail_privileged_group = mail"<br><br>&nbsp; - name: plaintext 인증 허용<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/dovecot/conf.d/10-auth.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^#disable_plaintext_auth = yes$\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "disable_plaintext_auth = no"<br><br>&nbsp; - name: dovecot 구동 및 부팅 시 구동되도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: dovecot<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes<br></p></blockquote><p>host, user,은 상황에 맞게 수정 후 사용</p><p><br></p><p>방화벽 설정은 별도로 진행(143)</p><p><br></p><p>메일을 사용할 계정은 mail 그룹에 포함되어 있어야 함. <br></p>', '2019-10-10 18:48:00', NULL, 76, NULL),
	(23, 1, 1, 'CentOS8 nagios 설치(yum/dnf)', '<p>모니터링 서버를 CentOS8로 변경하기 전에 테스트 진행.<br>클라이언트에 설치될 nrpe야 yum으로 설치해도 된다지만(물론 모든 플러그인을 포함할 경우 너무 많은 것들이 설치됨)<br>모니터링 서버에서는 아래 방법을 이용하는 것보다는 소스 설치를 하는 것이 좋을거라 생각함.<br>물론 단독으로 사용할 경우엔 크게 신경 안써도 될 것 같음.<br>방화벽은 설정은 생략(필요 포트 80)</p><p><br></p><p><br></p><p><b>1.&nbsp; epel-release 설치</b>&nbsp;</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">dnf install epel-release <br></blockquote><p><b>2.&nbsp; nagios 설치</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>dnf install nagios</p><p><br></p><p>아래는 같이 설치되는 것들.<br>Installing:<br>&nbsp;nagios&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>Installing dependencies:<br>&nbsp;apr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;apr-util&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;centos-logos-httpd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;gd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;httpd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;httpd-filesystem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;httpd-tools&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;jbigkit-libs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;ibX11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libX11-common&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libXau&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libXpm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libjpeg-turbo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libtiff&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libwebp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;libxcb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;mod_http2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;nginx-filesystem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;php&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;php-cli&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;php-common&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;dejavu-fonts-common&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;dejavu-sans-fonts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;fontconfig&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;fontpackages-filesystem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;mailcap&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;mailx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;nagios-common&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>Installing weak dependencies:<br>&nbsp;apr-util-bdb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;apr-util-openssl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;php-fpm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>Enabling module streams:<br>&nbsp;httpd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;php&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7.2&nbsp; <br> </p></blockquote><p><b>3. 아파치 인증 패스워드 설정</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"># 디폴트 패스워드 파일 백업<br>mv /etc/nagios/passwd /etc/nagios/passwd_old<br><br># nagiosadmin 계정 생성 및 패스워드 지정<br>htpasswd -c /etc/nagios/passwd nagiosadmin <br></blockquote><p><b>&nbsp;4. 서비스 구동</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"># 아파치 구동<br>systemctl enable httpd.service<br>systemctl start httpd.service<br><br># nagios 구동 <br>systemctl enable nagios.service<br>systemctl start nagios.service <br></blockquote><p><b>&nbsp;5. nagios 정상작동하는지 확인</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">-웹 접속<br><a href="http://mydomain/nagios">http://mydomain/nagios</a> <br></blockquote><p>&nbsp;</p>', '2019-10-11 18:46:00', NULL, 77, NULL),
	(24, 1, 1, '맥 카탈리나 사이드카 구동 시 속도 저하 문제', '<p><b>1. &nbsp;speedcheck 속도 체크</b></p><p><b><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572493290_7385.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572493290_7385.png"></b></p><p>사이드카 off</p><p><br></p><p><b><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572493317_3207.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572493317_3207.png"></b></p><p>사이드카 on</p><p><br></p><p><br><b><b>2. speedtest.net 속도 체크</b></b></p><p><b><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572493336_059.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572493336_059.png"></b></p><p>사이드카 off</p><p><b><br style="clear:both;"></b></p><p><b><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572493347_7984.png" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572493347_7984.png"></b></p><p>사이드카 on</p>', '2019-10-12 12:46:00', NULL, 89, NULL),
	(25, 1, 1, '맥 카탈리나 업그레이드 이후 svn 작동 안되는 현상 해결법', '<p><b>1. 문제</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">gim-yeonghun-ui-MacBookAir:~ ioniere$ svn<br>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun <br></blockquote><p><b>2. 해결</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">xcode-select --install <br></blockquote><p>업데이트 이후 svn 명령이 안먹히는 문제 발생.<br>명령어 라인 도구 설치 다시 함.<br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>', '2019-10-13 13:46:00', NULL, 132, NULL),
	(26, 1, 1, '마우스 - 애플 매직마우스2', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572501049_0075.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572501049_0075.jpg"></p><p><br></p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>구입일 : 201910-13<br>구입비용 : 80,000원(정가는 89,000원인듯)<br>구매이유 : 맥북에어 트랙패드가 간단한 작업하기는 괜찮으나, 문서 작업하기에는 조금 불편,<br>장점 : 솔직히 없음. 이쁘다...?<br>단점 : 그립감(일반 마우스랑 잡는 방법이 다름. 아랫부분을 잡아야 함. 중간에 클릭 버튼이 있다고 생각하는 게 편함.)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 감도(1만원대 저가형 마우스보다 감도가 안좋음. 말로 표현하기는 어렵고 직접 써보면 됨. 유료 앱을 사서 쓰면 감도 조절 가능하다고 함)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 가격(이돈 주고 살만한 제품은 아님)<br></p></blockquote><p>&nbsp;<img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572501094_0561.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572501094_0561.jpg"></p><p>구성품은 마우스와 라이트닝 케이블(충전용)<br></p><p><br></p><p><br></p><p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572501125_5269.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572501125_5269.jpg"></p><p>마우스 아랫부분. 충전할 수 있는 단자와 on/off 스위치.</p><p><br></p><p>작년 12월 제품이긴 하지만... 영수증 첨부하면 as는 될테니까.. 상관은 없을듯.<br style="clear:both;">&nbsp;</p>', '2019-10-13 14:18:00', NULL, 75, NULL),
	(27, 1, 1, 'CentOS8 bind 설치 - centos8_bind.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; tasks:<br><br>&nbsp; - name: bind 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'bind\', \'bind-chroot\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: bind-chroot on<br>&nbsp;&nbsp;&nbsp; command: /usr/libexec/setup-named-chroot.sh /var/named/chroot on<br><br>&nbsp; - name: /etc/sysconfig/named 수정 - ipv4만 사용&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; blockinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/sysconfig/named<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: |<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OPTIONS="-4"<br><br>&nbsp; - name: named.conf 복사<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_bind/source/named.conf">http://data.yeonghoon.kim/centos8_bind/source/named.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/named.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: named.conf 수정 관련 스크립트<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_bind/source/named_ip_add.sh">http://data.yeonghoon.kim/centos8_bind/source/named_ip_add.sh</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /tmp/named_ip_add.sh<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: named.conf 수정 스크립트 실행<br>&nbsp;&nbsp;&nbsp; command: sh /tmp/named_ip_add.sh<br><br>&nbsp; - name: named-chroot 구동 및 부팅 시 구동되도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: named-chroot<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes <br></blockquote><p>&nbsp;host, user은 상황에 맞게 수정 후 사용<br>방화벽 설정은 별도로 진행(53)<br>zone파일 추가, named.rfc1912.zone&nbsp; 수정 후 사용</p>', '2019-10-15 18:47:00', NULL, 96, NULL),
	(28, 1, 1, 'CentOS8 pdns 설치 - centos8_pdns.yml', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">---<br>- hosts: centos8_init<br>&nbsp; user: ioniere<br>&nbsp; become: yes<br><br>&nbsp; vars:<br>&nbsp;&nbsp;&nbsp; root_db_pass: secret<br>&nbsp;&nbsp;&nbsp; pdns_db_pass: secretpdns<br><br>&nbsp; tasks:<br><br>&nbsp; - name: epel-release 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: epel-release<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: pdns 설치<br>&nbsp;&nbsp;&nbsp; yum:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: [\'pdns\', \'pdns-backend-mysql\']<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: latest<br><br>&nbsp; - name: pdns.conf 다운로드<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_pdns/source/pdns.conf">http://data.yeonghoon.kim/centos8_pdns/source/pdns.conf</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /etc/pdns/pdns.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: pdns 기본 디비 구성 파일 다운로드<br>&nbsp;&nbsp;&nbsp; get_url:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: <a href="http://data.yeonghoon.kim/centos8_pdns/source/pdns_db_setup.sql">http://data.yeonghoon.kim/centos8_pdns/source/pdns_db_setup.sql</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dest: /tmp/pdns_db_setup.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force: yes<br><br>&nbsp; - name: pdns.conf 디비 사용자 패스워드 입력<br>&nbsp;&nbsp;&nbsp; blockinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /etc/pdns/pdns.conf<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insertafter: EOF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; block: |<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gmysql-password={{ pdns_db_pass }}<br><br>&nbsp; - name: mysql 루트 패스워드 설정<br>&nbsp;&nbsp;&nbsp; lineinfile:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /tmp/pdns_db_setup.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regexp: \'^GRANT\'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line: "GRANT ALL PRIVILEGES ON pdns.* TO pdns@localhost IDENTIFIED BY \'{{ pdns_db_pass }}\';"<br><br>&nbsp; - name: pdns 디비 구성<br>&nbsp;&nbsp;&nbsp; shell: "mysql -uroot -p{{ root_db_pass }} &lt; /tmp/pdns_db_setup.sql"<br><br>&nbsp; - name: pdns_db_setup 삭제<br>&nbsp;&nbsp;&nbsp; file:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path: /tmp/pdns_db_setup.sql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: absent<br><br>&nbsp; - name: pdns 구동 및 부팅 시 구동되도록 설정<br>&nbsp;&nbsp;&nbsp; service:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: pdns<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state: started<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled: yes <br></blockquote><p>&nbsp;host, user, root_db_passwd, pdns_db_passwd는 상황에 맞게 수정<br>로컬에 mysql 설치가 되어 있어야 하며, root 계정으로 디비 제어가 가능해야 함.<br><br>root_db_passwd는 해당 서버의 디비 루트 패스워드<br>pdns_db_passwd는 원하는 패스워드<br><br>방화벽 설정은 별도로 진행(53)</p>', '2019-10-16 16:17:00', NULL, 79, NULL),
	(29, 1, 1, 'rsync 전송 에러 트러블슈팅', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">&lt;클라이언트 로그&gt;<br>rsync: read error: Connection reset by peer (104)<br>rsync error: error in rsync protocol data stream (code 12) at io.c(849) [receiver=3.0.9]<br>rsync error: rsync service is no running (code 43) at io.c(687) [generator=3.0.9]<br><br>&nbsp;&lt;서버 로그&gt;<br>Oct 17 10:34:35 localhost rsyncd[16491]: rsync: writefd_unbuffered failed to write 4 bytes to socket [sender]: Connection reset by peer (104)<br>Oct 17 10:34:35 localhost rsyncd[16491]: rsync error: timeout in data send/receive (code 30) at io.c(200) [sender=3.0.6]<br>Oct 17 10:34:35 localhost rsyncd[16491]: rsync error: error in rsync protocol data stream (code 12) at io.c(1525) [sender=3.0.6] <br></blockquote><p>&nbsp;얼마전까지만 해도 문제가 없었는데 갑자기 발생한 문제.<br>일단 /etc/rsyncd.conf에서 timeout 시간을 1200(20분 - 4배 증가시킴)으로 지정 후 해결됨.<br>다른 백업서버도 설정 동일하고, 용량도 비슷한데 유독 이서버만 문제.</p>', '2019-10-17 15:37:00', NULL, 91, NULL),
	(30, 1, 1, 'PowerDNS  유저 패스워드 변경', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">#DB 선택<br>mysql&gt; use pdns;<br><br>#유저 확인<br>mysql&gt; SELECT `username` FROM `users`;<br><br>#유저 패스워드 변경<br>mysql&gt; UPDATE `users` SET `password` = MD5(\'password\') WHERE `username` = \'admin\'; <br></blockquote><p>&nbsp;위의 예시는 admin 계정의 패스워드를 password로 바꾼다는 의미임.</p>', '2019-10-18 14:10:00', NULL, 78, NULL),
	(31, 1, 1, 'nagios-plugins-disk - dfree_units 0 0 버그', '<p>nagios-plugins-disk-2.2.1에서 발생하는 문제<br>2.2.2 버전에서 해결됨. 10월 2일까지만 해도 2.2.1 버전 다운로드 되었으나, 금일 확인 결과 2.2.2 버전 다운로드 됨.</p><p><br></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">yum update -y nagios-plugins-disk</pre></div><p><br></p>', '2019-10-21 14:46:00', NULL, 102, NULL),
	(32, 1, 1, '배달의민족 사용 금액', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572511103_8711.jpeg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572511103_8711.jpeg">&nbsp;</p><p>....<br></p>', '2019-10-31 17:38:34', NULL, 88, NULL),
	(33, 1, 1, '20191022 민방위', '<p><img width="100%" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1910/bf5a441ead188a014eeca1e9fa5cdb7a_1572502490_5216.jpg" title="bf5a441ead188a014eeca1e9fa5cdb7a_1572502490_5216.jpg"><br style="clear:both;">&nbsp;</p>', '2019-10-22 12:58:00', NULL, 76, NULL),
	(34, 1, 1, 'CentOS8 Let\'s Encrypt 적용 - nginx, certbot 이용', '<p><b>1. mod_s​sl 설치</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">yum install -y mod_ssl</pre></div><p><br></p><p><b>2. Certbot 설치</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">mkdir /usr/local/certbot\r\ncd /usr/local/certbot\r\nwget https://dl.eff.org/certbot-auto\r\nchmod 755 certbot-auto</pre></div><p><br></p><p><b>3. Certbot 사용전 업데이트(단순 실행)</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">./certbot-auto</pre></div><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>Error while running apachectl configtest.<br><br>AH00526: Syntax error on line 85 of /etc/httpd/conf.d/ssl.conf:<br>SSLCertificateFile: file \'/etc/pki/tls/certs/localhost.crt\' does not exist or is empty<br><br><br>How would you like to authenticate and install certificates?<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>1: Apache Web Server plugin (apache) [Misconfigured]<br>2: Nginx Web Server plugin (nginx)<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>Select the appropriate number [1-2] then [enter] (press \'c\' to cancel): <b><span style="color: rgb(255, 0, 0);">c</span></b></p><p><br></p><p><b><span style="color: rgb(255, 0, 0);">*일단 기본 패키지 설치를 위해 실행한 것이므로 여기서 중단</span></b>&nbsp;</p></blockquote><p><b>4. nginx 플러그인을 이용하여 인증서 발급</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">./certbot-auto --nginx --register-unsafely-without-email</pre></div><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>Please read the Terms of Service at<br><a href="https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf.">https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf.</a> You must<br>agree in order to register with the ACME server at<br><a href="https://acme-v02.api.letsencrypt.org/directory">https://acme-v02.api.letsencrypt.org/directory</a><br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br><b><span style="color: rgb(255, 0, 0);">(A)gree</span></b>/(C)ancel: a<br><br><br><br>Which names would you like to activate HTTPS for?<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>1: db.25ni.pe.kr<br>2: dns.25ni.pe.kr<br>3: mail.25ni.pe.kr<br><b><span style="color: rgb(255, 0, 0);">4: yeonghoon.kim</span></b><br>5: data.yeonghoon.kim<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>Select the appropriate numbers separated by commas and/or spaces, or leave input<br>blank to select all options shown (Enter \'c\' to cancel): <b><span style="color: rgb(255, 0, 0);">4</span></b><br><br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>1: No redirect - Make no further changes to the webserver configuration.<br><b><span style="color: rgb(255, 0, 0);">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for</span><br><span style="color: rgb(255, 0, 0);">new sites, or if you\'re confident your site works on HTTPS. You can undo this</span><br><span style="color: rgb(255, 0, 0);">change by editing your web server\'s configuration.</span></b><br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>Select the appropriate number [1-2] then [enter] (press \'c\' to cancel):<b><span style="color: rgb(255, 0, 0);">2</span></b> <br></blockquote><p>&nbsp;리다이렉트를 선택할 경우 알아서 nginx 설정을 바꿔줌.</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">&nbsp;server {<br>&nbsp;&nbsp;&nbsp; if ($host = yeonghoon.kim) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 301 <a href="https://$host$request_uri;">https://$host$request_uri;</a><br>&nbsp;&nbsp;&nbsp; } # managed by Certbot<br><br><br>&nbsp;&nbsp;&nbsp; listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 80;<br>&nbsp;&nbsp;&nbsp; server_name&nbsp; yeonghoon.kim;<br>&nbsp;&nbsp;&nbsp; return 404; # managed by Certbot<br>} <br></blockquote><p><b>&nbsp;5. nginx 재구동 후 정상적으로 작동하는지 확인</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">service nginx restart</pre></div><p><br></p><p><br></p><p>nginx 패키지 설치 기준이므로 소스 설치를 했을 경우 수동으로 발급할 것<br></p>', '2019-10-31 18:27:56', NULL, 137, NULL),
	(35, 1, 1, 'IIS 503 에러 - 응용프로그램풀 죽는 현상', '<p>다른 문제(php, db 등)가 없음에도 불구하고, 503 에러가 나는 것을 확인.</p><p>이벤트 뷰어 확인 시 iis 사이트에서 지정한 응용프로그램 풀이 죽는 것을 확인할 수 있었음.</p><p>해결 못해서 그냥 백업된 이미지로 복구</p><p><br></p><p><br></p><p>-해결 시도 1 : 실패<br></p><p><a href="https://support.microsoft.com/ko-kr/help/4050891/error-http-503-and-was-event-5189-from-web-applications-on-windows-10">https://support.microsoft.com/ko-kr/help/4050891/error-http-503-and-was-event-5189-from-web-applications-on-windows-10</a></p><p><br></p><p>-해결 시도 2 : 실패<br></p><p><a href="http://bwlab.kr/kb_s/9601">http://bwlab.kr/kb_s/9601</a>&nbsp;</p><p><br></p><p><br></p>', '2019-11-04 18:16:34', NULL, 126, NULL),
	(36, 1, 1, '엑셀 줄바꿈(alt + enter) 찾기', '<p>찾기 및 바꾸기(Ctrl + F) 실행 후 Ctrl + J를 누르면 됨</p><p>누르면 커서 모양이 바뀜</p><p>| -&gt; .<br></p>', '2019-11-04 10:37:00', NULL, 78, NULL),
	(37, 1, 1, 'nginx 443 -> 80 리다이렉트', '<div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">server {\r\n    listen 443;\r\n    server_name yeonghoon.kim www.yeonghoon.kim;\r\n    rewrite ^ http://yeonghoon.kim;\r\n}</pre></div><p><br></p>', '2019-11-06 18:49:53', NULL, 66, NULL),
	(38, 1, 1, 'sendmail 구동 안되는 현상', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>Nov&nbsp; 7 12:16:19 host-10-101-0-10 sendmail[1098]: My unqualified host name (host-10-101-0-10) unknown; sleeping for retry<br>Nov&nbsp; 7 12:17:19 host-10-101-0-10 sendmail[1098]: unable to qualify my own domain name (host-10-101-0-10) -- using short name<br></p></blockquote><p>/var/log/maillog에 찍히는 에러 메세지</p><p><br></p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>[root@host-10-101-0-10 ~]# hostname<br><b><span style="color: rgb(255, 0, 0);">host-10-101-0-10</span></b></p><p><br></p><p>[root@host-10-101-0-10 ~]# cat /etc/hosts<br>127.0.0.1&nbsp;&nbsp; localhost localhost.localdomain localhost4 localhost4.localdomain4 <b><span style="color: rgb(255, 0, 0);">host-10-101-0-10</span></b><br>::1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; localhost localhost.localdomain localhost6 localhost6.localdomain6 host-10-101-0-1</p></blockquote>/etc/hosts에 현재 사용중인 호스트명 추가해주면 됨', '2019-11-07 15:53:20', NULL, 75, NULL),
	(39, 1, 1, 'SSH 클라이언트 소개 및 서버 접속 방법', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/FzXaSys3qY0" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 15:30:08', '2020-09-11 17:20:17', 54, NULL),
	(40, 1, 1, 'CentOS7 Minimal 설치 및 네트워크 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/5JfYvd4MdGo" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 15:43:06', '2020-09-11 17:16:45', 53, NULL),
	(41, 1, 1, 'CentOS7 설치 후 기본 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/-YZumtnj4Jc" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 15:47:16', '2020-09-11 17:19:52', 52, NULL),
	(42, 1, 1, 'CentOS7 vsftpd 설치 및 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/ZyX78mjW1AY" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 15:56:08', '2020-09-11 17:17:05', 52, NULL),
	(43, 1, 1, 'CentOS7 네트워크 장치명 변경(eth0)', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/wjf2Eb799NU" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:03:53', '2020-09-11 17:17:39', 46, NULL),
	(44, 1, 1, '도메인 구매 및 사용 방법', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/Zpcgu-CadD0" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:07:33', '2020-09-11 17:20:35', 47, NULL),
	(45, 1, 1, 'CentOS7 BIND 설치 및 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/1sZFAE6hJOo" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:12:53', '2020-09-11 17:15:20', 54, NULL),
	(46, 1, 1, 'CentOS7 메일 서버 구축 #1 - Sendmail 설치 및 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/ElUlBGbzonI" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:15:15', '2020-09-11 17:18:33', 43, NULL),
	(47, 1, 1, 'CentOS7 메일 서버 구축 #2 - Dovecot 설치 및 설정', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/_lpxa-nUopw" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:30:07', '2020-09-11 17:19:02', 45, NULL),
	(48, 1, 1, 'CentOS7 메일 서버 구축 #3 - 도메인 레코드 설정 및 수발신 테스트', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/gRVaU80_kiM" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:34:29', '2020-09-11 17:19:28', 36, NULL),
	(49, 1, 1, 'CentOS7 BIND 1차, 2차 구성', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/3BS73reA2GQ" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:50:00', '2020-09-11 17:14:32', 48, NULL),
	(50, 1, 1, 'CentOS7 MariaDB 설치 및 설정(RPM)', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/zqSCJNBg5dc" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:55:53', '2020-09-11 17:16:17', 39, NULL),
	(51, 1, 1, 'CentOS7 Google Authenticator(구글 OTP) SSH 적용', '<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="1280" height="720" src="https://www.youtube.com/embed/yrcJs_n9yaY" frameborder="0" allowfullscreen="" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div>', '2019-11-10 16:59:40', '2020-09-11 17:15:41', 43, NULL),
	(52, 1, 1, '이온큐브 디코더 - https://easytoyou.eu', '<p>이온큐브로 암호화된 소스를 확인할 방법이 있는지 알아보는 중 아래 사이트 발견</p><p><br></p><p><a href="https://easytoyou.eu">https://easytoyou.eu</a></p><p><br></p><p>1달에 10유로인듯... </p><p><br></p><p>테스트 삼아 이온큐브로 암호화된 파일을 데모 사이트에서 돌려보니까 다 풀릴 것 같은 느낌이....(....)</p><p>데모버전 특성상 30줄만 해독이 되어서 정확히는 알 수 없음.</p><p><br></p><p><a href="https://easytoyou.eu/decoders">https://easytoyou.eu/decoders</a></p><p><br></p><p>php 5.3~5.6까지 지원하는듯. 뭐 쓸일이야 없을 것 같지만...<br></p>', '2019-11-10 19:52:34', NULL, 48, NULL),
	(53, 1, 1, 'sendmail 메일 발송 확인 스크립트', '<div align=""><pre style="white-space:pre-wrap" class="brush: xml">#!/bin/bash\r\nMONTH=$(LANG=C date +%b)\r\nTODAY=$(date +%d)\r\nTODAY_SEND_CHECK=$(cat /var/log/maillog | grep authid | grep -E "$MONTH|$TODAY" | wc -l)\r\n\r\nDB_USER=\'sendmail\'\r\nDB_PASSWORD=\'sendmail_pw\'\r\nDB_NAME=\'sendmail\'\r\n\r\n\r\nif [ "${TODAY_SEND_CHECK}" -eq 0 ]\r\n    then\r\n        echo "발송된 메일이 없습니다"\r\n    else\r\n	cat /var/log/maillog | grep authid | grep -E "$MONTH|$TODAY" | awk \'{ print $3,$8,$7 }\' |  awk -F[\\=\\ ] \'{ print $1, $3, $5 }\' | tr -d \'[],\' | awk \'{ print $1,",",$2,",",$3 }\' | tr -d " " &gt; /tmp/sendmail_check.tmp\r\n\r\n    IFS=,\r\n    while read time account ip\r\n        do\r\n            echo "INSERT INTO sendmail (time,account,ip) VALUES (\'$time\', \'$account\', \'$ip\');"\r\n    done &lt; /tmp/sendmail_check.tmp | mysql -u${DB_USER} -p${DB_PASSWORD} ${DB_NAME};\r\n    rm -f /tmp/sendmail_check.tmp\r\n\r\nfi</pre>&nbsp;</div><p>대충 만든 거라 구동 되는 것만 확인함. 하루에 1번(23시 59분) cron 돌릴 용도로 만듦.&nbsp; 아래는 테이블 구조.<br></p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">+---------+-------------+------+-----+---------------------+----------------+<br>| Field&nbsp;&nbsp; | Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Null | Key | Default&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Extra&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>+---------+-------------+------+-----+---------------------+----------------+<br>| id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | int(11)&nbsp;&nbsp;&nbsp;&nbsp; | NO&nbsp;&nbsp; | PRI | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | auto_increment |<br>| date&nbsp;&nbsp;&nbsp; | date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | NO&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp; | current_timestamp() |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| time&nbsp;&nbsp;&nbsp; | time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | NO&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| account | varchar(20) | NO&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| ip&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | varchar(15) | NO&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>+---------+-------------+------+-----+---------------------+----------------+<br>5 rows in set (0.006 sec) <br></blockquote><p>&nbsp;</p>', '2019-11-13 18:57:44', NULL, 154, NULL),
	(54, 1, 1, 'sendmail 스팸 리스트에 올라간 것 해제 - stat=Deferred: 421 Your ip is filtered by RBL.(IP:xxx.xxx.xxx.51)(Caues:https://www.spamhaus.org/query/ip/xxx.xxx.xxx.51)', '<p>네이트에 메일 발송이 안되어서 로그 확인</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">Nov 13 18:34:48 localhost sendmail[25442]: xAD9Yltm025440: to=&lt;ixxxx@nate.com&gt;, ctladdr=&lt;me@yeonghoon.kim&gt; (1004/1004), delay=00:00:01, xdelay=00:00:01, mailer=esmtp, pri=120459, relay=mx1.nate.com. [117.53.114.15], dsn=4.0.0, stat=Deferred<span style="color: rgb(58, 50, 195);">: 421 Your ip is filtered by RBL.(IP:xxx.xxx.xxx.51)(Caues:<a href="https://www.spamhaus.org/query/ip/xxx.xxx.xxx.51)">https://www.spamhaus.org/query/ip/xxx.xxx.xxx.51)</a></span> <br></blockquote><p>&nbsp;링크 확인 후 해당 페이지 접속</p><p><br></p><p><img title="62fab07ea0a3a1fd738aff596427bda4_1573695494_1461.png" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1911/62fab07ea0a3a1fd738aff596427bda4_1573695494_1461.png">&nbsp;</p><p><br></p><p><br></p><p>XBL에 리스트가 있어서 CBL Lookup 클릭</p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">xxx.xxx.xxx.51 was found to be using the following name as the HELO/EHLO\r\nparameter during connections:<b><span style="color: rgb(255, 0, 0);"> "localhost.localdomain".&nbsp;\r\n</span></b>&nbsp;</blockquote><p>실제로 위에 나온 내용처럼 메세지가 발생되는지 확인</p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">telnet xxx.xxx.xxx.51 25<br>Trying xxx.xxx.xxx..51...<br>Connected to xxx.xxx.xxx.51.<br>Escape character is \'^]\'.<br>220 localhost.localdomain ESMTP Sendmail 8.15.2/8.15.2; Thu, 14 Nov 2019 10:43:15 +0900<br><span style="color: rgb(255, 0, 0);">HELO xxx.xxx.xxx.51</span><br><span style="color: rgb(58, 50, 195);">250 localhost.localdomain Hello [접속한 IP], pleased to meet you </span></blockquote><p>localhost.localdomain을 리턴하는 메일서버가 스팸메일을 보내는 경우가 많아 차단된 것이므로 아래 링크를 참고하여 메일 설정 변경</p><p><a href="https://www.abuseat.org/sendmailhelp.html">https://www.abuseat.org/sendmailhelp.html</a></p><p><br></p><div align=""><pre style="white-space:pre-wrap" class="brush: xml">sed -i \'s/#Dj$w.Foo.COM/Djmail.yeonghoon.kim/g\' /etc/mail/sendmail.cf<br>systemctl restart sendmail.service</pre></div><p><br></p><p>수정되었는지 확인</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">telnet xxx.xxx.xxx.51 25<br>Trying xxx.xxx.xxx.51...<br>Connected to xxx.xxx.xxx.51.<br>Escape character is \'^]\'.<br>220 mail.yeonghoon.kim ESMTP Sendmail 8.15.2/8.15.2; Thu, 14 Nov 2019 10:51:55 +0900<br><span style="color: rgb(255, 0, 0);">HELO xxx.xxx.xxx51</span><br><span style="color: rgb(58, 50, 195);">250 mail.yeonghoon.kim Hello [접속한 ip], pleased to meet you. </span></blockquote><p>&nbsp;CBL Lookup 페이지 하단에서 SELF REMOVAL 항목이 존재하여 조치 후 리스트에서 제거 요청</p><p><br></p><p><img title="62fab07ea0a3a1fd738aff596427bda4_1573696952_1849.png" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1911/62fab07ea0a3a1fd738aff596427bda4_1573696952_1849.png"><br style="clear: both;"><img title="62fab07ea0a3a1fd738aff596427bda4_1573696965_8517.png" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/1911/62fab07ea0a3a1fd738aff596427bda4_1573696965_8517.png">&nbsp;</p><p><br></p><p>메일큐 확인 시 발송되지 않은 메일 2통 존재. 시간이 지나면 발송될 것으로 예상됨.</p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">[root@host-10-101-0-10 log]# mailq --help<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /var/spool/mqueue (2 requests)<br>-----Q-ID----- --Size-- -----Q-Time----- ------------Sender/Recipient-----------<br>xAD9kMXb025790&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10 Wed Nov 13 18:46 &lt;me@yeonghoon.kim&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8BITMIME&nbsp;&nbsp; (Deferred: 421 Your ip is filtered by RBL.(IP:xxx.xxx.xxx.51)()<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;xxxx@nate.com&gt;<br>xAD9Yltm025440&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16 Wed Nov 13 18:34 &lt;me@yeonghoon.kim&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8BITMIME&nbsp;&nbsp; (Deferred)<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;xxxx@nate.com&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Total requests: 2 <br></blockquote><p>약 1시간 후 정상적으로 메일 발송된 것을 확인</p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">Nov 14 11:51:52 localhost sendmail[2235]: xAD9kMXb025790: to=&lt;xxxx@nate.com&gt;, ctladdr=&lt;me@yeonghoon.kim&gt; (1004/1004), delay=17:05:29, xdelay=00:00:00, mailer=esmtp, pri=1830452, relay=mx1.nate.com. [117.53.114.15], dsn=2.0.0, stat=Sent (Message accepted for delivery <br></blockquote><p>&nbsp;</p>', '2019-11-14 11:08:42', NULL, 82, NULL),
	(55, 1, 1, 'sendmail 버전 숨기기', '<div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">sed -i \'s%O SmtpGreetingMessage=$j Sendmail $v/$Z; $b%O SmtpGreetingMessage=$j; $b%g\' /etc/mail/sendmail.cf</pre></div><p><br></p><p>-​<b>수정 전</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">ioniere@ioniere-KVM:~$ telnet xxx.xxx.xxx.51 25<br>Trying xxx.xxx.xxx.51...<br>Connected to xxx.xxx.xxx.51.<br>Escape character is \'^]\'.<br>220 mail.yeonghoon.kim ESMTP <span style="color: rgb(58, 50, 195);">Sendmail 8.15.2/8.15.2</span>; Thu, 14 Nov 2019 10:51:55 +0900<br></blockquote><p><b>-수정 후</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>ioniere@ioniere-KVM:~$ telnet xxx.xxx.xxx.51 25<br>Trying xxx.xxx.xxx.51...<br>Connected to xxx.xxx.xxx.51.<br>Escape character is \'^]\'.<br>220 mail.yeonghoon.kim ESMTP <span style="color: rgb(58, 50, 195);">Sendmail</span>; Thu, 14 Nov 2019 14:35:48 +0900<b><br></b></p></blockquote><p><b><br></b></p><p><br></p>', '2019-11-14 14:37:27', NULL, 34, NULL),
	(56, 1, 1, 'ansible 파일 배포 후 크론 등록.yml', '<div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">---\r\n- hosts: file_storage\r\n  user: user\r\n  become: yes\r\n\r\n  tasks:\r\n\r\n  - name: 파일 체크 스크립트 복사\r\n    copy:\r\n        src: /etc/ansible/playbooks/copy_files/storage/storage_file_list.sh\r\n        dest: /etc/cron.d/storage_file_list.sh\r\n        owner: root\r\n        group: root\r\n        mode: 0700\r\n\r\n  - name: cron 등록\r\n    cron:\r\n        name: 파일 리스트 추출\r\n        minute: "00"\r\n        hour: "04"\r\n        user: root\r\n        job: "sh /etc/cron.d/storage_file_list.sh"\r\n</pre></div><p><br></p><p>크론에 등록할 storage_file_list.sh는 작성을 이미 해두었다고 가정함.</p><p>새벽 4시에 크론 동작하도록 설정<br></p>', '2019-11-15 11:38:03', NULL, 37, NULL),
	(57, 1, 1, '메일서버 SSL 적용(sendmail, dovecot)', '<p><b>0. 환경</b>&nbsp;</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>sendmail 8.15.2<br></p><p>dovecot 2.2.36<br></p><p>let\'s encrypt 인증서 사용<br></p></blockquote><p><br></p><p><b>1.&nbsp; /etc/mail/sendmail.cf 수정</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>CACertPath=/etc/letsencrypt/live/mail.yeonghoon.kim<br>CACertFile=/etc/letsencrypt/live/mail.yeonghoon.kim/chain.pem<br>ServerCertFile=/etc/letsencrypt/live/mail.yeonghoon.kim/cert.pem<br>ServerKeyFile=/etc/letsencrypt/live/mail.yeonghoon.kim/privkey.pem<br></p></blockquote><p><br></p><p><b>2. /etc/dovecot/conf.d/10-ssl.conf 수정</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>ssl = yes<br>ssl_cert = &lt;/etc/letsencrypt/live/mail.yeonghoon.kim/cert.pem<br>ssl_key = &lt;/etc/letsencrypt/live/mail.yeonghoon.kim/privkey.pem<br>ssl_ca = &lt;/etc/letsencrypt/live/mail.yeonghoon.kim/chain.pem<br></p></blockquote><p><br></p><p><b>3. 데몬 재구동</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>systemctl restart sendmail.service</p><p>systemctl restart dovecot.service</p></blockquote>', '2019-11-18 17:21:31', NULL, 33, NULL),
	(58, 1, 1, 'nginx 설정에서 특정 User-Agent 차단', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>server {<br>&nbsp;&nbsp;&nbsp; server_name&nbsp; yeonghoon.kim;<br><br>&nbsp;&nbsp;&nbsp; if ($http_user_agent ~* (<span style="color: rgb(255, 0, 0);">AhrefsBot</span>) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 403;<br>&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp; .</p><p>&nbsp;&nbsp;&nbsp;&nbsp; .<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp; .</p><p>&nbsp;&nbsp;&nbsp;&nbsp; .</p><p>} <br></p></blockquote><p>AhrefsBot 차단 예시임. robots.txt에 수집해가지 말라고 했는데 계속 접근해서 적용함.<br></p><p><br></p><p><b><br></b></p><p><b>-적용 전 로그</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>54.36.150.17 - - [15/Nov/2019:17:18:54 +0900] "GET /bbs/board.php?bo_table=board&amp;sop=and&amp;sst=wr_datetime&amp;sod=desc&amp;sfl=&amp;stx=&amp;sca=domain&amp;page=1 HTTP/2.0" <b><span style="color: rgb(255, 0, 0);">200</span></b> 11823 "-" "Mozilla/5.0 (compatible; <b><span style="color: rgb(58, 50, 195);">AhrefsBot</span></b>/6.1; +<a href="http://ahrefs.com/robot/)">http://ahrefs.com/robot/)</a>" "-"<b><br></b></p></blockquote><p><b>-적용 후 로</b>그</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"> 54.36.148.11 - - [15/Nov/2019:17:39:55 +0900] "GET /robots.txt HTTP/1.1" <b><span style="color: rgb(255, 0, 0);">403</span></b> 162 "-" "Mozilla/5.0 (compatible; <b><span style="color: rgb(58, 50, 195);">AhrefsBot</span></b>/6.1; +<a href="http://ahrefs.com/robot/)">http://ahrefs.com/robot/)</a>" "-"<br></blockquote><p><br></p>', '2019-11-15 18:33:45', NULL, 50, NULL),
	(59, 1, 1, 'ls 시간 표시 지정', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>--time-style=TIME_STYLE<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; time/date format with -l; see TIME_STYLE below<br></p><p>full-iso, long-iso, iso, locale, +FORMAT</p></blockquote><p>man에 나와있는 설명. -l 옵션과 같이 써야함.</p><p><br></p><p><br></p><p>아래는 사용 예시</p><p><br></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p> [root@host-10-101-0-10 yeonghoon.kim]# ls -l <b><span style="color: rgb(233, 125, 129);">--time-style=full-iso</span></b><br>합계 12<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(233, 125, 129);">2019-11-18 03:43:01.525012082 +0900</span></b> db_backup<br>drwxr-xr-x 18 ioniere ioniere 4096 <b><span style="color: rgb(233, 125, 129);">2019-11-18 10:41:58.360339510 +0900</span></b> public_html<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(233, 125, 129);">2019-11-18 03:43:01.644013163 +0900</span></b> source_back</p><p><br></p><p><br></p><p>[root@host-10-101-0-10 yeonghoon.kim]# ls -l <b><span style="color: rgb(0, 158, 37);">--time-style=long-iso</span></b><br>합계 12<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(0, 158, 37);">2019-11-18 03:43</span></b> db_backup<br>drwxr-xr-x 18 ioniere ioniere 4096 <b><span style="color: rgb(0, 158, 37);">2019-11-18 10:41</span></b> public_html<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(0, 158, 37);">2019-11-18 03:43</span></b> source_backup</p><p><br></p><p><br></p><p>[root@host-10-101-0-10 yeonghoon.kim]# ls -l <b><span style="color: rgb(255, 0, 0);">--time-style=iso</span></b><br>합계 12<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(255, 0, 0);">11-18 03:43</span></b> db_backup<br>drwxr-xr-x 18 ioniere ioniere 4096 <b><span style="color: rgb(255, 0, 0);">11-18 10:41</span></b> public_html<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(255, 0, 0);">11-18 03:43</span></b> source_backup<br></p><p><br></p><p><br></p><p>[root@host-10-101-0-10 yeonghoon.kim]# ls -l <b><span style="color: rgb(0, 117, 200);">--time-style=\'+%Y%m%d\'</span></b><br>합계 12<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(0, 117, 200);">20191118</span></b> db_backup<br>drwxr-xr-x 18 ioniere ioniere 4096 <b><span style="color: rgb(0, 117, 200);">20191118</span></b> public_html<br>drwxr-xr-x&nbsp; 2 ioniere ioniere 4096 <b><span style="color: rgb(0, 117, 200);">20191118</span></b> source_backup<br></p></blockquote>', '2019-11-18 12:40:57', NULL, 30, NULL),
	(60, 1, 1, 'dovecot imaps(993) 비활성화', '<p>/etc/dovecot/conf.d/10-master.conf 수정</p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">service imap-login {<br>&nbsp; inet_listener imap {<br>&nbsp;&nbsp;&nbsp; #port = 143<br>&nbsp; }<br><span style="background-color: rgb(255, 167, 0); color: rgb(255, 255, 255);">&nbsp; inet_listener imaps {</span><br><span style="background-color: rgb(255, 167, 0); color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp; <b><span style="color: rgb(255, 0, 0);">port = 0</span></b></span><br><span style="background-color: rgb(255, 167, 0); color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp; #ssl = yes</span><br><span style="background-color: rgb(255, 167, 0); color: rgb(255, 255, 255);">&nbsp; }</span><br>} <br></blockquote><p>imaps 부분에서 #port = 993 을 port = 0으로 변경 후 저장<br></p>', '2019-11-18 17:39:31', NULL, 24, NULL),
	(61, 1, 1, 'smtp ip 차단 스크립트', '<div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">#!/bin/bash\r\nBLOCK_IP=\'/tmp/smtp_block_list.txt\'\r\n\r\nif [ $(ipset --list | wc -l) -eq 0 ]\r\nthen\r\n    ipset -N block_smtp iphash\r\n    iptables -I RH-Firewall-1-INPUT -p tcp --match multiport --dport 25,587 -m set --match-set block_smtp src -j DROP\r\nfi\r\n\r\ncat /var/log/maillog* | grep "did not" | grep -v \'115.68.233.16\' | awk -F[\\[] \'{ print $3 }\' | awk -F[\\]] \'{ print $1 }\' | sort -u | tr -d \' \' &gt; ${BLOCK_IP}\r\n\r\nfor IPSET_ADD in $( cat ${BLOCK_IP} )\r\ndo\r\n    ipset -! add block_smtp ${IPSET_ADD}\r\ndone</pre></div><p><br></p><p>[xxx.xxx.xxx.xxx] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA 로그 발생시키는 ip 차단하는 스크립트<br></p><p>smtp 모니터링 서버인 115.68.233.16은 예외 처리 함.</p><p><br></p><p>ipset을 iptables에서 사용할 수 있어야 함.</p><p>iptables 체인에 맞게 수정해서 사용하면 됨.</p><p><br></p><p><br></p><p><br></p><p><b>-적용 일주일 후 ipset에 추가된 ip</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">[root@host-10-101-0-10 yeonghoon.kim]# ipset --list<br>Name: <b><span style="color: rgb(255, 0, 0);">block_smtp</span></b><br>Type: hash:ip<br>Revision: 4<br>Header: family inet hashsize 1024 maxelem 65536<br>Size in memory: 7128<br>References: 1<br><b><span style="color: rgb(255, 0, 0);">Number of entries: 160</span></b><br>Members:<br>159.203.201.190<br>159.203.201.60<br>185.36.81.246<br>185.36.81.252<br>159.203.201.131<br>111.75.149.221<br>159.203.201.29<br>125.74.69.229<br>45.82.153.135<br>198.143.158.82<br>193.188.22.220<br>78.128.113.121<br>92.118.38.55<br>159.203.201.179<br>221.4.146.171<br>45.79.25.214<br>159.203.193.245<br>103.253.42.48<br>83.97.20.49<br>45.125.65.80<br>71.6.199.23<br>59.39.177.195<br>198.108.66.161<br>185.36.81.232<br>159.203.201.125<br>104.152.52.23<br>106.52.236.249<br>183.238.53.242<br>45.125.65.34<br>219.135.139.244<br>106.38.91.195<br>159.203.201.242<br>18.223.203.37<br>159.203.201.12<br>193.106.29.130<br>103.253.42.39<br>223.71.167.62<br>51.91.212.79<br>45.82.153.134<br>138.68.212.139<br>211.104.168.218<br>34.221.154.203<br>45.125.65.58<br>185.142.236.34<br>109.64.71.76<br>159.203.201.154<br>113.69.207.43<br>185.156.177.52<br>159.203.201.81<br>117.50.6.160<br>123.31.26.113<br>185.234.219.81<br>219.135.139.242<br>172.105.4.227<br>103.253.42.34<br>159.203.201.138<br>159.203.201.194<br>178.73.203.17<br>198.108.66.32<br>3.133.147.51<br>71.6.232.5<br>61.7.231.24<br>185.234.218.210<br>60.2.99.126<br>115.85.213.217<br>185.36.81.242<br>45.125.65.82<br>45.10.90.29<br>139.162.99.243<br>208.100.26.233<br>121.33.247.107<br>219.150.116.52<br>219.135.139.245<br>45.82.153.76<br>185.36.81.248<br>212.83.146.233<br>45.82.153.133<br>198.108.66.112<br>185.36.81.231<br>45.82.153.77<br>125.45.11.247<br>178.73.215.171<br>91.134.145.129<br>218.77.104.37<br>198.108.66.80<br>101.89.109.136<br>111.231.85.239<br>45.141.84.18<br>141.98.10.62<br>185.36.81.251<br>198.108.66.224<br>89.248.169.12<br>84.201.160.82<br>198.108.66.208<br>208.100.26.231<br>223.71.167.154<br>112.45.122.8<br>103.254.153.113<br>198.143.155.138<br>111.225.0.208<br>159.203.201.227<br>5.254.150.37<br>211.150.70.18<br>222.161.221.230<br>46.38.144.202<br>89.248.168.112<br>101.89.216.223<br>159.203.201.45<br>159.203.201.32<br>61.107.72.165<br>60.190.226.188<br>58.57.4.238<br>185.227.6.42<br>185.36.81.243<br>185.36.81.16<br>141.98.10.61<br>60.19.64.10<br>195.154.61.206<br>18.237.175.136<br>159.203.193.244<br>159.203.201.122<br>193.188.22.216<br>185.36.81.245<br>93.116.235.14<br>221.0.232.118<br>122.228.19.80<br>185.36.81.250<br>61.142.247.210<br>80.82.70.118<br>172.105.80.151<br>185.36.81.236<br>95.211.105.203<br>159.203.201.47<br>111.39.27.219<br>71.6.232.4<br>185.36.81.233<br>159.203.201.64<br>159.203.197.15<br>141.98.10.55<br>141.98.10.60<br>104.236.247.64<br>185.36.81.229<br>51.91.212.81<br>80.82.77.139<br>159.203.197.28<br>159.203.197.22<br>92.118.38.54<br>185.36.81.230<br>94.102.57.137<br>45.82.153.78<br>103.253.42.44<br>208.100.26.237<br>218.4.239.146<br>61.172.142.58<br>80.82.77.232<br>159.203.201.94<br>164.52.24.168<br>123.233.246.52<br>185.216.140.7<br>193.56.28.176 <br></blockquote><p><br></p>', '2019-11-19 18:27:02', NULL, 37, NULL),
	(62, 1, 1, 'svn 인증 시 yes를 입력해도 다시 물을 경우', '<blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">[root@host-10-101-0-10 ~]# svn checkout svn://localhost:3690/yeonghoon.kim test<br>인증 영역(realm): &lt;svn://localhost:3690&gt; yeonghoon.kim Repository<br>\'root\'의 암호:<br><br>인증 영역(realm): &lt;svn://localhost:3690&gt; yeonghoon.kim Repository<br>사용자명:ioniere<br>\'ioniere\'의 암호:**********<br><br><br>-----------------------------------------------------------------------<br>주의! 인증정보 영역:<br><br>&nbsp;&nbsp; &lt;svn://localhost:53690&gt; yeonghoon.kim Repository<br><br>에 대한 당신의 비밀번호는 디스크에 암호화되어 저장되지 않습니다.<br>가능하면, 비밀번호를 암호화하여 저장하도록 설정을 바꾸십시오.<br>자세한 것은 문서를 참조하세요.<br><br>이 주의 문구를 다음에 보이지 않게 하려면, \'store-plaintext-passwords\'의<br>설정을 \'yes\' 혹은 \'no\'로 지정하면 됩니다. 설정 파일은 다음과 같습니다.<br>\'/root/.subversion/servers\'<br>-----------------------------------------------------------------------<br>비밀번호를 평문으로 저장하겠습니까 (yes/no)?<b><span style="color: rgb(255, 0, 0);">yes</span></b>&nbsp;</blockquote><p>&nbsp;가끔 yes를 입력을 해도 다시 물어보는 경우가 있음. 그럴 땐 한글로 <b><span style="color: rgb(255, 0, 0);">예<span style="color: rgb(0, 0, 0);"> </span></span></b><span style="color: rgb(255, 0, 0);"><span style="color: rgb(0, 0, 0);">입력하면 됨.</span></span>&nbsp;</p>', '2019-11-20 17:54:54', NULL, 31, NULL),
	(63, 1, 1, '엑셀 취소선 단축키 - Ctrl+5', '<p>엑셀 취소선 단축키 - Ctrl+5<br></p>', '2019-11-21 15:23:45', NULL, 24, NULL),
	(64, 1, 1, 'centos8 ncdu 설치(source)', '<p>epel 저장소 설치 후 yum install -y ncdu 해도 되나, 여기에서는 컴파일함.</p><p><br></p><p><br></p><p><b>1. 필수 라이브러리 설치</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">dnf install -y gcc* ncurses-devel</pre></div><p><br></p><p><br></p><p><b>2. 소스 다운로드 및 설치</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">cd /usr/local/src\r\nwget https://dev.yorhel.nl/download/ncdu-1.14.1.tar.gz\r\ntar zxvf ncdu-1.14.1.tar.gz\r\ncd ncdu-1.14.1\r\n./configure\r\nmake\r\nmake install</pre></div><p><br></p><p><br></p><p><b>3. 링크 걸기(기본 경로 /usr/local/bin/ncdu)</b></p><div style="" align=""><pre style="white-space:pre-wrap" class="brush: xml">ln -s /usr/local/bin/ncdu /usr/bin/ncdu</pre></div><p><br></p><p><br></p><p><b>4. ncdu 사용 방법<br></b></p><p><b><br></b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">[root@host-10-101-0-10 ncdu-1.14.1]# ncdu --help<br>ncdu &lt;options&gt; &lt;directory&gt;<br><br>&nbsp; -h,--help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This help message<br>&nbsp; -q&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Quiet mode, refresh interval 2 seconds<br>&nbsp; -v,-V,--version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Print version<br>&nbsp; -x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Same filesystem<br>&nbsp; -e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Enable extended information<br>&nbsp; -r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Read only<br>&nbsp; -o FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Export scanned directory to FILE<br>&nbsp; -f FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Import scanned directory from FILE<br>&nbsp; -0,-1,-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UI to use when scanning (0=none,2=full ncurses)<br>&nbsp; --si&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Use base 10 (SI) prefixes instead of base 2<br>&nbsp; --exclude PATTERN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exclude files that match PATTERN<br>&nbsp; -X, --exclude-from FILE&nbsp;&nbsp;&nbsp; Exclude files that match any pattern in FILE<br>&nbsp; -L, --follow-symlinks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Follow symbolic links (excluding directories)<br>&nbsp; --exclude-caches&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exclude directories containing CACHEDIR.TAG<br>&nbsp; --confirm-quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Confirm quitting ncdu<br>&nbsp; --color SCHEME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set color scheme <br></blockquote><p>&nbsp;</p>', '2019-11-28 12:38:10', NULL, 28, NULL),
	(65, 1, 1, 'logger - 커스텀 로그 찍기', '<p><b>1. 사용법</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">Usage:<br>&nbsp;logger [options] [&lt;message&gt;]<br><br>Enter messages into the system log.<br><br>Options:<br>&nbsp;-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log the logger command\'s PID<br>&nbsp;&nbsp;&nbsp;&nbsp; --id[=&lt;id&gt;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log the given &lt;id&gt;, or otherwise the PID<br>&nbsp;-f, --file &lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log the contents of this file<br>&nbsp;-e, --skip-empty&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do not log empty lines when processing files<br>&nbsp;&nbsp;&nbsp;&nbsp; --no-act&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do everything except the write the log<br>&nbsp;-p, --priority &lt;prio&gt;&nbsp;&nbsp;&nbsp; mark given message with this priority<br>&nbsp;&nbsp;&nbsp;&nbsp; --octet-count&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use rfc6587 octet counting<br>&nbsp;&nbsp;&nbsp;&nbsp; --prio-prefix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; look for a prefix on every line read from stdin<br>&nbsp;-s, --stderr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output message to standard error as well<br>&nbsp;-S, --size &lt;size&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maximum size for a single message<br>&nbsp;-t, --tag &lt;tag&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mark every line with this tag<br>&nbsp;-n, --server &lt;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write to this remote syslog server<br>&nbsp;-P, --port &lt;port&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use this port for UDP or TCP connection<br>&nbsp;-T, --tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use TCP only<br>&nbsp;-d, --udp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use UDP only<br>&nbsp;&nbsp;&nbsp;&nbsp; --rfc3164&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; use the obsolete BSD syslog protocol<br>&nbsp;&nbsp;&nbsp;&nbsp; --rfc5424[=&lt;snip&gt;]&nbsp;&nbsp; use the syslog protocol (the default for remote);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;snip&gt; can be notime, or notq, and/or nohost<br>&nbsp;&nbsp;&nbsp;&nbsp; --sd-id &lt;id&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rfc5424 structured data ID<br>&nbsp;&nbsp;&nbsp;&nbsp; --sd-param &lt;data&gt;&nbsp;&nbsp;&nbsp; rfc5424 structured data name=value<br>&nbsp;&nbsp;&nbsp;&nbsp; --msgid &lt;msgid&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set rfc5424 message id field<br>&nbsp;-u, --socket &lt;socket&gt;&nbsp;&nbsp;&nbsp; write to this Unix socket<br>&nbsp;&nbsp;&nbsp;&nbsp; --socket-errors[=&lt;on|off|auto&gt;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print connection errors when using Unix sockets<br>&nbsp;&nbsp;&nbsp;&nbsp; --journald[=&lt;file&gt;]&nbsp; write journald entry<br><br>&nbsp;-h, --help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display this help<br>&nbsp;-V, --version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display version<br><br>For more details see logger(1). <br></blockquote><p><br></p><p><b>2. 사용 예시</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>#!/bin/bash<br></p><p>HELLO_ROOT=$(echo "<b><span style="color: rgb(0, 158, 37);">[ $( hostname -I )] $(date \'+%Y-%m-%d %H:%M:%S\') ROOT_LOGIN - $(w | awk \'{ print $3 }\' | tail -n 1)</span></b>")<br>CONNECT_USER=$(w | grep pts | wc -l)<br><br>if [ "${CONNECT_USER}" -ge 1 ]<br>then<br><b><span style="color: rgb(255, 0, 0);">&nbsp;&nbsp;&nbsp; logger -p local6.notice -t <span style="color: rgb(58, 50, 195);">HELLO_ROOT</span> ${HELLO_ROOT}</span></b><br>fi </p></blockquote><p><br></p><p><b>3. 적용 확인(/var/log/messsage)</b></p><blockquote class=se2_quote10 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;">Nov 28 14:17:41 localhost <b><span style="color: rgb(58, 50, 195);">HELLO_ROOT</span></b>[5436]: <b><span style="color: rgb(0, 158, 37);">[ 10.101.0.10 ] 2019-11-28 14:17:41 ROOT_LOGIN - xxx.xxx.xxx.xxx </span></b>&nbsp;</blockquote>', '2019-11-28 15:34:34', NULL, 20, NULL),
	(66, 1, 1, 'rtg 호스팅 신청 실패 후기', '<p><img src="/data/editor/1912/9.PNG"></p><p><a href="https://rtg.kr">https://rtg.kr</a> 에서 저렴한(?) 상품을 팔길래 서버 신청을 시도...</p><p><br></p><p style="color: rgb(0, 0, 0); font-family: &amp;quot;돋움&amp;quot;,Dotum,Helvetica,Sans-serif; font-size: 12px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; orphans: 2; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"><br style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;"></p><p style="color: rgb(0, 0, 0); font-family: &amp;quot;돋움&amp;quot;,Dotum,Helvetica,Sans-serif; font-size: 12px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; orphans: 2; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;">이상한 점 1 - 홈페이지 내에서 상품을 구매할 수 없음(카카오톡 오픈채팅 이용)</p><p>이상한 점 2 - A2 상품이 아닌 A1 상품을 신청했는데, A2 상품에 대한 안내를 해줌.</p><p>이상한 점 3 - A2 상품은 4만원인데, 왜 2만원으로 안내하는지....</p><p>이상한 점 4 - A1 상품 쓰겠다고 하니 용도를 왜 물어보는 건지 모르겠음.</p><p><br></p><p><span style=\'display: inline !important; float: none; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: "돋움",Dotum,Helvetica,Sans-serif; font-size: 12px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;\'> 상위상품으로 변경하면 용도 상관없이 개통해주는가 싶어서 추가적으로 문의해봤다가... 그냥 답도 안나올 것 같아서 채팅방 나옴.</span><b></b><i></i><u></u><sub></sub><sup></sup><strike></strike>&nbsp;</p><p>결론은 정상적인 호스팅 업체는 아님.<br></p><p><br></p><p><br></p>', '2019-12-18 10:26:08', NULL, 36, '2020-09-11 15:41:18'),
	(67, 1, 1, '제주 여행 요약(20191220~20191223)', '<p><strong>-총 금액 : 숙박(207,000원) + 비행기(148,800원) +&nbsp;버스(19,950원) + 택시(24,100원) + 배(9,500원) +&nbsp;관광지 입장료(5,000원) +&nbsp;기타 경비(153450원) = 568,000원</strong></p><p><strong>*숙소에서 일회용품을 제공하지 않아서 치약, 칫솔, 면도기, 로션은 따로 구매<br></strong></p><p><strong><br></strong></p><p><strong><br></strong></p><p><strong>-실제 사용금액 : 361,000원(숙박비는 휴가지원사업 포인트 이용)</strong></p><p><strong><br></strong></p><p><strong><br></strong></p><strong>-<strong>1일차(20191220)</strong></strong><p>1) 이동경로&nbsp;: 포항집&nbsp;→ 포항공항&nbsp;→ 제주국제공항&nbsp;→ 라마다시티호텔&nbsp;→ 맥도날드 제주시청 DT점&nbsp;→ 제주시내 도보로 구경(동문시장 야시장&nbsp;→ 탐라문화광장&nbsp;→ 탑동해안로&nbsp;→ 용두암)&nbsp;→ 라마다제주시티호텔</p><p>2) 이동수단 : 도보(11.7km, 2시간 46분), 버스(5.1km, 16분, 112번), 택시(7.3km, 11분, 포항집&nbsp;→ 포항공항), 비행기(384km, 54분, KE1841)</p><p>3) 사용금액 : 택시(7,400원), 버스(2,000원), 맥도날드(4,500원), 세븐일레븐(13,850원)</p><p>4) 식사 : 점심겸 저녁(맥도날드 에그불고기버거 세트), 야식(제주에일 2캔, 과자 2개)</p><p>5) 일정시작/종료 : 12시 18분 ~ 20시 00분</p><p><br></p><p><br></p><p><strong>-2일차(20191221)</strong></p><p>1) 이동경로 : 라마다제주시티호텔&nbsp;→ 제주올레여행자센터&nbsp;→ 서귀포칠십리시공원&nbsp;→ 천지연폭포&nbsp;→ 새연교&nbsp;→ 김밥천국 서귀포점&nbsp;→ 올레길 6코스(제주올레여행자센터&nbsp;→ 서귀포 매일 올레시장&nbsp;→ 이중섭거리&nbsp;→ 정방폭포&nbsp;→ 소라의 성&nbsp;→&nbsp;검은여쉼터&nbsp;→ 구두미포구&nbsp;→ 제지기 오름&nbsp;→ 쇠소깍&nbsp;→ 쇠소깍 다리)&nbsp;→ 하례1리 입구 정류장&nbsp;→ 라마다제주시티호텔</p><p>2) 이동수단 : 도보(17.4km, 3시간 31분), 버스(85.6km, 2시간 44분, 181번, 642번, 232번, 112번)</p><p>3) 사용금액 : 조식(11,000원), 올레패스포트(20,000원), 버스(6,650원), 씨유(2,800원), 김밥천국(5,500원), 커피(3,500원), 세븐일레븐(21,300원), 천지연폭포(2,000원), 정방폭포(2,000원), 코인세탁(6,500원)</p><p>4) 식사 : 아침(호텔 조식), 점심(김밥천국 참치김밥 + 일반 라면), 저녁(제주에일 2캔, 컵라면)</p><p>5) 일정시작/종료 : 10시 06분 ~ 18시 36분</p><br><p><br></p><p><strong>-3일차(20191222)</strong></p><p>1) 이동경로 : 라마다제주시티호텔&nbsp;→ 성산항&nbsp;→ 하우목동항&nbsp;→ 올레길 1-1코스(산물통&nbsp;→ 파평윤씨공원&nbsp;→ 하고수동해수욕장&nbsp;→ 우도봉입구&nbsp;→ 우도등대&nbsp;→ 천진항&nbsp;→ 홍조단괴해빈해수욕장)&nbsp;→ 하우목동항&nbsp;→ 성산항&nbsp;→ 라마다제주시티호텔</p><p>2) 이동수단 : 배(8.2km, 30분), 버스(94.1km, 2시간 17분,&nbsp;212번, 111번, 431번), 도보(13.7km, 2시간 50분)</p><p>3) 사용금액 : 조식(11,000원), 버스(4,150원), 배&amp;우도입장료(10,500원), 씨유(5,000원), 세븐일레븐(21,400원)</p><p>4) 식사 : 아침(호텔 조식), 간식(에너지바2개 + 파워에이드), 저녁(제주에일 2캔, 불닭볶음면 컵, 스낵면 작은 컵, 과자 1개)</p><p>5) 일정시작/종료 : 09시 25분 ~ 16시 59분</p><br><p><br></p><p><strong>-4일차(20191223)</strong></p><p>1) 이동경로 : 라마다제주시티호텔&nbsp;→ 제주국제공항(대한통운 수화물보관소&nbsp;→&nbsp;푸드코트)&nbsp;→ 공항올레길(용담레포츠공원 주차장&nbsp;→ 어영소 공원)&nbsp;→ 한라수목원&nbsp;→ 부림온천&nbsp;→ 제주시외버스터미널&nbsp;→ 제주공항(도보이동)&nbsp;→ 김포국제공항&nbsp;→ 롯데백화점 관악점&nbsp;→ 서울집</p><p>2) 이동수단 : 버스(32.8km, 1시간 47분, 112번, 465번, 6003번), 택시(16.1km, 38분, 어영소 공원&nbsp;→&nbsp;한라수목원, 롯데백화점 관악점&nbsp;→&nbsp;서울집), 비행기(450km, 54분, KE1224)</p><p>3) 사용금액 : 수하물보관(6,000원), 제주돈육덮밥(9,500원), 택시(16,700원), 버스(7,150원), 커피(4,800원), 목욕(7,000원)</p><p>4) 식사 : 아침겸 점심(공항 푸드코트 돼지돈육덮밥)</p><p>5) 일정시작/종료 : 09시 57분 ~ 19시 01분</p>', '2019-12-24 11:57:55', NULL, 48, NULL),
	(68, 1, 1, '제주 여행 요약(20200202~20200204)', '<p><b>-총 금액 : 숙박(45,174원) + 비행기(54,400원) + 버스(6,650원) + 지하철(1,700원) + 택시(4,400원) + 짐옮김이 서비스(10,000원) + 기타경비(66,620원) = 189,444원</b>&nbsp;</p><p><br></p><p><br><b>-1일차(20200202)</b><br>1)\r\n 이동경로 : 집 → 김포공항 → 제주공항 → 광령1리사무소 → 올레길 16코스(광령1리사무소 → 항파두리항몽유적지 → 수산봉 → 구엄어촌체험마을 → 남두연대 → 신엄해안 → 고내포구) → 베니키아호텔제주<br>2) 이동수단 : 도보(16km, 3시간 49분), 버스(XXkm, X시간 XX분, 6516번, 365번, 251번), 지하철(XXkm, XX분, 2호선, 5호선), 비행기(450km, 49분, 7C135)<br>3) 사용금액 : 버스(2,350원), 지하철(250원), GS25 애월신엄점(19,670원), 제주공항푸드코트(8,500원)<br>4) 식사 : 점심(제주공항푸드코트 비빔밥), 저녁(라면, 과자, 맥주)<br>5) 일정시작/종료 : 09시 04분 ~ 17시 32분<br><br><b><br>-2일차(20200203)</b><br>1)\r\n 이동경로 : 베니키아호텔제주 → 이화수전통육개장제주제주점 → 광령1리사무소 → 올레길 17코스(광령1리사무소 → 무수천트멍길 → 외도월대 → 이호테우해변 → 도두봉 → 어영소공원 → 관덕정 → 간세라운지) → 맥도날드 제주탑동점 →\r\n 베니키아호텔제주</p><p style="margin-left: 0px;">2) 이동수단 : 도보(21km, 4시간 54분), 버스(31km, 1시간 40분, 792-1번, 793-1번, 412번, 315번, 202번)<br>3) 사용금액 : 버스(2,300원), 이화수전통육개장 제주제주점(9,000원), CU 제주논스톱점(7,350원), 맥도날드 제주탑동점(4,900원)<br>4) 식사 : 아침 겸 점심(이화수전통육개장 전통육개장), 저녁(맥도날드 불고기버거세트)<br>5) 일정시작/종료 : 10시 00분 ~ 18시 29분<br>&nbsp;</p><p><br></p><p><b><br>-3일차(20200204)</b><br>1)\r\n 이동경로 : 베니키아호텔제주 → 제주국제공항 → 집</p><p>2) 이동수단 : 버스(26km, 1시간, 795번, 102번, 구로03번, 5616번), 비행기(450km, 54분, 7C112), 지하철(XXkm, XX분, 2호선, 5호선)<br>3) 사용금액 : 버스(2,000원), 지하철(1,450원), 롯데리아 제주공항점(6,200원)<br>4) 식사 : 아침(롯데리아 불고기버거세트)<br>5) 일정시작/종료 : 09시 05분 ~ 14시 30분</p>', '2020-02-09 16:11:51', NULL, 13, NULL),
	(69, 1, 1, '한글2010SE+ 업데이트 불가능한 현상', '<p>한컴 설치 후 업데이트가 정상적으로 진행되지 않음(설치하다가 롤백됨)</p><p><br></p><p>그냥 한컴 공식 홈페이지에서 패치 진행</p><p><br></p><p><a href="https://www.hancom.com/cs_center/csDownload.do?gnb0=25&amp;gnb1=80">https://www.hancom.com/cs_center/csDownload.do?gnb0=25&amp;gnb1=80</a>&nbsp;</p>', '2020-01-02 14:52:34', NULL, 17, NULL),
	(70, 1, 1, '리눅스민트(우분투) rc.local 활성화', '<p><b>0. 편의상 루트로 작업</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>su -<br></p></blockquote><p><b>1. /etc/rc.local 파일 생성</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>touch /etc/rc.local</p><p>echo \'#!/bin/bash\' &gt; /etc/rc.local<br></p></blockquote><p><b>2. /etc/rc.local 권한 설정</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>chmod 755 /etc/rc.local<br></p></blockquote><p><b>3. /lib/systemd/system/rc-local.service 내용 추가</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>echo -e \'[Install]\\nWantedBy=multi-user.target\' &gt;&gt; /lib/systemd/system/rc-local.service</p></blockquote><p><b>4. 부팅시&nbsp; rc.local 구동되도록 설정</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>systemctl enable rc-local.service<br></p></blockquote><p>&nbsp;</p>', '2020-01-06 14:46:23', NULL, 73, NULL),
	(71, 1, 1, '제주 여행 요약(20200107~20200109)', '<p><b>-총 금액 : 숙박(70,000원) + 비행기(47,600원) + 버스(13,350원) + 택시(5,000원) + 기타 경비(56,500원) = 192,450원<br></b></p><p><br></p><p><b><br></b></p><p><b>*숙소 결제 DCC 적용으로 정확한 금액은 시간이 지나야 알 수 있음<br></b></p><p><br></p><p><br><b>-1일차(20200107)</b><br>1) 이동경로 : 집 → 김포공항 → 제주국제공항 → 제주마실게스트하우스<br>2) 이동수단 : 도보(2.5km, 37분), 버스(22.3km, 1시간 31분, 5413번, 6003번), 택시(2.1km, 7분, 마리나사거리 → 제주마실게스트하우스), 비행기(450km, 1시간 35분, 7C147)<br>3) 사용금액 : 택시(5,400원), 버스(5,200원), 롯데리아(5,900원), GS25(16,900원)<br>4) 식사 : 저녁(롯데리아 불고기버거 세트)<br>5) 일정시작/종료 : 17시 24분 ~ 23시 19분<br></p><p><br></p><p><br><b>-2일차(20200108)</b><br>1) 이동경로 : 제주마실게스트하우스 → 제주시외버스터미널 → 세화환승정류장(세화리) → 한림칼국수 세화점 → 레몬비 세화해변점 → 올레길 21코스(제주해녀박물관 → 낯물밭길 → 별방진 → 석다원 → 토끼섬 → 하도해수욕장 → 지미봉 → 종달바당) → 올레길 1코스 절반(목화휴게소 → 성산갑문 입구 → 수마포해안 → 광치기해변) → 제주국제공항 → 제주마실게스트하우스<br>2) 이동수단 : 도보(23km, 5시간 10분), 버스(85km, 2시간 16분, 101번, 295번, 101번)<br>3) 사용금액 : 한림칼국수세화점(8,000원), 레몬비(2,800원), 버스(5,600원), 제주공항푸 드코트(11,000원), GS25(11,900원)<br>4) 식사 : 아침겸 점심(한림칼국수 보말칼국수), 간식(에너지바1개 + 포카리스웨트), 저녁(제주공항 푸드코트 뚝배기불고기), 야식(제주에일 2캔, 과자2개)<br>5) 일정시작/종료 : 09시 34분 ~ 19시 11분<br>&nbsp;</p><p><br><b>-3일차(20200109)</b><br>1) 이동경로 : 제주마실게스트하우스 → 제주시외버스터미널 → 제주국제공항 → 김포국제공항 → 집<br>2) 이동수단 : 비행기(450km, 58분), 버스(18km, 1시간, 331번, 651번, 5619번)<br>3) 사용금액 : 버스(2,550원)<br>4) 식사 : 아침(전날에 안먹었던 에너지바 1개)<br>5) 일정시작/종료 : 08시 44분 ~ 12시 32분<br></p>', '2020-01-09 21:27:09', NULL, 28, NULL),
	(72, 1, 1, '제주 여행 요약(20200206~20200208)', '<div id="bo_v_con"><p><b>-총 금액 : 숙박(81,324원) + 비행기(54,900원) + 버스(8,650원) + 택시(8,200원) + 짐옮김이 서비스(10,000원) + 기타경비(42,200원) = 205,274원</b>&nbsp;</p><p><br></p><p><br><b>-1일차(20200206)</b><br>1)\r\n 이동경로 : 집 → 김포공항 → 제주공항 → 간세라운지 → 올레길 18코스(간세라운지 X 관덕정분식 → 사라봉 → 곤을동 마을터 →  화북포구 → 삼양해수욕장 → 불탑사 → 닭모루 → 조천만세동산) → 라마다제주함덕호텔<br>2) 이동수단 : 도보(22km, 4시간 57분), 버스(25km, 1시간 42분, 5619번, 651번, 365번, 342번), 비행기(450km, XX분, 7C135)<br>3) 사용금액 : 버스(3,700원), GS25 함덕라마다점(14,000원), 제주공항푸드코트(8,000원)<br>4) 식사 : 점심(제주공항푸드코트 김치찌개), 저녁(라면, 과자, 맥주)<br>5) 일정시작/종료 : 08시 32분 ~ 18시 09분<br><br><b><br>-2일차(20200207)</b><br>1)\r\n 이동경로 : 라마다제주함덕호텔 → 함덕돼지국밥 → 너븐숭이 4.3기념관 → 올레길 19코스(너븐숭이 4.3기념관 → 벌러진동산 → 김녕농로 → 김녕서포구) → 제주버스터미널 → 제주국제공항 →\r\n 제주법원\r\n  → 라마다제주함덕호텔</p><p style="margin-left:0px;">2) 이동수단 : 도보(15km, 3시간 26분), 버스(49km, 1시간 59분, 201번, 201번, 182번, 342번)<br>3) 사용금액 : 버스(2,300원), 함덕돼지국밥(7,000원), GS25 함덕라마다점(11,300원), CU 제주북촌점(1,900원)<br>4) 식사 : 아침 겸 점심(함덕돼지국밥 돼지국밥), 저녁(라면, 과자, 맥주)<br>5) 일정시작/종료 : 10시 00분 ~ 17시 09분<br>&nbsp;</p><p><br></p><p><b><br>-3일차(20200208)</b><br>1)\r\n 이동경로 : 라마다제주함덕호텔 → 제주국제공항 → 포항공항 →  포항 집</p><p>2) 이동수단 : 버스(18km, 43분, 101번), 비행기(384km, 44분, KE1842), 택시(포항공항 -&gt; 집, 16분)<br>3) 사용금액 : 버스(2,000원), 택시(8,200원)<br>4) 식사 : -<br>5) 일정시작/종료 : 09시 58분 ~ 13시 17분<br></p></div>', '2020-02-14 11:21:47', NULL, 8, NULL),
	(73, 1, 1, '제주 여행 요약(20200114~20200116)', '<p><b>-총 금액 : 숙박(76,428원) + 비행기(46,200원) + 버스(9,600원) + 지하철(1,600원) + 기타 경비(47,120원) = 133,828원<br></b></p><p><br></p><p><br></p><p><b>-1일차(20200114)</b><br>1) 이동경로 : 집 → 김포공항 → 제주국제공항 → 골든튤립제주성산호텔<br>2) 이동수단 : 버스(52km, 1시간 30분, 507번, 101번), 지하철(17km, 37분, 2호선, 5호선), 비행기(450km, 56분, 7C133)<br>3) 사용금액 : 버스(4,200원), 지하철(250원), CU 김포국제공항국내선점(1,400원), CU 성산골든튤립점(25,120원)<br>4) 식사 : 저녁(시간이 늦어서 간단히 라면 먹음, 제주에일 2캔)<br>5) 일정시작/종료 : 17시 16분 ~ 22시 30분<br>&nbsp;</p><p><br><b>-2일차(20200115)</b><br>1) 이동경로 : 골든튤립제주성산호텔 → 고성장터국밥 → 성산환승정류장 → 시흥리 → 올레길 1코스(시흥초등학교 →&nbsp;말미오름 →&nbsp;알오름 →&nbsp;종달리사무소 →&nbsp;종달리 옛소금밭 →&nbsp;목화휴게소) →&nbsp;시흥리 → 올레길 2코스(광치기해변 →&nbsp;식산봉 →&nbsp;족지물 →&nbsp;오조리 마을회관 →&nbsp;제주동마트) → 진우파크빌 → 골든튤립제주성산호텔<br>2) 이동수단 : 도보(17km, 4시간 12분), 버스(9,5km, 27분, 201번, 201번)<br>3) 사용금액 : 고성장터국밥(6,000원), CU 성산동서로점(3,100원), 버스(2,300원), CU 제주성산점(6,100원)<br>4) 식사 : 아침겸 점심(고성장터국밥 따로국밥), 간식(연양갱 1개 + 커피), 저녁(라면, 한라봉막걸리 1병, 제주에일 1캔, 마라탕면)<br>5) 일정시작/종료 : 10시 01분 ~ 16시 25분<br>&nbsp;</p><p><br><b>-3일차(20200116)</b><br>1) 이동경로 :&nbsp;골든튤립제주성산호텔 → 제주국제공항 → 김포국제공항 → 집<br>2) 이동수단 : 비행기(450km, 46분, 7C108), 지하철(11km, 26분, 5호선, 2호선), 버스(53km, 1시간 43분, 111번, 5619번)<br>3) 사용금액 : 버스(3,100원), 지하철(1,350원)<br>4) 식사 : 아침(전날에 안먹었던 연양갱&nbsp;1개 + 커피, 공항도착 후 아메리카노 1잔)<br>5) 일정시작/종료 : 08시&nbsp;26분 ~ 13시 41분<br></p>', '2020-01-17 12:04:55', NULL, 15, NULL),
	(74, 1, 1, 'session_start(): open(SESSION_FILE, O_RDWR) failed: Permission denied (13)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><h1>phpMyAdmin - Error</h1><p>Error during session start; please check your PHP and/or webserver log file and configure your PHP installation properly. Also ensure that cookies are enabled in your browser.<br><br>session_start(): open(SESSION_FILE, O_RDWR) failed: Permission denied (13)<br><br>session_start(): Failed to read session data: files (path: /var/lib/php/session)</p></blockquote><p><br></p><p><br></p><p>phpmyadmin 접속하려고 url 쳤는데, 위의 메세지가&nbsp;갑자기 뜸.</p><p><br></p><p>/var/lib/php 아래 디렉토리들 권한이 root:nginx에서 root:apache로 바뀌어 있었음.</p><p>(yum update 후 권한이 바뀌었을 것으로 추정)</p><p><br></p><p>권한 수정 후 정상화됨.<br></p>', '2020-01-17 12:10:59', NULL, 16, NULL),
	(75, 1, 1, '리눅스민트 19.3 Intel Wireless 8265 드라이버 설치', '<p><b>0. 설치 이유</b></p><p>유독 특정 와이파이에서 끊김현상이 두드러지게 나타남. 드라이버 설치 후 정상화됨.<b><br></b></p><p><b><br></b></p><p><b>1. 장치명 확인</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p># sudo lshw -class network | grep product<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; product: <b><span style="color: rgb(255, 0, 0);">Wireless 8265</span></b> / 8275</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vendor: <b><span style="background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);">Intel Corporation</span></b>&nbsp;</p></blockquote><p><b>2. 공식 홈페이지에서 드라이버 다운로드(<a href="https://www.intel.co.kr/content/www/kr/ko/support/articles/000005511/network-and-io/wireless-networking.html)">https://www.intel.co.kr/content/www/kr/ko/support/articles/000005511/network-and-io/wireless-networking.html)</a></b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>wget <a href="https://wireless.wiki.kernel.org/_media/en/users/drivers/iwlwifi-8265-ucode-22.361476.0.tgz">https://wireless.wiki.kernel.org/_media/en/users/drivers/iwlwifi-8265-ucode-22.361476.0.tgz</a></p></blockquote><p><b>3. 압축 해제 후 파일 복사</b>&nbsp;</p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>tar zxvf iwlwifi-8265-ucode-22.361476.0.tgz<br></p><p>sudo cp iwlwifi-8265-ucode-22.361476.0/iwlwifi-8265-22.ucode /lib/firmware</p><p>rm -rf  iwlwifi-8265-ucode-22.361476.0.tgz wlwifi-8265-ucode-22.361476.0</p></blockquote><p><br></p><p><b>4. 리부팅</b></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>reboot<br></p></blockquote>', '2020-01-17 17:54:50', NULL, 27, NULL),
	(76, 1, 1, 'centos8 systemd-resolved disable', '<p>오랜만에 서버 들어가서 데몬 체크하는데 이상한 게 있어서 확인</p><p><br></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>[root@host-10-101-0-10 log]# netstat -nlpt<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Foreign Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; State&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PID/Program name&nbsp;&nbsp;&nbsp; <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:3306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 768/mysqld&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><b><span style="color: rgb(255, 0, 0);">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:5355&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 24069/systemd-resol</span></b> <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:587&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 856/sendmail: accep <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 855/dovecot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 750/nginx: master p <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:53&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 912/pdns_server&nbsp;&nbsp;&nbsp;&nbsp; <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 856/sendmail: accep <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:53690&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 644/svnserve&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 750/nginx: master p <br>tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 0.0.0.0:5022&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 630/sshd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><b><span style="color: rgb(255, 0, 0);">tcp6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 :::5355&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :::*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 24069/systemd-resol </span></b>&nbsp;</p></blockquote><p>확인해보니까 systemd-resolved 데몬이 구동되어 있던 상황. 아마 얼마전에 yum update 영향을 받은 듯.<br></p><p><br></p><p>설정을 수정하려면 /etc/systemd/resolve.conf을 건드려야 하는 듯. 매뉴얼은 man resolved.conf 명령어를 이용하여 확인.</p><p><br></p><p>일단 나는 안쓰므로 해제.</p><p><br></p><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>systemctl disable systemd-resolved</p><p>systemctl stop systemd-resolved</p></blockquote><p><br></p><p><br></p>', '2020-01-18 13:33:32', NULL, 12, NULL),
	(77, 1, 1, '여수/순천 여행 요약(20200120~20200121)', '<p><b>-총 금액 : 숙박(33,318원) + 비행기(124,600원) + 버스(10,100원) + 지하철(350원) + 택시비(7,100원) + 기타 경비(56,950원) = 232,418원<br></b></p><p><br></p><p><br></p><p><b>-1일차(20200120)</b><br>1) 이동경로 : 집 → 김포공항 → 여수공항 → K-그랜드호스텔 여수 →  돌산공원&nbsp;  → 지산공원 → 내조국국밥 관문점 → K-그랜드호스텔 여수<br>2) 이동수단 : 버스(29.3km, 1시간 9분, 507번, 34번, 114번), 지하철(12.5km, 31분, 2호선, 5호선), 비행기(310km, 44분, KE1333), 케이블카(2km, 13분), 도보(5.7km, 1시간 7분)<br>3) 사용금액 : 버스(2,350원), 지하철(250원), 내조국국밥 관문점(7,000원), 세븐일레븐 여수교동점(5,750원), 여수해상케이블카(12,000원)<br>4) 식사 : 저녁(내조국국밥 순대국밥)<br>5) 일정시작/종료 : 15시 09분 ~ 22시 06분<br>&nbsp;</p><p><br><b>-2일차(20200120)</b><br>1) 이동경로 : K그랜드호스텔 여수 → 진남관 → 천사벽화마을 → 여수낭만포차거리 → 오동도 → 여수EXPO역 → 순천역 → 맥도날드 순천덕암DT점 → 순천만습지 → 순천만국가정원 → 여수공항 → 집<br>2) 이동수단 : 도보(22km, 3시간 47분), 버스(52.3km, 1시간 44분, 66번, 66번, 100번, 960번, 6003번), PRT(8.2km, 18분, 순천만 스카이큐브), 비행기(310km, 42분, KE1334), 기차(25km, 21분, 여수EXPO -&gt; 순천역)<br>3) 사용금액 : 오동도 동백열차(1,000원), 코레일(2,600원), 맥도날드 순천덕암DT점(4,600원), 순천만습지 입장권(8,000원), 스카이큐브 왕복(8,000원), 여수공항 식당(8,000원), 택시(7,100원), 버스(7,750원)<br>4) 식사 : 점심(맥도날드 불고기버거세트 - 음료 아메리카노), 저녁(여수공항 식당 된장찌개)<br>5) 일정시작/종료 : 10시 01분 ~ 21시 37분<br></p>', '2020-01-17 12:04:55', NULL, 21, NULL),
	(78, 1, 1, '부산/히타카츠 여행 요약(20200211~20200213)', '<p><b>-총 금액 : 숙박(57,543원) + 비행기(68,800원) + 버스(8,650원) + 지하철(5,000원) + 배(62,300원) + 기타경비(63,481원) = 265774원</b>&nbsp;</p><p><br></p><p><br><b>-1일차(20200211)</b><br>1)\r\n 이동경로 : 집 → 김포공항 → 김해공항 → 대동병원 → 부산역 → BSB 호텔<br>2) 이동수단 : 버스(35km, 1시간 39분, 507번, 307번, 43번), 지하철(18km, 45분, 2호선, 5호선), 비행기(327km, 43분, 7C208)<br>3) 사용금액 : 버스(2,400원), GS25 광장점(8,520원)<br>4) 식사 : -<br>5) 일정시작/종료 : 17시 51분 ~ 22시 56분<br><br><b><br>-2일차(20200212)</b><br>1)\r\n 이동경로 : BSB 호텔 → 부산항국제여객터미널 → 히타카츠항 국제여객터미널 → 포푸라 → 러일 우호의 언덕 → 미우다해안전망대 → 미우다해안\r\n  → 토요\r\n  → 한국전망대\r\n  → 오우라 →&nbsp; 히타카츠항 국제여객터미널\r\n  → 호텔25H 2호점<br></p><p style="margin-left:0px;">2) 이동수단 : 도보(23km, 5시간 6분), 버스(5.2km, 21분, 5-1번), 배(154km, 2시간 50분)<br>3) 사용금액 : 버스(1,200원), 포푸라(16,655원 - 1544엔), 히타카츠항 국제여객터미널(2157원), 자판기(1616원 - 150엔)<br>4) 식사 : 아침 겸 점심(포푸라 에그샌드위치), 저녁(라면, 과자, 맥주)<br>5) 일정시작/종료 : 06시 54분 ~ 18시 09분<br>&nbsp;</p><p><br></p><p><b>-3일차(20200213)</b><br>1)\r\n 이동경로 : 호텔25H 2호점 → 김해국제공항 → 김포국제공항 → 집</p>2) 이동수단 : 비행기(384km, 38분, 7C271), 버스(35km, 57분, 651번, 금천08번), 지하철(11.5km, 36분, 김해부산경전철, 1호선, 2호선)<br>3) 사용금액 : 지하철(1,800원), 버스(1,400원)<br>4) 식사 : -<br>5) 일정시작/종료 : 09시 58분 ~ 13시 17분', '2020-02-14 12:14:57', NULL, 11, NULL),
	(79, 1, 1, '제주 여행 요약(20200127~20200130)', '<p><b>-총 금액 : 숙박(112,253원) + 비행기(54,800원) + 버스(20,600원) + 지하철(250원) + 배(13,100원) + 기타경비(100,370원) = 301,373원</b>&nbsp;</p><p><br></p><p><br><b>-1일차(20200127)</b><br>1) 이동경로 : 집 → 김포공항 → 제주공항 → 운진항 → 올레길 10코스(하모체육공원 → 하모해수욕장 → 섯알오름 → 송악산 전망대 → 사계화석발견지 → 사계포구 → 산방연대 → 썩은다리전망대 → 화순금모래해수욕장) → 라마다앙코르제주서귀포호텔<br>2) 이동수단 : 도보(19km, 4시간 27분), 버스(65km, 1시간 55분, 507번, 151번, 202번), 지하철(16.1km, 31분, 2호선, 5호선), 비행기(450km, 1시간 14분,7C141)<br>3) 사용금액 : 버스(5,350원), 지하철(250원), 세븐일레븐 서귀포라마다점(24,170원), CU 제주공항국내선점(2,500원), 제주공항푸드코트(7,500원)<br>4) 식사 : 점심(제주공항푸드코트 우동), 저녁(라면, 과자, 맥주)<br>5) 일정시작/종료 : 07시 44분 ~ 19시 04분<br><br><b><br>-2일차(20200128)</b><br>1) 이동경로 : 라마다앙코르제주서귀포호텔 → 미향해장국 성산포점 → 대수산봉 입구 → 올레길 2코스(대수산봉 정상 → 혼인지 → 온평포구) → 올레길 3코스-B(온평포구 → 용머리동산 → 신산환해장성 → 신산포구 → 주어동포구 → 신풍 A-B코스 갈림길) → 라마다앙코르제주서귀포호텔<br>2) 이동수단 : 도보(17km, 4시간 7분), 버스(90km, 2시간 31분, 465번, 101번, 201번, 465)<br>3) 사용금액 : 버스(4,150원), 만계치킨서귀포점(18,000원), CU 제주성산점(8,700원), 미향해장국 성산포점(8,000원)<br>4) 식사 : 점심(미향해장국 선지해장국), 저녁(만계치킨 순살 반반, 맥주)<br>5) 일정시작/종료 : 10시 06분 ~ 18시 54분<br>&nbsp;</p><p><br></p><p><b><br>-3일차(20200129)</b><br>1) 이동경로 : 라마다앙코르제주서귀포호텔 → 운진항 → 가파도 → 올레길 10-1코스(가파치안센터 → 가파마을제단 → 큰옹진물 → 개엄주리코지 → 가파초등학교 → 냇골챙이 → 상동포구) → 운진항 → 산방산탄산온천 → 제주버스터미널 → 라마다앙코르제주서귀포호텔<br>2) 이동수단 : 도보(9.6km, 2시간 10분), 버스(118km, 3시간 50분, 465번, 102번, 253번, 252번, 281번, 465번), 배(9.8km, 38분)<br>3) 사용금액 : 버스(4,700원), 세븐일레븐 서귀포라마다점(4,500원), 주식회사 산방산탄산온천(23,000원), 가파도마을협동조합(4,000원), 아름다운섬나라(13,100원)<br>4) 식사 : 점심(탄산온천 제육볶음), 저녁(치킨 남은 거 + 우도땅콩 막걸리)<br>5) 일정시작/종료 : 09시 00분 ~ 20시 08분</p><br><p><br><b>-4일차(20200130)</b><br>1) 이동경로 : 라마다앙코르제주서귀포호텔 → 제주공항 → 김포공항 → 집<br>2) 이동수단 : 버스(68km, 2시간 17분, 800-1번, 605번, 5620번), 비행기(450km, 59분, 7C104)<br>3) 사용금액 : 버스(6,400원)<br>4) 식사 : -<br>5) 일정시작/종료 : 07시 57분 ~ 13시 35분<br>&nbsp;</p>', '2020-02-01 19:12:35', NULL, 10, NULL),
	(80, 1, 1, '자바 - hello world', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p>public class Test01 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;System.out.println("hello World!!");</p><p>&nbsp;}</p><p>}<br></p></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>&nbsp;hello World!!</p></blockquote><p>&nbsp;</p>', '2020-02-23 13:38:58', NULL, 12, NULL),
	(81, 1, 1, '자바 - 변수 자료형', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test02 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = -3;<br>&nbsp;&nbsp;System.out.println("int a : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;long b = 123123123123123L;<br>&nbsp;&nbsp;System.out.println("long b: " + b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;float c1 = (float) 2.3;<br>&nbsp;&nbsp;float c2 = -2.3f;<br>&nbsp;&nbsp;System.out.println("float c1 : " + c1 + ", float c2 : " + c2);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;double d = 2.3237673;<br>&nbsp;&nbsp;System.out.println("double d : " + d);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;boolean e1 = true;<br>&nbsp;&nbsp;boolean e2 = false;<br>&nbsp;&nbsp;System.out.println("boolean e1 : " + e1 + ", boolean e2 : " + e2);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;char f1 = \'A\';<br>&nbsp;&nbsp;char f2 = 33;<br>&nbsp;&nbsp;System.out.println("char f1 : " + f1 + ", char f2 : " + f2);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;String g = "ABC";<br>&nbsp;&nbsp;System.out.println("String g : " + g);</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>int : -3<br>long : 123123123123123<br>float c1 : 2.3, float c2 : -2.3<br>double : 2.3237673<br>boolean e1 : true, boolean e2 : false<br>char f1 : A, char f2 : !<br>String g : ABC<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 14:17:24', NULL, 12, NULL),
	(82, 1, 1, '자바 - 사칙연산', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test03 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = 4;<br>&nbsp;&nbsp;int b = 2;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.println("a + b = " + (a + b));<br>&nbsp;&nbsp;System.out.println("a - b = " + (a - b));<br>&nbsp;&nbsp;System.out.println("a * b = " + (a * b));<br>&nbsp;&nbsp;System.out.println("a / b = " + (a / b));<br>&nbsp;&nbsp;System.out.println("a % b = " + (a % b));</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>a + b = 6<br>a - b = 2<br>a * b = 8<br>a / b = 2<br>a % b = 0<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 14:25:18', NULL, 11, NULL),
	(83, 1, 1, '자바 - 증감연산', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test04 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = 0;<br>&nbsp;&nbsp;System.out.println("초기값 : " + a);</p><p>&nbsp;&nbsp;a = a + 1;<br>&nbsp;&nbsp;System.out.println("a = a + 1 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;a++;<br>&nbsp;&nbsp;System.out.println("a++ : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;a += 1;<br>&nbsp;&nbsp;System.out.println("a +=1 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;a += 2;<br>&nbsp;&nbsp;System.out.println("a +=2 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a++ 실행 전 a의 값 : " + a);<br>&nbsp;&nbsp;System.out.print(", a++ 실행 : " + (a++));<br>&nbsp;&nbsp;System.out.println(", a++ 실행 후 a의 값 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("++a 실행 전 a의 값 : " + a);<br>&nbsp;&nbsp;System.out.print(", ++a 실행 : " + (++a));<br>&nbsp;&nbsp;System.out.println(", ++a 실행 후 a의 값 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a-- 실행 전 a의 값 : " + a);<br>&nbsp;&nbsp;System.out.print(", a-- 실행 : " + (a--));<br>&nbsp;&nbsp;System.out.println(", a-- 실행 후 a의 값 : " + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("--a 실행 전 a의 값 : " + a);<br>&nbsp;&nbsp;System.out.print(", --a 실행 : " + (--a));<br>&nbsp;&nbsp;System.out.println(", --a 실행 후 a의 값 : " + a);</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>초기값 : 0<br>a = a + 1 : 1<br>a++ : 2<br>a +=1 : 3<br>a +=2 : 5<br>a++ 실행 전 a의 값 : 5, a++ 실행 : 5, a++ 실행 후 a의 값 : 6<br>++a 실행 전 a의 값 : 6, ++a 실행 : 7, ++a 실행 후 a의 값 : 7<br>a-- 실행 전 a의 값 : 7, a-- 실행 : 7, a-- 실행 후 a의 값 : 6<br>--a 실행 전 a의 값 : 6, --a 실행 : 5, --a 실행 후 a의 값 : 5<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 14:48:27', NULL, 11, NULL),
	(84, 1, 1, '자바 - 비교연산', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test05 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = 7;<br>&nbsp;&nbsp;int b = 2;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b보다 크다 : ");<br>&nbsp;&nbsp;System.out.println(a &gt; b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b보다 작다 : ");<br>&nbsp;&nbsp;System.out.println(a &lt; b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b보다 크거나 같다 : ");<br>&nbsp;&nbsp;System.out.println(a &gt;= b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b보다 작거나 같다 : ");<br>&nbsp;&nbsp;System.out.println(a &lt;= b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b와 같다 : ");<br>&nbsp;&nbsp;System.out.println(a == b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("a는 b와 같지 않다 : ");<br>&nbsp;&nbsp;System.out.println(a != b);</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>a는 b보다 크다 : true<br>a는 b보다 작다 : false<br>a는 b보다 크거나 같다 : true<br>a는 b보다 작거나 같다 : false<br>a는 b와 같다 : false<br>a는 b와 같지 않다 : true<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 14:57:50', NULL, 12, NULL),
	(85, 1, 1, '자바 - \'+(더하기)\'의 규칙', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class test06 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = 10;<br>&nbsp;&nbsp;int b = 20;<br>&nbsp;&nbsp;String c = "30";<br>&nbsp;&nbsp;String d = "40";<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("숫자a + 숫자b = ");<br>&nbsp;&nbsp;System.out.println(a + b);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("문자c + 문자d = ");<br>&nbsp;&nbsp;System.out.println(c + d);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("숫자a + 문자c = ");<br>&nbsp;&nbsp;System.out.println(a + c);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("문자c + 숫자a = ");<br>&nbsp;&nbsp;System.out.println(c + a);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("숫자a + 숫자b + 문자c = ");<br>&nbsp;&nbsp;System.out.println(a + b + c);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("숫자a + 숫자b + 문자c + 문자d = ");<br>&nbsp;&nbsp;System.out.println(a + b + c + d);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("문자c + 숫자a + 숫자b + 문자d = ");<br>&nbsp;&nbsp;System.out.println(c + a + b + d);<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("문자c + (숫자a + 숫자b) + 문자d = ");<br>&nbsp;&nbsp;System.out.println(c + (a + b) + d);&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.print("문자c + 문자d + 숫자a + 숫자b = ");<br>&nbsp;&nbsp;System.out.println(c + d + a + b);&nbsp;<br>&nbsp;&nbsp;</p><p>&nbsp;&nbsp;System.out.print("문자c + 문자d + (숫자a + 숫자b) = ");<br>&nbsp;&nbsp;System.out.println(c + d + (a + b));&nbsp;<br></p><p><br>&nbsp;}</p><p>}<br>&nbsp;</p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>숫자a + 숫자b = 30<br>문자c + 문자d = 3040<br>숫자a + 문자c = 1030<br>문자c + 숫자a = 3010<br>숫자a + 숫자b + 문자c = 3030<br>숫자a + 숫자b + 문자c + 문자d = 303040<br>문자c + 숫자a + 숫자b + 문자d = 30102040<br>문자c + (숫자a + 숫자b) + 문자d = 303040<br>문자c + 문자d + 숫자a + 숫자b = 30401020<br>문자c + 문자d + (숫자a + 숫자b) = 304030<br></p></blockquote><p>&nbsp;</p>', '2020-02-23 15:20:20', NULL, 13, NULL),
	(86, 1, 1, '자바 - 조건문 if 1(성적 등급 - 수우미양가)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test07 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int point = 89;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(point &gt;= 90) {<br>&nbsp;&nbsp;&nbsp;System.out.println("수");<br>&nbsp;&nbsp;} else if(point &gt;= 80) {<br>&nbsp;&nbsp;&nbsp;System.out.println("우");<br>&nbsp;&nbsp;} else if(point &gt;= 70) {<br>&nbsp;&nbsp;&nbsp;System.out.println("미");<br>&nbsp;&nbsp;} else if(point &gt;= 60) {<br>&nbsp;&nbsp;&nbsp;System.out.println("양");<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;System.out.println("가");<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</p><p>}<br>&nbsp;</p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>우</p></blockquote><p>&nbsp;</p>', '2020-02-23 15:55:46', NULL, 12, NULL),
	(87, 1, 1, '자바 - 조건문 if 2(학점)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test08 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;float point = 3.6f;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(point &gt;= 4.5) {<br>&nbsp;&nbsp;&nbsp;System.out.println("A+");<br>&nbsp;&nbsp;} else if(point &gt;= 4.0) {<br>&nbsp;&nbsp;&nbsp;System.out.println("A");<br>&nbsp;&nbsp;} else if(point &gt;= 3.5) {<br>&nbsp;&nbsp;&nbsp;System.out.println("B+");<br>&nbsp;&nbsp;} else if(point &gt;= 3.0) {<br>&nbsp;&nbsp;&nbsp;System.out.println("B");<br>&nbsp;&nbsp;} else if(point &gt;= 2.5) {<br>&nbsp;&nbsp;&nbsp;System.out.println("C+");<br>&nbsp;&nbsp;} else if(point &gt;= 2.0) {<br>&nbsp;&nbsp;&nbsp;System.out.println("C");<br>&nbsp;&nbsp;} else if(point &gt;= 1.5) {<br>&nbsp;&nbsp;&nbsp;System.out.println("D+");<br>&nbsp;&nbsp;} else if(point &gt;= 1.0) {<br>&nbsp;&nbsp;&nbsp;System.out.println("D");<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;System.out.println("F");<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;}</p><p>}<br>&nbsp;</p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>B+<br>&nbsp;</p></blockquote><p>&nbsp;</p>', '2020-02-23 16:04:14', NULL, 13, NULL),
	(88, 1, 1, '자바 - 조건문 if 3(오름차순 정렬)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test09 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;int a = 7;<br>&nbsp;&nbsp;int b = 4;<br>&nbsp;&nbsp;int c = 1;<br>&nbsp;&nbsp;int d = 9;<br>&nbsp;&nbsp;// 위의 변수는 변경하지 말 것! <br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int tmp = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(a &gt; b) {<br>&nbsp;&nbsp;&nbsp;tmp = a;<br>&nbsp;&nbsp;&nbsp;a = b;<br>&nbsp;&nbsp;&nbsp;b = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [true - 값 변경] a = 4, b = 7, c = 1, d = 9&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(a &gt; c) {<br>&nbsp;&nbsp;&nbsp;tmp = a;<br>&nbsp;&nbsp;&nbsp;a = c;<br>&nbsp;&nbsp;&nbsp;c = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [true - 값 변경] a = 1, b = 7, c = 4, d = 9<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(a &gt; d) {<br>&nbsp;&nbsp;&nbsp;tmp = a;<br>&nbsp;&nbsp;&nbsp;a = d;<br>&nbsp;&nbsp;&nbsp;d = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [false - 값 변경X] a = 1, b = 7, c = 4, d = 9<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(b &gt; c) {<br>&nbsp;&nbsp;&nbsp;tmp = b;<br>&nbsp;&nbsp;&nbsp;b = c;<br>&nbsp;&nbsp;&nbsp;c = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [true - 값 변경] a = 1, b = 4, c = 7, d = 9<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(b &gt; d) {<br>&nbsp;&nbsp;&nbsp;tmp = b;<br>&nbsp;&nbsp;&nbsp;b = d;<br>&nbsp;&nbsp;&nbsp;d = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [false - 값 변경X] a = 1, b = 4, c = 7, d = 9<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if (c &gt; d) {<br>&nbsp;&nbsp;&nbsp;tmp = c;<br>&nbsp;&nbsp;&nbsp;c = d;<br>&nbsp;&nbsp;&nbsp;d = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;// [false - 값 변경X] a = 1, b = 4, c = 7, d = 9<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;//아래 내용은 변경하지 말 것! <br>&nbsp;&nbsp;System.out.println("오름차순 정렬 결과는 다음과 같습니다.");<br>&nbsp;&nbsp;System.out.println("a : " + a);<br>&nbsp;&nbsp;System.out.println("b : " + b);<br>&nbsp;&nbsp;System.out.println("c : " + c);<br>&nbsp;&nbsp;System.out.println("d : " + d);<br>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>오름차순 정렬 결과는 다음과 같습니다.<br>a : 1<br>b : 4<br>c : 7<br>d : 9<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 16:28:11', NULL, 15, NULL),
	(89, 1, 1, '자바 - 조건문 switch(성적 등급)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test10 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;/* &nbsp;점수로 등급 나누기(범위 0 ~ 100)<br>&nbsp;&nbsp; * &nbsp;95~100(a+), 90~94(a), 85~90(b+), 80~84(b), 75~79(c+), 70~74(c), 65~69(d), 0~64(f) <br>&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int score = 98;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;switch(score/5) {<br>&nbsp;&nbsp;case 20 :&nbsp;// 100점의 경우도 A+에 넣어야하므로 break문을 쓰지 않음.<br>&nbsp;&nbsp;case 19 : System.out.println("A+");&nbsp;// 95~99<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 18 : System.out.println("A");&nbsp;// 90~94<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 17 : System.out.println("B+");&nbsp;// 85~89<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 16 : System.out.println("B");&nbsp;// 80~84<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 15 : System.out.println("C+");&nbsp;// 75~79<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 14 : System.out.println("C");&nbsp;// 70~74<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 13 : System.out.println("D");&nbsp;// 65~69<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;default : System.out.println("F");&nbsp;// 0~64<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br>&nbsp;</p></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p><br></p><p>A+<br>&nbsp;</p></blockquote><p>&nbsp;</p>', '2020-02-23 16:51:56', NULL, 12, NULL),
	(90, 1, 1, '자바 - 반복문 while(1~10까지 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test11 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 1부터 10까지 출력하시오.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int a = 1;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;while(a &lt;= 10) {<br>&nbsp;&nbsp;&nbsp;System.out.println(a);<br>&nbsp;&nbsp;&nbsp;a++;<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 17:13:46', NULL, 13, NULL),
	(91, 1, 1, '자바 - 반복문 do ~ while(1~10까지 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test12 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 1부터 10까지 출력하시오.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int a = 1;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;do {<br>&nbsp;&nbsp;&nbsp;System.out.println(a);<br>&nbsp;&nbsp;&nbsp;a++;<br>&nbsp;&nbsp;} while (a &lt; 11);</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 17:22:52', NULL, 12, NULL),
	(92, 1, 1, '자바 - 반복문 for 1(1~10까지 수 중 짝수만 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test13 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 1부터 10까지 수 중 짝수만 출력하시오.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int a = 1 ; a &lt;= 10 ; a++) {<br>&nbsp;&nbsp;&nbsp;if(a % 2 == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(a);<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br>&nbsp;</p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>2<br>4<br>6<br>8<br>10<br>&nbsp;</p></blockquote><p>&nbsp;</p>', '2020-02-23 17:27:18', NULL, 11, NULL),
	(93, 1, 1, '자바 - 반복문 for 2(구구단 2단 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test14 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 구구단 2단 출력<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt; 10 ; i++) {<br>&nbsp;&nbsp;&nbsp;System.out.println("2 * " + i + " = " + 2 * i);<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br></p><p>&nbsp;</p></blockquote><p><br></p><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>2 * 1 = 2<br>2 * 2 = 4<br>2 * 3 = 6<br>2 * 4 = 8<br>2 * 5 = 10<br>2 * 6 = 12<br>2 * 7 = 14<br>2 * 8 = 16<br>2 * 9 = 18<br>&nbsp;</p></blockquote><p>&nbsp;</p>', '2020-02-23 17:33:02', NULL, 11, NULL),
	(94, 1, 1, '자바 - 반복문 for 3(1부터 100까지의 합 구하기)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test15 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 1부터 100까지의 합을 구하시오.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int sum = 0;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt;= 100 ; i++) {<br>&nbsp;&nbsp;&nbsp;sum = sum + i;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;System.out.println(sum);</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>5050<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 17:38:55', NULL, 14, NULL),
	(95, 1, 1, '자바 - 반복문 for 4(피보나치 수열 20번째값까지 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test016 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 피보나치 수열 1, 1, 2, 3, 5...... 20번째 값까지 출력하시오.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int a = 0;<br>&nbsp;&nbsp;int b = 1;<br>&nbsp;&nbsp;int c = a + b;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt;= 20 ; i++) {<br>&nbsp;&nbsp;&nbsp;System.out.println(c);<br>&nbsp;&nbsp;&nbsp;c = a + b;<br>&nbsp;&nbsp;&nbsp;a = b;<br>&nbsp;&nbsp;&nbsp;b = c;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>1<br>1<br>2<br>3<br>5<br>8<br>13<br>21<br>34<br>55<br>89<br>144<br>233<br>377<br>610<br>987<br>1597<br>2584<br>4181<br>6765<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 17:53:02', NULL, 19, NULL),
	(96, 1, 1, '자바 - 다중반복문 1(2단부터 9단까지 출력)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test17 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 구구단 2~9단까지 출력<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 2 ; i &lt; 10 ; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = 1 ; j &lt; 10 ; j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(i + " * " + j + " = " + i * j);<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>2 * 1 = 2<br>2 * 2 = 4<br>2 * 3 = 6<br>2 * 4 = 8<br>2 * 5 = 10<br>2 * 6 = 12<br>2 * 7 = 14<br>2 * 8 = 16<br>2 * 9 = 18<br>3 * 1 = 3<br>3 * 2 = 6<br>3 * 3 = 9<br>3 * 4 = 12<br>3 * 5 = 15<br>3 * 6 = 18<br>3 * 7 = 21<br>3 * 8 = 24<br>3 * 9 = 27<br>4 * 1 = 4<br>4 * 2 = 8<br>4 * 3 = 12<br>4 * 4 = 16<br>4 * 5 = 20<br>4 * 6 = 24<br>4 * 7 = 28<br>4 * 8 = 32<br>4 * 9 = 36<br>5 * 1 = 5<br>5 * 2 = 10<br>5 * 3 = 15<br>5 * 4 = 20<br>5 * 5 = 25<br>5 * 6 = 30<br>5 * 7 = 35<br>5 * 8 = 40<br>5 * 9 = 45<br>6 * 1 = 6<br>6 * 2 = 12<br>6 * 3 = 18<br>6 * 4 = 24<br>6 * 5 = 30<br>6 * 6 = 36<br>6 * 7 = 42<br>6 * 8 = 48<br>6 * 9 = 54<br>7 * 1 = 7<br>7 * 2 = 14<br>7 * 3 = 21<br>7 * 4 = 28<br>7 * 5 = 35<br>7 * 6 = 42<br>7 * 7 = 49<br>7 * 8 = 56<br>7 * 9 = 63<br>8 * 1 = 8<br>8 * 2 = 16<br>8 * 3 = 24<br>8 * 4 = 32<br>8 * 5 = 40<br>8 * 6 = 48<br>8 * 7 = 56<br>8 * 8 = 64<br>8 * 9 = 72<br>9 * 1 = 9<br>9 * 2 = 18<br>9 * 3 = 27<br>9 * 4 = 36<br>9 * 5 = 45<br>9 * 6 = 54<br>9 * 7 = 63<br>9 * 8 = 72<br>9 * 9 = 81<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:09:31', NULL, 11, NULL),
	(97, 1, 1, '자바 - 다중반복문 2(별찍기 1)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test018 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 별찍기 1<br>&nbsp;&nbsp;/*<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt;= 5 ; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = 1 ; j &lt;= 5 ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>*****<br>*****<br>*****<br>*****<br>*****<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:14:20', NULL, 12, NULL),
	(98, 1, 1, '자바 - 다중반복문 3(별찍기 2)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test019 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 별찍기 2<br>&nbsp;&nbsp;/*<br>&nbsp;&nbsp; *&nbsp;&nbsp;* <br>&nbsp;&nbsp; *&nbsp;&nbsp;* *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * <br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * *<br>&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt;= 5 ; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = 1 ; j &lt;= i ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>*<br>**<br>***<br>****<br>*****<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:17:45', NULL, 12, NULL),
	(99, 1, 1, '자바 - 다중반복문 4(별찍기 3)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test020 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 별찍기 3<br>&nbsp;&nbsp;/*<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * * * <br>&nbsp;&nbsp; *&nbsp;&nbsp;* * * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* * *<br>&nbsp;&nbsp; *&nbsp;&nbsp;* *<br>&nbsp;&nbsp; *&nbsp;&nbsp;*<br>&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1 ; i &lt;= 5 ; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = i ; j &lt;=5&nbsp; ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>*****<br>****<br>***<br>**<br>*<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:20:00', NULL, 13, NULL),
	(100, 1, 1, '자바 - 다중반복문 5(별찍기 4)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test021 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 별찍기 4<br>&nbsp;&nbsp;&nbsp;&nbsp; /*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; * * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; * * * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* * * * *</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 0 ; i &lt;= 4 ; i++) {<br>&nbsp;&nbsp;&nbsp;for (int j = i ; j &lt;= 4 - 1 ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(" ");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;for (int j = 0 ; j &lt;= i ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}</p><p>&nbsp;}</p><p>}<br><br></p></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p><br></p><p>&nbsp; &nbsp; *<br>&nbsp;&nbsp; **<br>&nbsp; ***<br>&nbsp;****<br>*****<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:34:07', NULL, 13, NULL),
	(101, 1, 1, '자바 - 다중반복문 6(별찍기 5)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><p><br>public class Test022 {</p><p>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;// 별찍기 5<br>&nbsp;&nbsp;&nbsp;&nbsp; /*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; * * * * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; * * * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; * * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * *<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 0 ; i &lt;= 4 ; i++) {<br>&nbsp;&nbsp;&nbsp;for (int j = 0 ; j &lt;= i - 1 ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(" ");<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;for (int j = i ; j &lt;= 4 ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}<br>&nbsp;}</p><p>}<br><br></p></blockquote><p><br></p><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;"><p>*****<br>&nbsp;****<br>&nbsp; ***<br>&nbsp;&nbsp; **<br>&nbsp;&nbsp;&nbsp; *<br><br></p></blockquote><p>&nbsp;</p>', '2020-02-23 18:36:37', NULL, 17, NULL),
	(102, 1, 1, '학원 1주차(20200217~20200221) 정리', '<p>학원 1주차(20200217~20200221) 정리</p>\r\n<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1599807290_zoladnjg.jpg" style="width:100%" />', '2020-02-24 07:57:48', '2020-09-11 15:55:00', 19, NULL),
	(103, 1, 1, '자바 - 다중반복문 7(별찍기 6)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class StarDiamond {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;int size = 5;<br>&nbsp;&nbsp;int center = size / 2;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 0; i &lt; size; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = 0 ; j &lt; size ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;if (j &lt; center - i || j &gt; center + i || j &lt; i - center || j &gt;= size + center - i) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(" ");<br>&nbsp;&nbsp;&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("*");<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;&nbsp; *&nbsp; <br>&nbsp;*** <br>*****<br>&nbsp;*** <br>&nbsp; *&nbsp; <br></blockquote><p>&nbsp;</p>', '2020-03-08 14:38:07', NULL, 7, NULL),
	(104, 1, 1, '자바 - 배열 1(오름차순 정렬 - for, if 조합)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test26 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;//아래 배열을 오름차순으로 출력<br>&nbsp;&nbsp;int[] arr = {5, 7, 3, 2};<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int tmp = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 0; i &lt; arr.length - 1; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = i + 1; j &lt; arr.length; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;if(arr[i] &gt; arr[j]) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp = arr[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i] = arr[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j] = tmp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;for(int i = 0; i &lt; arr.length; i++) {<br>&nbsp;&nbsp;&nbsp;System.out.println(arr[i]);<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;2<br>3<br>5<br>7<br></blockquote><p>&nbsp;</p>', '2020-03-08 14:47:50', NULL, 7, NULL),
	(105, 1, 1, '자바 - 배열 2(오름차순 정렬 - 출력부분만 for, 나머지는 if 이용)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test27 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;//아래 배열을 오름차순으로 출력<br>&nbsp;&nbsp;int[] arr = {5, 7, 3, 2};<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int tmp = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[0] &gt; arr[1]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[0];<br>&nbsp;&nbsp;&nbsp;arr[0] = arr[1];<br>&nbsp;&nbsp;&nbsp;arr[1] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[0] &gt; arr[2]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[0];<br>&nbsp;&nbsp;&nbsp;arr[0] = arr[2];<br>&nbsp;&nbsp;&nbsp;arr[2] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[0] &gt; arr[3]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[0];<br>&nbsp;&nbsp;&nbsp;arr[0] = arr[3];<br>&nbsp;&nbsp;&nbsp;arr[3] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[1] &gt; arr[2]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[1];<br>&nbsp;&nbsp;&nbsp;arr[1] = arr[2];<br>&nbsp;&nbsp;&nbsp;arr[2] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[1] &gt; arr[3]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[1];<br>&nbsp;&nbsp;&nbsp;arr[1] = arr[3];<br>&nbsp;&nbsp;&nbsp;arr[3] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;if(arr[2] &gt; arr[3]) {<br>&nbsp;&nbsp;&nbsp;tmp = arr[2];<br>&nbsp;&nbsp;&nbsp;arr[2] = arr[3];<br>&nbsp;&nbsp;&nbsp;arr[3] = tmp;<br>&nbsp;&nbsp;}<br>&nbsp;<br>&nbsp;&nbsp;for(int i = 0; i &lt; arr.length; i++) {<br>&nbsp;&nbsp;&nbsp;System.out.println(arr[i]);<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;2<br>3<br>5<br>7<br></blockquote><p>&nbsp;</p>', '2020-03-08 14:52:29', NULL, 7, NULL),
	(106, 1, 1, '자바 - 클래스, 메소드, 객체 생성 테스트', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;// ⓛ클래스 생성<br>public class<span style="color: rgb(255, 0, 0);"> Test28s {</span></div><div>&nbsp;// ②메소드 생성<br>&nbsp;public int plus(int a, int b) {<br>&nbsp;&nbsp;return a + b;<br>&nbsp;}<br>&nbsp;<br>&nbsp;public int minus(int a, int b) {<br>&nbsp;&nbsp;return a - b;<br>&nbsp;}<br>&nbsp;<br>&nbsp;public int multiple(int a, int b) {<br>&nbsp;&nbsp;return a * b;<br>&nbsp;}<br>&nbsp;<br>&nbsp;public int division(int a, int b) {<br>&nbsp;&nbsp;return a / b;<br>&nbsp;}<br>&nbsp;<br><span style="color: rgb(255, 0, 0);">}</span><br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class <span style="color: rgb(58, 50, 195);">Test28 {</span></div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;//③ 객체 생성<br>&nbsp;&nbsp;Test28s ts28 = new Test28s();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;//④ 출력 테스트<br>&nbsp;&nbsp;int a = 3;<br>&nbsp;&nbsp;int b = 5;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.println(ts28.plus(a, b));<br>&nbsp;&nbsp;System.out.println(ts28.minus(a, b));<br>&nbsp;&nbsp;System.out.println(ts28.multiple(a, b));<br>&nbsp;&nbsp;System.out.println(ts28.division(a, b));<br>&nbsp;&nbsp;<br>&nbsp;}<br><span style="color: rgb(58, 50, 195);">}</span></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">8<br>-2<br>15<br>0<br></blockquote><p>&nbsp;</p>', '2020-03-08 15:58:37', NULL, 8, NULL),
	(107, 1, 1, '학원 2주차(20200224~20200227) 정리', '<p><img title="4346337413e7c5d9cbb4bce6fd9300ba_1583653261_3988.jpg" src="https://kr.object.iwinv.kr/yeonghoon.kim/old_board_img/2003/4346337413e7c5d9cbb4bce6fd9300ba_1583653261_3988.jpg"><br style="clear:both;">&nbsp;</p>', '2020-03-08 16:41:18', NULL, 10, NULL),
	(108, 1, 1, '자바 - 형변환', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test29 {<br>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;String s = "Hello World!!";<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 문자열.replace(찾을값, 바꿀값) : 모두바꿈<br>&nbsp;&nbsp;System.out.println(s.replace("l", "k"));<br>&nbsp;&nbsp;System.out.println(s.replaceAll("l", "k"));<br>&nbsp;&nbsp;System.out.println(s.replaceAll("l", ""));<br>&nbsp;&nbsp;// 문자열.replace(찾을값, 바꿀값) : 첫번째만 바꿈<br>&nbsp;&nbsp;System.out.println(s.replaceFirst("l", "k"));<br>&nbsp;&nbsp;System.out.println(s.replaceFirst("l", ""));<br>&nbsp;&nbsp;// 문자열.indexOf(찾을값) : 값의 위치를 찾아준다. 찾는 값이 없을 경우 -1<br>&nbsp;&nbsp;System.out.println(s.indexOf("1"));<br>&nbsp;&nbsp;// 문자열.indexOf(찾을값, 시작위치) : 시작위치부터 값의 위치를 찾아준다.<br>&nbsp;&nbsp;System.out.println(s.indexOf("l", 4));<br>&nbsp;&nbsp;// indexOf : 오름차순(앞에서 뒤로) / lastIndexOf : 내림차순(뒤에서 앞으로)<br>&nbsp;&nbsp;System.out.println(s.lastIndexOf("1"));<br>&nbsp;&nbsp;System.out.println(s.lastIndexOf("l", 4));<br>&nbsp;&nbsp;// 문자열.substring(위치) : 위치 이상의 문자열을 자른다.<br>&nbsp;&nbsp;// 문자열.substring(위치1, 위치2) : 위치1 이상(포함)부터 위치2 미만(포함X)까지의 문자를 자른다.<br>&nbsp;&nbsp;System.out.println(s.substring(2));<br>&nbsp;&nbsp;System.out.println(s.substring(7, 10));<br>&nbsp;&nbsp;// 문자열.length() : 문자열의 길이<br>&nbsp;&nbsp;System.out.println(s.length());<br>&nbsp;&nbsp;// 대문자화, 소문자화<br>&nbsp;&nbsp;System.out.println(s.toUpperCase());<br>&nbsp;&nbsp;System.out.println(s.toLowerCase());<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;String s2 = "가나다,라마바,사아자";<br>&nbsp;&nbsp;// 문자열.split(구분자) : 구분자로 문자를 자르고 배열로 만듬<br>&nbsp;&nbsp;String[] arr = s2.split(",");<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 0 ; i &lt; arr.length ; i++) {<br>&nbsp;&nbsp;&nbsp;System.out.println(arr[i]);<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;Hekko Workd!!<br>Hekko Workd!!<br>Heo Word!!<br>Heklo World!!<br>Helo World!!<br>-1<br>9<br>-1<br>3<br>llo World!!<br>orl<br>13<br>HELLO WORLD!!<br>hello world!!<br>가나다<br>라마바<br>사아자<br></blockquote><p>&nbsp;</p>', '2020-03-08 16:47:48', NULL, 7, NULL),
	(109, 1, 1, '자바 - 1! + 2! + 3! + ... + 10! 의 값 구하기(팩토리얼)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test024 {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;/* 팩토리얼 문제<br>&nbsp;&nbsp; * 1! + 2! + 3! + 4! + 5! + 6! + 7! + 8! + 9! + 10! = ?<br>&nbsp;&nbsp; * <br>&nbsp;&nbsp; * 1! = 1<br>&nbsp;&nbsp; * 2! = 2<br>&nbsp;&nbsp; * 3! = 6<br>&nbsp;&nbsp; * 4! = 24<br>&nbsp;&nbsp; * 5! = 120<br>&nbsp;&nbsp; * 6! = 720<br>&nbsp;&nbsp; * 7! = 5040<br>&nbsp;&nbsp; * 8! = 40320<br>&nbsp;&nbsp; * 9! = 362880<br>&nbsp;&nbsp; * 10! = 3628800<br>&nbsp;&nbsp; * <br>&nbsp;&nbsp; */<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int sum = 0;<br>&nbsp;&nbsp;int result = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for (int i = 0 ; i &lt; 11 ; i++) {<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;// result의 값이 1보다 작을 경우 i 값을 더함, 아닐 경우 i 값을 곱함.<br>&nbsp;&nbsp;&nbsp;if(result &lt; 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;result = result + i;<br>&nbsp;&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;result = result * i;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;sum = sum + result;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.println(sum);<br>&nbsp;<br>&nbsp;}<br>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;4037913<br></blockquote><p>&nbsp;</p>', '2020-03-08 16:52:03', NULL, 11, NULL),
	(110, 1, 1, '자바 - 가장 가까운 수 구하기(28, 19, 87........)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div><br>public class Test025 {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;// 57에 가장 가까운 수 구하기 - 28, 19, 87, 66, 45, 6, 79, 30, 96, 33<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int[] numbers = {28,19,87,66,45,6,79,30,96,33};<br>&nbsp;&nbsp;int targetNumber = 57;<br>&nbsp;&nbsp;int tmp = 0;<br>&nbsp;&nbsp;int tmp2 = 0;<br>&nbsp;&nbsp;int nearNum = 0;<br>&nbsp;<br>&nbsp;&nbsp;for(int i = 0; i &lt; numbers.length - 1; i++) {<br>&nbsp;&nbsp;&nbsp;for(int j = 0; j &lt; numbers.length; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;if(numbers[i] &gt;= targetNumber) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp = numbers[i] - targetNumber;<br>&nbsp;&nbsp;&nbsp;&nbsp;} else if(numbers[i] &lt; targetNumber) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp = targetNumber - numbers[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;if(tmp2 == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;tmp2 = tmp;<br>&nbsp;&nbsp;&nbsp;} else if(tmp &lt; tmp2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;tmp2 = tmp;<br>&nbsp;&nbsp;&nbsp;&nbsp;nearNum = numbers[i];<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.println(nearNum);<br>&nbsp;}<br>}<br>&nbsp;&nbsp;<br></div><div><br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;66<br></blockquote><p>&nbsp;</p>', '2020-03-08 17:11:30', NULL, 9, NULL),
	(111, 1, 1, '자바 - 1부터 100까지의 소수 개수 구하기', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test023 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 소수 개수<br>&nbsp;&nbsp;int sum = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 1은 소수가 아니므로 2부터 시작<br>&nbsp;&nbsp;for(int i = 2; i &lt; 101; i++) {<br>&nbsp;&nbsp;&nbsp;// i % j 결과가 0일 때 count 1 증가하기 위해 변수 선언<br>&nbsp;&nbsp;&nbsp;int count = 0;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;// i와 j의 값이 같을 때 빠져나옴.<br>&nbsp;&nbsp;&nbsp;for(int j = 1; j &lt;= i; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;if(i % j == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;/* count가 2일 때만 1을 더함.(3이상 나올 경우 소수 X)<br>&nbsp;&nbsp;&nbsp; * <br>&nbsp;&nbsp;&nbsp; * i를 1로 나눌 때, 소수 자신의 값으로 나눌 때(나머지가 0이 두 번만 나와야 소수) <br>&nbsp;&nbsp;&nbsp; * <br>&nbsp;&nbsp;&nbsp; */<br>&nbsp;&nbsp;&nbsp;if(count == 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;sum += 1;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;System.out.println(sum);<br>&nbsp;}<br>}</div><div><br></div><div><br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;25</blockquote><p>&nbsp;</p>', '2020-03-08 20:18:36', NULL, 12, NULL),
	(112, 1, 1, '자바 - 소인수분해', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"> <br>public class Test031 {<br><br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br><br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int targetNumber = 315;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int arrNum = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] numberLists = new int[100];<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int i = 2; i &lt; 315; i++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(targetNumber % i == 0) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;targetNumber = targetNumber / i;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;numberLists[arrNum] = i;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arrNum++;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int i = 0; i &lt; numberLists.length; i++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(numberLists[i] != 0)<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(numberLists[i]);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br><br>&nbsp;&nbsp; &nbsp;}<br><br>}<br>&nbsp;</blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">3<br>3<br>5<br>7 <br></blockquote><p>&nbsp;</p>', '2020-03-09 08:29:15', NULL, 13, NULL),
	(113, 1, 1, '[모범답안] 자바 - 1부터 100까지의 소수 개수 구하기', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test16 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;int primeNumCount = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 2; i &lt; 100 ; i++) {<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;int check = 0;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;for (int j = 2; j &lt; i ; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;if(i % j == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;if(check == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(i + " ");<br>&nbsp;&nbsp;&nbsp;&nbsp;primeNumCount++;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;System.out.println();<br>&nbsp;&nbsp;System.out.println("소수의 개수는 " + primeNumCount + "개 입니다.");<br>&nbsp;}<br>&nbsp;&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 <br>소수의 개수는 25개 입니다.<br></blockquote><p>&nbsp;</p>', '2020-03-22 19:39:04', NULL, 6, NULL),
	(114, 1, 1, '[모범답안] 자바 - 1! + 2! + 3! + ... + 10! 의 값 구하기(팩토리얼)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test17 {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;int sum = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1; i &lt;= 10; i++) {<br>&nbsp;&nbsp;&nbsp;int fact = 1;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;for(int j = 2; j &lt;= i; j++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;// fact = fact * j;<br>&nbsp;&nbsp;&nbsp;&nbsp;fact *= j;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;// sum = sum + fact;<br>&nbsp;&nbsp;&nbsp;sum += fact;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;System.out.println(sum);<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;}<br>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;4037913</blockquote><p>&nbsp;</p>', '2020-03-22 19:45:25', NULL, 7, NULL),
	(115, 1, 1, '[모범답안] 자바 - 가장 가까운 수 구하기(28, 19, 87........)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test18 {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;int[] arr = {28, 19, 87, 66, 45, 6, 79, 30, 96, 33};<br>&nbsp;&nbsp;int targetNumber = 57;<br>&nbsp;&nbsp;int result = arr[0];<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 1; i &lt; arr.length; i++) {<br>&nbsp;&nbsp;&nbsp;int cha1 = Math.abs(result - targetNumber);<br>&nbsp;&nbsp;&nbsp;int cha2 = Math.abs(arr[i] - targetNumber);</div><div>&nbsp;&nbsp;&nbsp;if(cha1 &gt; cha2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;result = arr[i];<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;System.out.println(result);<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;66</blockquote><p>&nbsp;</p>', '2020-03-22 19:53:50', NULL, 6, NULL),
	(116, 1, 1, '[모범답안] 자바 - 소인수분해', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;<br>public class Test19 {</div><div>&nbsp;public static void main(String[] args) {</div><div>&nbsp;&nbsp;int value = 315;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;for(int i = 2; i &lt;= value ; i ++) {<br>&nbsp;&nbsp;&nbsp;if(value % i == 0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(i + " ");<br>&nbsp;&nbsp;&nbsp;&nbsp;// value = value / i;<br>&nbsp;&nbsp;&nbsp;&nbsp;value /= i;<br>&nbsp;&nbsp;&nbsp;&nbsp;i--;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;3 3 5 7</blockquote><p>&nbsp;</p>', '2020-03-22 20:00:21', NULL, 5, NULL),
	(117, 1, 1, '자바 - 상속', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>&nbsp;public class <span style="color: rgb(255, 0, 0);">Test22P</span> {<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><br>public class <span style="color: rgb(58, 50, 195);">Test22C</span> extends <span style="color: rgb(255, 0, 0);">Test22P</span>{<br>&nbsp;<br>}<br>&nbsp;</blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;<span style="color: rgb(58, 50, 195);">Test22C</span> test = new <span style="color: rgb(58, 50, 195);">Test22C</span>();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;test.p();<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">&nbsp;부모메소드</blockquote><p>&nbsp;</p>', '2020-03-22 21:24:15', NULL, 6, NULL),
	(118, 1, 1, '자바 - 오버라이딩(재정의)', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 13, NULL),
	(119, 1, 1, '학원 3주차 정리', '-조건문 : if ~ else if ~ else, switch<br />\r\n<br />\r\n-반복문 : while, do~while, for<br />\r\n<br />\r\n-변수 기본형 : 정수형, 실수형, 문자형, 문자열, 질의형<br />\r\n<br />\r\n-형변환<br />\r\n숫자 -&gt; 숫자 : (타입) 값 -&gt; 캐스팅<br />\r\n숫자 -&gt; 문자열 : 타입클래스.toString(값)<br />\r\n문자열 -&gt; 숫자 : 타입클래스.parse타입(값)<br />\r\n<br />\r\n-문자열<br />\r\n바꾸기 - replace<br />\r\n찾기 - indexOf<br />\r\n자르기 - substring<br />\r\n길이 - length<br />\r\n배열 - split<br />\r\n<br />\r\n-반복문의 지속과 중단<br />\r\ncontinue -&gt; 반복문에서 내용 실행 중 continue가 실행되면 증감값으로 바로 이동<br />\r\nbreak -&gt; 반복문을 강제로 종료함<br />\r\n<br />\r\n-문자열 String = 클래스<br />\r\n클래스를 사용하려면 객체를 생성해야하는데, String의 경우 자동으로 객체 생성해줌.<br />\r\n<br />\r\n-문자열 값 비교<br />\r\n문자열.equals(값) : 주소를 비교하는 게 아니라 &#39;해당 주소에 있는&#39; 내용을 비교함.<br />\r\n문자열에서 &#39;==&#39;는 주소를 비교하겠다는 의미이므로 문자열 비교시 문자열.equals(값)을 써야 함<br />\r\n(같은 클래스에서는 동일한 값을 지닌 문자열을 객체를 공유하지만, 다른 클래스일 경우에는 주소가 다르기 때문)<br />\r\n<br />\r\n-상속 : 권한이 허용하는 모든 것을 물려받음(가져다 쓸 수 있음)<br />\r\n1개의 부모만 존재. 1:1 관계(자식입장)<br />\r\n자바에서는 다중 상속을 허용하지 않음.\r\n<blockquote>\r\n<p>접근권한 class 클래스명 <strong>extends 부모클래스명</strong> {<br />\r\n&nbsp;&nbsp;&nbsp; 내용<br />\r\n}</p>\r\n</blockquote>\r\n<br />\r\n-오버라이딩 : 부모에 존재하는 메소드를 자식에서 재정의하는 것. 상속과 관련 있음. 덮어쓴다는 개념(update)<br />\r\n<br />\r\n-오버로딩 : 이름만 동일한 메소드를 여러 개 생성(나머지는 다름). 상속과 관계 없음.<br />\r\nex) println(int, string, long.......)<br />\r\n&nbsp;\r\n<table border="2" cellpadding="1" cellspacing="1" style="width:100%" summary="오버라이딩, 오버로딩 비교">\r\n	<thead>\r\n		<tr>\r\n			<th scope="col">&nbsp;</th>\r\n			<th scope="col"><strong>위치</strong></th>\r\n			<th scope="col"><strong>기능</strong></th>\r\n			<th scope="col"><strong>조건</strong></th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>오버라이딩</strong></td>\r\n			<td>상속관계</td>\r\n			<td>재정의(update)</td>\r\n			<td>반환타입, 메소드명, 인자타입, 인자개수 동일<br />\r\n			접근권한은 넓어질 수 있음.<br />\r\n			예외처리는 좁아질 수 있음</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>오버로딩</strong></td>\r\n			<td>동클래스 내부</td>\r\n			<td>신규(new)</td>\r\n			<td>메소드명은 동일, 인자개수, 인자타입이 틀려야 함.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n-Object(java.lang.object) : 자바의 최상위 클래스. 별도의 선언이 없는 한 자동 상속<br />\r\nObject에는 어떠한 데이터도 담을 수 있음(정해진 형태 X).<br />\r\n공간적인 효율이 좋지 않음. 하지만 사용자가 어떤 값을 입력할지 모를 때 사용함.<br />\r\n<br />\r\n-인터페이스 : 틀. 개발의 형태를 제공하기 위해 사용.<br />\r\n기본적으로 내용이 없이 선언만 가능. 자바 1.8이상부터는 내용도 들어감. 형태를 일치시켜야 할 경우 사용(협업 시)\r\n<blockquote>\r\n<p>접근권한 interface 인터페이스명 {<br />\r\n&nbsp;&nbsp;&nbsp; 내용&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *내용의 메소드는 메소드 내용을 가질 수 없음() X<br />\r\n}</p>\r\n</blockquote>\r\n<br />\r\n-참조 : 인터페이스를 클래스에서 사용하기 위해 사용. 1:N관계<br />\r\n(내용이 없기 때문에 중복되어도 상관없음)\r\n<blockquote>\r\n<p>접근권한 class 클래스명 impliment 인터페이스명, ... {<br />\r\n&nbsp;&nbsp;&nbsp; 내용<br />\r\n}</p>\r\n</blockquote>\r\n<br />\r\n-추상클래스(abstract class) : 일부 미완성 형태로 구현된 클래스.[지폐 앞면 완성, 지폐 뒷면 비어있음]. 객체 생성 불가능. 상속을 통해 사용. 추상메소드를 오버라이딩해서 사용.<br />\r\n반제품. diy제품, 확장성.<br />\r\n공통적 영역 + <u>추가적 영역</u>\r\n\r\n<blockquote>\r\n<p>접근권한 abstract class 클래스명 {<br />\r\n&nbsp;&nbsp;&nbsp; 내용&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n}<br />\r\n<br />\r\n*추상 메소드(내용이 없는 메소드)의 경우 아래와 같이 입력<br />\r\n접근권한 abstract 반환타입 메소드명(인자타입 인자명, .....);</p>\r\n</blockquote>\r\n<br />\r\n-package : 파일(클래스, 인터페이스, 데이터, 이미지 등)을 보관. 폴더와 동일. 용도에 따라 분리해서 사용 가능.<br />\r\n3단 패키지를 기본 구조로 잡음. kim.yeonghoon.www (국가도메인, 업체명, 도메인명)<br />\r\n.controller : 조작 관리. main<br />\r\n.service : 기능(메소드)<br />\r\n.util : 공통 기능<br />\r\n<br />\r\n-import : 경로 정보<br />\r\nex) import kim.yeonghoon.www.controler;<br />\r\n<br />\r\n-접근권한(주로 사용하는 3가지 권한)<br />\r\n1) public(≒<span style="font-family:Noto Sans CJK KR">default) : 어디서나 접근 가능<br />\r\n2) protected(</span>≒<span style="font-family:Noto Sans CJK KR">friendly) : 상속 관계 + 동일 패키지<br />\r\n3) private : 내 클래스 안에서만 쓸 수 있음<br />\r\n*전역변수의 경우 권한이 필요함. 권한 자체는 더 넓어질 수 있음(오버라이딩)<br />\r\n<br />\r\n-캡슐화 : 데이터의 직접적인 접근을 막아서 데이터를 보호하는 것<br />\r\n1) 장점 : 자료 변조 막을 수 있음. 규칙적임.<br />\r\n2) 동의어 : bean, DTO(Data Type Object), DO(Data Object), VO(Value Object)<br />\r\n3) 전역 변수 권한은 무조건 private. 변수의 값 할당과 취득을 위한 setter, getter 메소드 생성</span>\r\n\r\n<blockquote>\r\n<p><span style="font-family:Noto Sans CJK KR">private int no; // 다른 클래스에서 직접적으로 no에 값을 넣을 수 없음<br />\r\n<br />\r\npublic int getNo() { // 변수를 불러오기 위해 getNo 메소드를 이용<br />\r\n&nbsp;&nbsp;&nbsp; return no;<br />\r\n}<br />\r\n<br />\r\npublic void setNo() { // setNo 메소드를 이용하여 변수를 변경<br />\r\n&nbsp;&nbsp;&nbsp; this.no = no;<br />\r\n}</span></p>\r\n</blockquote>\r\n<br />\r\n-List(인터페이스) : 목록의 형태로 데이터를 관리<br />\r\nList 클래스 - ArrayList, LinkedList\r\n<blockquote>\r\n<p>List&lt;클래스&gt; 변수명 = new ArrayList&lt;클래스&gt;();</p>\r\n</blockquote>\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600563718_wxrhkjzy.jpg" style="height:215px; width:193px" /><br />\r\n<br />\r\n-제너릭 : 형태지정 &lt;클래스, ....&gt; : 대상의 자료 개수만큼 지정<br />\r\n<br />\r\n-ArrayList 관련 내용<br />\r\n1) add(값) : 리스트에 값을 추가한다.<br />\r\n2) get(인덱스번호) : 리스트에서 인덱스 번호의 값을 가져온다.<br />\r\n3) remove(인덱스번호) : 리스트에서 인덱스번호를 지운다.<br />\r\n4) indexOf(값) : 리스트에서 값이 있는 인덱스번호를 취득한다.<br />\r\n5) contains(값) : 리스트에서 값이 있는지를 확인. boolean으로 결과를 보여줌.<br />\r\n6) set(인덱스번호, 값) : 리스트에서 인덱스번호의 값을 주어진 값으로 변경한다.<br />\r\n7) clear() : 리스트를 비운다.<br />\r\n8) isEmpty() : 리스트가 비어있는지 확인. boolean<br />\r\n9) size() : 리스트의 개수를 출력<br />\r\n<br />\r\n-for의 다른 사용 방법<br />\r\nfor(타입 변수명 : 목록형데이터) : 목록형 데이터의 개수만큼 반복한다. 반복시 변수에 데이터를 변수에 넣어준다.\r\n<blockquote>\r\n<p>for(int data : list) {<br />\r\n&nbsp;&nbsp;&nbsp; System.out.println(data);<br />\r\n}</p>\r\n</blockquote>\r\n', '2020-03-23 09:48:36', NULL, 9, NULL),
	(120, 1, 1, '학원 4주차 정리', '-자료형 클래스 : 여러 개의 데이터를 담아놓고 사용(처리)하기 위해 사용.<br />\r\n<br />\r\n-제너릭을 사용하지 않을 경우 object가 됨 -&gt; 기능을 제대로 쓰려면 클래스의 형변환이 필요.<br />\r\n<br />\r\n-Map : 키와 값으로 이루어진 자료 보관 형태. 여러가지 Map이 있지만, 보통 HashMap, TreemMap을 사용함. 우리나라에서는 HashMap을 많이 사용함. 배열과 다른점은 순차적이지 않으며, 주소를 통해 값을 관리함(해시코드 기반으로 관리)<br />\r\n<br />\r\n-HashMap 생성\r\n<blockquote>\r\n<p>HashMap&lt;클래스명, 클래스명&gt; 변수명 = new HashMap&lt;클래스명, 클래스명&gt;();</p>\r\n</blockquote>\r\n들어갈 데이터 형태가 정해져있으며,키를 통해 값을 확인함.<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600564382_kteimghv.jpg" style="height:136px; width:200px" /><br />\r\n1) put(키, 값) : map에 해당 데이터를 추가한다. 킷값이 이미 있다면 덮어씌워짐(굳이 replace를 안쓰는 이유)<br />\r\n2) get(키) : 키에 해당하는 값을 돌려준다.<br />\r\n3) remove(키) : 키에 해당하는 내용을 제거한다.(값만 없을 뿐 공간은 존재. null 출력)<br />\r\n4) containsKey(값), containsValue(값) : 값에 해당하는 키나 값이 없으면 boolean으로 제공<br />\r\n<br />\r\n-Set : 단순히 값을 담아놓는 역할을 함(추가적으로 값 취득 못함). 배열이나 Iterator로 변환 가능.<br />\r\nhasNext() : 다음에 값이 있는지 확인<br />\r\nnext() : 다음으로 이동하며, 다음 값을 돌려준다.<br />\r\n<br />\r\n-Iterator : 값을 순차적으로 보관. 값 추가 불가능. 단지 가져오는 기능밖에 없음. 취득도 순차적으로 되며, 뒤로는 못감. 레코드판 생각하면 됨.<br />\r\n&nbsp;\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:100%">\r\n	<thead>\r\n		<tr>\r\n			<th scope="col">&nbsp;</th>\r\n			<th scope="col">크기</th>\r\n			<th scope="col">값 추가</th>\r\n			<th scope="col">값 취득</th>\r\n			<th scope="col">순차적</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>Array</td>\r\n			<td>고정</td>\r\n			<td>크기 않에서 가능</td>\r\n			<td>가능</td>\r\n			<td>O</td>\r\n		</tr>\r\n		<tr>\r\n			<td>List</td>\r\n			<td>유동적</td>\r\n			<td>가능</td>\r\n			<td>가능</td>\r\n			<td>O</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Map</td>\r\n			<td>유동적</td>\r\n			<td>가능</td>\r\n			<td>가능</td>\r\n			<td>X</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Set</td>\r\n			<td>유동적</td>\r\n			<td>가능</td>\r\n			<td>불가능</td>\r\n			<td>O</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Iterator</td>\r\n			<td>고정</td>\r\n			<td>불가능</td>\r\n			<td>가능</td>\r\n			<td>O</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n-Set과 Iterator는 Array, List, Map 일종의 하위호환이므로 잘 쓰이지 않음.<br />\r\n값이 순차적일 때는 Array, List를 사용하며, 크기가 유동적이라면 List를 씀.<br />\r\n<br />\r\n-List list = new ArrayList&gt;(); 형태로 사용하거나 HashMap만 단독으로 사용하는 경우가 많음. 아래는 List와 HashMap을 같이 쓸 때 구조<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600564917_lxlqhtjz.jpg" style="width:100%" /><br />\r\n<br />\r\n<br />\r\n-객체의 주소 연결/분리<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600564996_dgbacepi.jpg" style="width:100%" /><br />\r\n<br />\r\n-Math 클래스 : 올림(ceil), 버림(floor), 반올림(round)를 주로 사용. 자바에서 수학을 처리하는 것보다 디비에서 처리하는 경우가 많음.<br />\r\n<br />\r\n-자주 사용하는 메소드(a = 3.1415f, b = -17)<br />\r\n1) ceil(값) : 올림 - 4.0<br />\r\n2) floor(값) : 버림 - 3.0<br />\r\n3) round(값) : 반올림 - 3<br />\r\n4) abs(값) : 절대값 - 17<br />\r\n5) random() : 0.0 ~ 0.999999999999999까지의 난수 생성(소수점 15개)<br />\r\n<br />\r\n-Random 클래스<br />\r\nimport java.util.Random을 불러와야 함.<br />\r\nnextInt(값) : 0 ~ 값전까지 랜덤값 돌려줌.<br />\r\n<br />\r\n-1 ~ 10까지의 랜덤 숫자 구하기(정수)<br />\r\n1) Math 클래스 사용<br />\r\n공식 - Math.floor(랜덤 * 범위개수) + 시작값<br />\r\n(int) Math.floor(Math.random() * 10) + 1<br />\r\n2) Random 클래스 사용<br />\r\nRandom r = new Random();<br />\r\nr.nextInt(10) + 1<br />\r\n<br />\r\n-Calendar : 시스템에서 날짜를 취득<br />\r\n날짜, 시간은 기본적으로 컴퓨터에서 받아옴. 타임존, 지역 등도 취득 가능하나 일반적으로 컴퓨터 시간을 기준으로 사용.<br />\r\nCalendar c = Calendar.get.instance();<br />\r\n<br />\r\n-Calendar 메소드<br />\r\n1) 연 : c.get(Calendar.YEAR)<br />\r\n2) 월 : c.get(Calendar.MONTH + 1)<br />\r\n3) 일 : c.get(Calendar.DATE)<br />\r\n4) 시(12시간 기준) : c.get(Calendar.HOUR)<br />\r\n5) 시(24시간 기준) : c.get(Calendar.HOUR_OF_DAY)<br />\r\n6) 오전(1) 오후(0) - 오전이면 TRUE(1), 오후면 FALSE(0) 반환 : c.get(Calendar.AM)<br />\r\n7) 오전(0) 오후(1) - 오전이면 FALSE(0), 오후면 TRUE(1) 반환 : c.get(Calendar.AM_PM)<br />\r\n8) 분 : c.get(Calendar.MINUTE)<br />\r\n9) 초 : c.get(Calendar.SECOND)<br />\r\n10) 요일(주 [n]번쨰 날 : 일요일[1] ~ 토요일[7]) : c.get(Calendar.DAY_OF_WEEK)<br />\r\n<br />\r\n-Scanner 메소드<br />\r\n1) nextLine() : 한줄을 받아오겠다. -&gt; 다음 엔터까지. 남아ㅣㅆ는 엔터 취득(누적되어 있는 것을 초기화하는 행위)<br />\r\n2) nextInt() : 다음 숫자를 받아오겠다.<br />\r\n3) next() : 다음 한 단어를 받아오겠다. -&gt; 공백전까지', '2020-03-23 11:28:12', NULL, 4, NULL),
	(121, 1, 1, '[모범답안] 숫자야구', 'import java.util.ArrayList;<br />\r\nimport java.util.List;<br />\r\nimport java.util.Scanner;<br />\r\n<br />\r\npublic class Exam03 {<br />\r\n<br />\r\n&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 숫자야구 0~9까지<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 랜덤으로 중복없이 숫자 3개<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 사용자가 숫자 3개를 입력시 결과를 제공<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 자리와 값이 일치하면 S(스트라이크)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 자리는 틀리나 값이 일치하면 B(볼)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 값이 일치하지 않으면 O(아웃)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 총 9번안에 3S가 나와야 승리.<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Integer&gt; inList = new ArrayList&lt;Integer&gt;();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int d = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int j = 0; j &lt; 3; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;d = (int) Math.floor(Math.random() * 9);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (list.contains(d) == true) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;j--;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;continue;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;list.add(d);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int i = 0; i &lt; 9 ; i++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(true) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;inList.clear();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;-------------&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;0~9까지 숫자 3개를 입력해 주세요. 중복없이 띄어쓰기로 구분&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;ex)1 2 3&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;-------------&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String[] temp = sc.nextLine().split(&quot; &quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean b = true;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; temp.length - 1 ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int k = j + 1 ; k &lt; temp.length ; k++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(temp[k].equals(temp[j])) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b = false;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(!b) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(b) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; temp.length ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;inList.add(Integer.parseInt(temp[j]));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;중복된 숫자는 입력할 수 없습니다.&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int s = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int b = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int o = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; inList.size() ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(list.indexOf(inList.get(j)) &gt;= 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&amp;&amp; list.indexOf(inList.get(j)) == j) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;s++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else if(list.indexOf(inList.get(j)) &gt;= 0) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;o++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] arr = new int[3];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; list.size() ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr[j] = list.get(j);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] inArr = new int[3];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; inList.size() ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;inArr[j] = inList.get(j);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int s1 = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int b1 = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int o1 = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int j = 0 ; j &lt; inArr.length ; j++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int k = 0 ; k &lt; arr.length ; k++) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(inArr[j] == arr[k] &amp;&amp; j == k) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;s++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else if(inArr[j] == arr[k]) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(s1 + b1 + o1 &lt; j + 1) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;o1++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(&quot;결과 =&gt; S : &quot; + s + &quot;, B : &quot; + b + &quot;, O : &quot; + o );<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(s == 3) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n&nbsp;', '2020-03-23 17:21:52', NULL, 3, NULL),
	(122, 1, 1, '학원 20200323 정리(에러, 예외처리)', '-에러(Error) : 코드상의 문제로 컴파일이 불가능한 상태를 말함.(Compile X)<br />\r\n<br />\r\n<br />\r\n-예외(Exception) : 정상적으로 실행되었으나, 실행중 입력값 등에 의해 발생하는 상태.<br />\r\nex) 배열의 범위가 벗어남. 형변환 타입이 정상적이지 않음.<br />\r\n<br />\r\n<br />\r\n-예외처리 : 예외 발생 시 해당시점에서 프로그램 안정성을 위해 처리하는 방법<br />\r\n1) 기본 형태 : try ~ catch ~ (finally)\r\n<blockquote>\r\n<p>try {<br />\r\n&nbsp;&nbsp;&nbsp; 내용 1;<br />\r\n} catch(예외클래스 변수명) {<br />\r\n&nbsp;&nbsp;&nbsp; 내용 2;<br />\r\n}</p>\r\n</blockquote>\r\n내용 1을 시도한다 -&gt; 만약 예외클래스에 해당하는 예외가 발생하면 내용 2를 실행한다.<br />\r\n*try catch에서 catch가 여러 개 존재할 경우 예외는 좁은 범위부터 추가하여야 함.<br />\r\n(Exception - NumberFormatException 순서로 사용 불가. 반대는 가능)<br />\r\n<br />\r\n2) try 안에 throw 들어올 경우 : 뒤에 오는 객체에 해당하는 예외를 강제 발생<br />\r\n<br />\r\n3) throws : 발생할 수도 있는 예외에 대한 정의. 보통 자바외적인 것(디비 등)과 연결처리할 때 사용. DB 연결 실패와 같은 상황 발생 시 해당 부분에 대해 예외처리를 해주어야 문제가 발생하지 않음. 오버라이딩시에는 권한 자체가 좁아질 수 있음.\r\n<blockquote>\r\n<p>접근권한 반환타입 메소드명(인자타입 인자명, ....) throws 예외클래스, .... {<br />\r\n&nbsp;&nbsp;&nbsp; 내용;<br />\r\n}</p>\r\n</blockquote>\r\n<br />\r\n-printStackTrace() : 자바에서 발생한 예외에 대한 내용을 출력하기를 요청(자바)', '2020-03-23 19:30:21', NULL, 1, NULL),
	(123, 1, 1, '학원 20200324 정리(변수, 디자인패턴)', '<strong>-static </strong>: 객체 생성 없이 사용 가능 -&gt; 자바에서 미리 해당 내용만 가져다가 생성<br />\r\n어디서 불러다 사용하여도 동일한 내용을 가져옴(공유 변수, shared, 공공재)<br />\r\n바꾸면 모두 바뀜.<br />\r\n<br />\r\n<br />\r\n<strong>-변수와 메소드 사용방법 차이</strong><br />\r\n1) 변수<br />\r\n접근권한 static 타입 변수명 = 값;<br />\r\nex - public static int abc = 123;<br />\r\n<br />\r\n2) 메소드<br />\r\n접근권한 static 반환타입 메소드명(인자타입 인자명, ....) {<br />\r\n&nbsp;&nbsp;&nbsp; 내용<br />\r\n}<br />\r\nex - public static void main(String[] args) {}<br />\r\n<br />\r\n<br />\r\n<strong>-Java에서 main 메소드 </strong>: 해당 프로그램을 실행할 때 해당 main 메소드를 자동 실행한다. 따라서 무조건적으로 main이 존재하여야 한다.<br />\r\n<br />\r\n<strong>-final</strong> : 상태를 고정시킨다. 단독으로 쓰이는 경우는 드물며, 보통 static과 final을 같이 씀.<br />\r\n변수 : 값을 고정. 암호화 키(값이 바뀌면 해석X)<br />\r\n메소드 : 오버라이딩 불가. 위변조 방지(배포용 소스)<br />\r\n주로 변수에서 static final을 같이 써서 &#39;상수화&#39;할 때 사용(파일 업로드 경로, 필요한 설정값)<br />\r\n<br />\r\n<strong>-지역변수 </strong>: 객체생성 필요. 변경 가능<br />\r\n<br />\r\n<strong>-전역변수</strong><br />\r\n1) (일반) 전역변수 : 객체생성 필요. 변경 가능<br />\r\n2) 정적변수(static) : 객체생성 필요 없음. 변경 가능<br />\r\n3) 상수(static final) : 객체생성 필요 없음. 변경 불가<br />\r\n<br />\r\n<strong>-디자인 패턴</strong><br />\r\n개발의 효율적인 형태를 취하기 위한 구현 방식. 필수가 아닌 선택(권장사항)<br />\r\n<br />\r\n<br />\r\n<strong>-싱글톤 패턴 </strong>: 객체의 재사용성을 높여 자원효율 및 관리를 극대화시킨 디자인패턴.<br />\r\n객체 생성을 한 번만 해서 쓰자.(객체 호출 시점부터 프로그램 끝까지)<br />\r\n빈번하게 사용되는 객체를 따로 만들어서 호출.<br />\r\n객체의 주소값을 변수에 담아서 사용하기 때문에 상태값이 유지됨<br />\r\n(static은 아니지만 static처럼 사용 가능)<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600567662_hfmafwzm.jpg" style="width:100%" />', '2020-03-24 18:05:23', NULL, 1, NULL),
	(124, 1, 1, '학원 20200330 정리(데이터베이스 기본)', '<strong>-Database</strong> : 스키마를 관리하기 위하여 만들어짐<br />\r\n<br />\r\n<br />\r\n<strong>-데이터 </strong>: 수치화, 기록화 할 수 있는 것<br />\r\n<br />\r\n<br />\r\n<strong>-스키마 </strong>: 개념의 집합<br />\r\n<br />\r\n<br />\r\n<strong>-DBMS</strong> : DB를 관리하는 서비스<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600567980_kbcnrkav.jpg" style="width:100%" /><br />\r\n<br />\r\n<strong>-ANSI-DB를 기본으로 만들어진 데이터베이스들</strong><br />\r\n오라클, MySQL(MariaDB), MS-SQL, SQLite..... 그외 DB2, Sybase, 티베로가 있음<br />\r\n<br />\r\n<br />\r\n<strong>-NO-SQL을 표방하는 데이터베이스들</strong><br />\r\nMongoDB, Oracle NoSQL<br />\r\n<br />\r\n<br />\r\n<strong>-RDBMS와 NO-SQL 장점을 가지고 만든 데이터베이스</strong><br />\r\nfirebase<br />\r\n<br />\r\n<br />\r\n<strong>-SQL</strong><br />\r\n1) DML : 데이터 조작어 -&gt; 조회, 수정, 추가, 삭제(crud)<br />\r\n2) DCL : 데이터 제어어 -&gt; 권한<br />\r\n3) DDL : 데이터 정의어 -&gt; 구조적 요소 생성, 변경, 삭제<br />\r\n<br />\r\n<br />\r\n<strong>-SELECT</strong><br />\r\nSELECT 값, 값, .....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3. 값을 보여준다.<br />\r\nFROM 데이터&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. 데이터를 가져온다.<br />\r\nWHERE 조건&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. 조건이 true인 것만 남긴다.<br />\r\nORDER BY 값 정렬순서, ....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4. 값을 정렬순서에 맞추어 정렬한다.<br />\r\n<br />\r\n<br />\r\n<strong>-실행 순서</strong><br />\r\n1) 일반적 : FROM -&gt; WHERE -&gt; SELECT -&gt; ORDER BY<br />\r\n2) 순차함수 사용 시 : FROM -&gt; WHERE -&gt; ORDER BY -&gt; SELECT<br />\r\n<br />\r\n<br />\r\n-AS(alias) : 별칭 컬럼명을 원하는 이름으로 지정해서 사용할 수 있음.<br />\r\nex) SELECT ENAME AS 이름, HIREDATE AS 입사일, SAL AS 월급<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP;\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:500px">\r\n	<thead>\r\n		<tr>\r\n			<th scope="col">이름</th>\r\n			<th scope="col">입사일</th>\r\n			<th scope="col">월급</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>SMITH</td>\r\n			<td>1980-12-17</td>\r\n			<td>800</td>\r\n		</tr>\r\n		<tr>\r\n			<td>ALLEN</td>\r\n			<td>1981-02-20</td>\r\n			<td>1000</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', '2020-03-30 19:24:42', '2020-09-20 11:20:54', 4, NULL),
	(125, 1, 1, '학원 20200331 정리(SELECT 기본 함수)', '--ASC : 오름차순(기본값으로 생략 가능), DESC : 내림차순<br />\r\n--ORDER BY는 정렬 우선순위를 기준으로 정렬<br />\r\n--먼저 나온 것들을 정렬하고 그 안에서 추가 정렬이 이루어짐\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- WHERE 조건 AND,OR 조건<br />\r\n-- 데이터베이스에서는 자동으로 형변환 이루어짐<br />\r\n-- 문자열은 홑따옴표\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL &lt; 1000<br />\r\nOR SAL &gt;= 3000<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- NULL의 경우 IS NULL\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE COMM IS NULL<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- NULL이 아닌 경우 IS NOT NULL\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE COMM IS NOT NULL<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 같다 = / 같지 않다 !=\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE ENAME = &#39;SMITH&#39;<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- LIKE : ~와 같은, 닮은.<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp; % -&gt; 있을 수도 있고 없을 수도 있다.\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE ENAME LIKE &#39;S%&#39;<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 이름이 A로 시작하고 중간이나 끝에 A가가 들어가는 사원 구하기<br />\r\n--&nbsp; A%A% -&gt; A(D)A(MS)\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE ENAME LIKE &#39;A%A%&#39;<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여가 1500이상이고 3000이하인 사원을 구하시오.<br />\r\n-- 이것도 가능하지만, BETWEEN 사용함.\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL &gt;= 1500 AND SAL &lt;= 3000<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여가 1500이상이고 3000이하인 사원을 구하시오.<br />\r\n-- 값 BETWEEN A AND B : 값이 A이상 B이하인 것, 숫자, 날짜 비교도 됨\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL BETWEEN 1500 AND 3000<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여가 1500이거나 1600이거나 3000인 사원을 구하시오.\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL = 1500<br />\r\nOR SAL = 1600<br />\r\nOR SAL = 3000<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여가 1500이거나 1600이거나 3000인 사원을 구하시오.<br />\r\n-- 값 IN (A, B, C, .....) : 값이 A이거나 B이거나 C이거나.... 인 것\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL IN (1500, 1600, 3000)<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여가 1500이거나 1600이거나 3000인 사원을 구하시오.<br />\r\n-- NOT IN은 IN의 반대. ~이지 않은 것(부정)\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP<br />\r\nWHERE SAL NOT IN (1500, 1600, 3000)<br />\r\nORDER BY ENAME ASC, HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 사칙연산<br />\r\n-- DUAL : 컬럼과 데이터가 없는 가상테이블\r\n<blockquote>\r\n<p>SELECT 1 + 2 * 3<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- MOD(값1, 값2) : 값1을 값2로 나눈 나머지\r\n<blockquote>\r\n<p>SELECT MOD(4,2)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- ABS(값) : 값의 절대값\r\n<blockquote>\r\n<p>SELECT ABS(-3)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- ROUND(값) : 값을 반올림한다<br />\r\n-- CEIL(값) : 값을 올림한다<br />\r\n-- FLOOR(값) : 값을 버림한다.\r\n<blockquote>\r\n<p>SELECT ROUND(3.1415), CEIL(3.1415), FLOOR(3.1415)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- ROUND(값, 값2) : 값1을 값2 소숫점자리까지 반올림\r\n<blockquote>\r\n<p>SELECT ROUND(3.1415), ROUND(3.1415, 2)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- SQRT(값) : 제곱근 -&gt; 루트<br />\r\n-- POWER(값1, 값2) : 값1의 값2제곱\r\n<blockquote>\r\n<p>SELECT SQRT(4), POWER(2, 3)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- CONCAT(값1, 값2) : 값1과 값2를 이어준다.\r\n<blockquote>\r\n<p>SELECT CONCAT(&#39;HELLO &#39;, &#39;WORLD!!!&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- || : 문자열을 이어준다\r\n<blockquote>\r\n<p>SELECT &#39;HELLO &#39; || &#39;WORLD&#39; || &#39;!!&#39;<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- SUBSTR(값, 숫자1) : 값을 숫자1번째부터 자름\r\n<blockquote>\r\n<p>SELECT&nbsp; SUBSTR(&#39;HELLO WORLD&#39;, 3)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- SUBSTR(값, 숫자1, 숫자2) : 값을 숫자1번째부터 숫자 2개만큼 자름\r\n<blockquote>\r\n<p>SELECT&nbsp; SUBSTR(&#39;HELLO WORLD&#39;, 3, 2)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- INSTR(값1, 값2) : 값1의 앞에서부터 값2를 찾는다.\r\n<blockquote>\r\n<p>SELECT INSTR(&#39;HELLO WORLD!!&#39;, &#39;L&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- INSTR(값1, 값2, 숫자) : 값1에서 숫자개수부터 값2를 찾는다.<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 음수의 경우 거꾸로\r\n<blockquote>\r\n<p>SELECT INSTR(&#39;HELLO WORLD!!&#39;, &#39;L&#39;, -4)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- REPLACE(값, 값1, 값2) : 값에서 값1을 찾아 값2로 변경\r\n<blockquote>\r\n<p>SELECT REPLACE(&#39;HELLO WORLD!!&#39;, &#39;L&#39;, &#39;K&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- REPLACE(값, 값1, &#39;&#39;) : 값에서 값1을 찾아 지우기\r\n<blockquote>\r\n<p>SELECT REPLACE(&#39;HELLO WORLD!!&#39;, &#39;L&#39;, &#39;&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- LENGTH(값) : 값의 길이를 가져온다\r\n<blockquote>\r\n<p>SELECT LENGTH(&#39;HELLO WORLD!!&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- UPPER(값) : 값을 모두 대문자로\r\n<blockquote>\r\n<p>SELECT UPPER(&#39;HELLO WORLD!!&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- LOWER(값) : 값을 모두 소문자로\r\n<blockquote>\r\n<p>SELECT LOWER(&#39;HELLO WORLD!!&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 현재 날짜/시간\r\n<blockquote>\r\n<p>SELECT SYSDATE<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- TO_CHAR : 문자로 바꾸는 함수<br />\r\n-- TO_CHAR 사용 시 주의사항 : -이나 .을 사용하는 것은 상관없음<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 한글 안됨.<br />\r\n<br />\r\n<br />\r\n-- Y : 연도<br />\r\n-- M : 월<br />\r\n-- D : 일<br />\r\n-- DAY : 요일<br />\r\n-- AM : 오전/오후<br />\r\n-- HH : 12시간 기준 시<br />\r\n-- HH24 : 24시간 기준 시<br />\r\n-- MI : 분<br />\r\n-- SS : 초\r\n<blockquote>\r\n<p>SELECT TO_CHAR(SYSDATE, &#39;YYYY-MM-DD DAY AM HH24:MI:SS&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- IW : 연도의 주차<br />\r\n-- W : 월의 주차<br />\r\n-- Q : 분기\r\n<blockquote>\r\n<p>SELECT TO_CHAR(SYSDATE, &#39;IW W Q&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 30일 전\r\n<blockquote>\r\n<p>SELECT SYSDATE - 30<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- TO_DATE(값) : 값이 날짜의 형태를 취했을 때 날짜형태로 변환\r\n<blockquote>\r\n<p>SELECT TO_DATE(&#39;2020-05-05&#39;) - 30<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- TO_CHAR에서 값으로 숫자가 올 경우<br />\r\n-- 9 : 숫자 -&gt; 숫자를 쓸 경우 해당 크기만큼 선언해야 한다.<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 그렇지 않은 경우 #나옴<br />\r\n-- , : 컴마<br />\r\n-- . : 소숫점 -&gt; 아래 단위는 표현범위 이후 반올림\r\n<blockquote>\r\n<p>SELECT TO_CHAR(1234567.896, &#39;999,999,999,999.99&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- TO_CHAR에서 값으로 숫자가 올 경우<br />\r\n-- 9 : 숫자 -&gt; 숫자를 쓸 경우 해당 크기만큼 선언해야 한다.<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 그렇지 않은 경우 #나옴<br />\r\n-- , : 컴마<br />\r\n-- . : 소숫점 -&gt; 아래 단위는 표현범위 이후 반올림<br />\r\n-- L : 설치된 환경의 언어에 맞는 통화기호\r\n<blockquote>\r\n<p>SELECT TO_CHAR(1234567.896, &#39;L999,999,999,999.99&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- FIRST_NAME과 LAST_NAME을 활용하여 EMAIL을 생성하시오.<br />\r\n-- 규칙1. FIRST_NAME에서 대문자로 된 값 추출<br />\r\n-- 규칙2. LAST_NAME은 공백 제외 후 대문자처리<br />\r\n-- 규칙3. 추출한 두 영역을 더하되, 8자 제한<br />\r\n-- 문제인물 FIRST_NAME - TJ, Jose Manuel / LAST_NAME - DA HAAN<br />\r\n-- 정답만 추출\r\n<blockquote>\r\n<p>SELECT UPPER(SUBSTR(CONCAT(REPLACE((REGEXP_REPLACE(FIRST_NAME, &#39;[a-z]&#39;,&#39;&#39;)), &#39; &#39;,&#39;&#39;), REPLACE(LAST_NAME,&#39; &#39;,&#39;&#39;)),1,8)) AS ANSWER<br />\r\nFROM EMPLOYEES<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- 1. FIRST_NAME에서 소문자 제거, 공백 제거<br />\r\n-- REPLACE((REGEXP_REPLACE(FIRST_NAME, &#39;[a-z]&#39;,&#39;&#39;)), &#39; &#39;,&#39;&#39;<br />\r\n<br />\r\n-- 2. LAST_NAME에서 공백 제거<br />\r\n-- REPLACE(LAST_NAME,&#39; &#39;,&#39;&#39;))<br />\r\n<br />\r\n-- 3. 위의 두개 합침<br />\r\n-- CONCAT(REGEXP_REPLACE(~~~~~), REPLACE(~~~~)<br />\r\n<br />\r\n-- 4. 합친 내용을 8자까지만 나오도록 함<br />\r\n-- SUBSTR(CONCAT(~~~~~~), 1, 8)<br />\r\n<br />\r\n-- 5. 4의 결과값들을 대문자로 변경<br />\r\n-- UPPER(SUBSTR)', '2020-03-31 17:23:41', '2020-09-20 11:38:01', 3, NULL),
	(126, 1, 1, '학원 20200401 정리(SELECT 집계 함수)', '-- NVL(값, 값1) : 값이 NULL이면 값1로 대체한다.<br />\r\n-- 급여와 성과급을 합쳐 실 급여를 구하시오.\r\n<blockquote>\r\n<p>SELECT SAL, COMM, SAL + NVL(COMM, 0)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- CASE : 자바의 IF와 동일<br />\r\n-- 급여가 1500이하인 사원의 급여를 20% 인상하고,<br />\r\n-- 1500을 초과하는 사원의 급여를 20% 감봉하여 출력하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN SAL &lt;= 1500<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 1.2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL * 0.8<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- DECODE : 자바에서 SWITCH와 같음<br />\r\n-- DECODE(값, 값1, 값1-1, 값2, 값2-2 ,..., 값n)<br />\r\n-- 값이 값1과 같으면 값1-1을 돌려주고, ...,<br />\r\n-- 같은 것이 아무 것도 없으면 값n을 돌려준다.<br />\r\n-- 점원의 급여를 20%인상하고, 영업사원의 급여를 10%인상하며<br />\r\n-- 나머지 직원의 급여를 10% 감봉하여 출력하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DECODE(JOB, &#39;CLERK&#39;, SAL * 1.2, &#39;SALEMAN&#39;, SAL * 1.1, SAL * 0.9) AS RSAL<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 1분기 입사자의 급여를 15% 인상하고, 2분기 입사자의 급여를 30% 감봉하며,<br />\r\n-- 3, 4분기 입사자의 급여를 5% 인상하여 사원정보를 출력하시오.<br />\r\n-- 출력내용 : 사원번호, 이름, 입사일, 기존급여, 변경급여\r\n<blockquote>\r\n<p>SELECT&nbsp; EMPNO AS 사원번호, ENAME AS 이름, HIREDATE AS 입사일, SAL AS 기존급여,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DECODE(TO_CHAR(HIREDATE,&#39;Q&#39;), 1, SAL * 1.15, 2, SAL * 0.7, SAL * 1.05) AS 변경급여<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 집계함수 : 데이터를 합쳐서 결과물을 도출하는 것<br />\r\n-- COUNT(값) : 값이 NULL이 아닌 ROW의 수를 센다.\r\n<blockquote>\r\n<p>SELECT COUNT(*)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 집계함수 : 데이터를 합쳐서 결과물을 도출하는 것<br />\r\n-- COUNT(값) : 값이 NULL이 아닌 ROW의 수를 센다.\r\n<blockquote>\r\n<p>SELECT COUNT(COMM)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- SUM(값) : 값의 총 합계를 구함<br />\r\n-- NULL인 경우는 무시하고 넘어감(NULL 처리 X)\r\n<blockquote>\r\n<p>SELECT SUM(COMM)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- AVG(값) : 값들의 평균을 구함\r\n<blockquote>\r\n<p>SELECT AVG(SAL)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- MAX(값) : 최대값을 구함\r\n<blockquote>\r\n<p>SELECT MAX(SAL)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- MIN(값) : 최소값을 구함\r\n<blockquote>\r\n<p>SELECT MIN(SAL)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 최대 급여와 최소 급여의 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT MAX(SAL) AS 최대급여, MIN(SAL) AS 최소급여, MAX(SAL) - MIN(SAL) AS 차이<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- GROUP BY 값, ... : 값을 기준으로 데이터를 합친다.<br />\r\n-- ~별 집계함수 : =&gt; GROUP BY<br />\r\n-- 집계함수 사용 시 SELECT부분에 올 수 있는 값은 GROUP BY에 선언된 것과 집계함수만 올 수 있다.<br />\r\n-- 업무별 급여평균을 구하시오.\r\n<blockquote>\r\n<p>SELECT JOB, AVG(SAL)<br />\r\nFROM EMP<br />\r\nGROUP BY JOB<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 입사 월별 급여 총합을 구하시오\r\n<blockquote>\r\n<p>SELECT TO_CHAR(HIREDATE, &#39;MM&#39;), SUM(SAL)<br />\r\nFROM EMP<br />\r\nGROUP BY TO_CHAR(HIREDATE, &#39;MM&#39;)<br />\r\nORDER BY TO_CHAR(HIREDATE, &#39;MM&#39;) ASC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- HAVING 조건 : 집계함수용 조건. GROUP BY 다음 위치<br />\r\n-- 동작 순서 : FROM -&gt; WHERE -&gt; GROUP BY -&gt; 데이터 압축 -&gt; HAVING -&gt; SELECT<br />\r\n-- 입사 월별 급여 총 합이 3000이하인 월을 구하시오.\r\n<blockquote>\r\n<p>SELECT TO_CHAR(HIREDATE, &#39;MM&#39;) AS 월별, SUM(SAL) AS SUM_SAL<br />\r\nFROM EMP<br />\r\nGROUP BY TO_CHAR(HIREDATE, &#39;MM&#39;)<br />\r\nHAVING SUM(SAL) &lt;= 3000<br />\r\nORDER BY SUM_SAL ASC<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 입사 연도별 급여 총합중 가장 많이 받는 연도의 총합은 얼마인가?\r\n<blockquote>\r\n<p>SELECT MAX(SUM(SALARY)) AS 총합<br />\r\nFROM EMPLOYEES<br />\r\nGROUP BY TO_CHAR(HIRE_DATE, &#39;YYYY&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 홀수월에 입사한 사원들과 짝수월에 입사한 사원들별 급여 평균의 차이를 구하시오.<br />\r\n-- 1) 짝수월에 입사한 사원의 급여 평균<br />\r\n-- 2) 홀수월에 입사한 사원의 급여 평균<br />\r\n-- 3) 급여 평균의 차이이므로 1 - 2의 절대값<br />\r\n-- COUNT를 제외한 나머지 집계 함수는 NULL을 무시함\r\n<blockquote>\r\n<p>SELECT ABS(AVG(DECODE(MOD(TO_CHAR(HIRE_DATE, &#39;MM&#39;),2), 0, SALARY, NULL))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - AVG(DECODE(MOD(TO_CHAR(HIRE_DATE, &#39;MM&#39;),2), 1, SALARY, NULL))) AS CHA<br />\r\nFROM EMPLOYEES<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 홀수월에 입사한 사원들과 짝수월에 입사한 사원들별 급여 평균의 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT MAX(AVG(SALARY)) - MIN(AVG(SALARY))<br />\r\nFROM EMPLOYEES<br />\r\nGROUP BY MOD(TO_CHAR(HIRE_DATE, &#39;MM&#39;),2)<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-01 17:52:11', '2020-09-20 11:45:00', 1, NULL),
	(127, 1, 1, '학원 20200402 정리(SELECT 순차 함수, 서브쿼리)', '-- 순차함수 : 정렬 후 번호를 할당. SELECT에만 올 수 있음.<br />\r\n-- row_number : 정렬된 순서대로 번호 생성<br />\r\n-- rank : 같은 데이터는 같은 번호, 중복된만큼 건너뜀<br />\r\n-- dense_rank : 같은 데이터는 같은 번호, 건너뛰지 않고 이어서 번호 진행<br />\r\n-- 순차함수명() OVER(PARTITION BY 기준값,.... ORDER BY 값 정렬순서,...)<br />\r\n-- *partiton by : ~별 순차함수 (특정 조건별로 순서를 정해줌)\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ROW_NUMBER() OVER(ORDER BY SAL DESC) AS RNUM,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY SAL DESC) AS RNK,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DENSE_RANK() OVER(ORDER BY SAL DESC) AS DRNK<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 업무별 연봉 순위 출력\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY JOB ORDER BY SAL DESC) AS RNK<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- SubQuery : 쿼리 안의 쿼리. 재가공<br />\r\n-- ( 쿼리 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; view<br />\r\n-- SELECT에서 사용 : 단일컬럼, 단일로우. 효율 2등(where 이후 남아 있는 개수만큼)<br />\r\n-- FROM에서 사용 : 마음대로 써도 됨. 효율 1등(1번 실행)<br />\r\n-- WHERE에서 사용 : 단일컬럼, 단일로우. 단, in을 사용할 경우 단일컬럼, 복수로우<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 효율 3등(FROM에서 가져온 개수만큼).<br />\r\n<br />\r\n<br />\r\n-- SELECT에서 사용<br />\r\n-- 서브쿼리를 이용하여 급여의 평균을 구함\r\n<blockquote>\r\n<p>SELECT ENAME, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT AVG(SAL)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP) AS ASAL<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- FROM에서 사용<br />\r\n-- 전체 급여 순위 중 마지막 1위의 사원정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL<br />\r\nFROM (SELECT ENAME, JOB, SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- WHERE에서 사용<br />\r\n-- 전체 급여 순위 중 마지막 1위의 사원정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL<br />\r\nFROM EMP<br />\r\nWHERE SAL = (SELECT MAX(SAL)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 점원인 사원들을 구하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL<br />\r\nFROM EMP<br />\r\nWHERE EMPNO IN (SELECT EMPNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE JOB = &#39;CLERK&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 1500이하인 사원들의 급여를 20%인상하여<br />\r\n-- 인상급여기준 부서별 급여 1위의 이름, 부서, 인상급여를 구하시오\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, UPSAL<br />\r\nFROM (SELECT ENAME, JOB, UPSAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY JOB ORDER BY UPSAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT ENAME, JOB,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN SAL &lt;= 1500<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 1.2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS UPSAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP))<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 사원 수가 가장 많은 부서번호(DEPTNO)를 구하시오.\r\n<blockquote>\r\n<p>SELECT DEPTNO<br />\r\nFROM (SELECT DEPTNO, COUNT_DEPTNO,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT_DEPTNO DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT DEPTNO, COUNT(JOB) AS COUNT_DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPTNO))<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 부서별 급여 2등들의 급여 평균을 구하시오.\r\n<blockquote>\r\n<p>SELECT AVG(SAL)<br />\r\nFROM (SELECT ENAME,SAL, JOB,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)<br />\r\nWHERE RNK = 2<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 가장 많은 사원이 입사한 월에 입사한 사원들의 급여 총합을 구하시오.\r\n<blockquote>\r\n<p>SELECT SUM_SAL<br />\r\nFROM( SELECT TO_CHAR(HIREDATE, &#39;MM&#39;) MOMTH,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COUNT(*) AS CNT, SUM(SAL) AS SUM_SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY TO_CHAR(HIREDATE, &#39;MM&#39;))<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-02 20:27:43', '2020-09-20 11:56:19', 2, NULL),
	(128, 1, 1, '학원 20200403 정리(SELECT 조인, 쿼리 연습)', '-- 직접 참조<br />\r\n-- INNER JOIN\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- LEFT OUTER JOIN<br />\r\n-- 필수적인 데이터와 부가적인 데이터를 합쳐야 하는 경우\r\n<blockquote>\r\n<p>SELECT E.ENAME, D.DNAME<br />\r\nFROM EMP E LEFT OUTER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND D.DEPTNO != 30<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- NATURAL JOIN<br />\r\n-- 성능적인 문제로 ANSI 기반 조인 이용\r\n<blockquote>\r\n<p>SELECT E.ENAME, D.DNAME<br />\r\nFROM EMP E, DEPT D<br />\r\nWHERE E.DEPTNO = D.DEPTNO<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 간접 참조\r\n<blockquote>\r\n<p>SELECT *<br />\r\nFROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 자가 참조\r\n<blockquote>\r\n<p>SELECT E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME<br />\r\nFROM EMP E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME<br />\r\nFROM EMP E1 LEFT OUTER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여등급이 2등급인 사원의 사원수를 구하시오.<br />\r\n-- 주테이블의 데이터 처리 - WHERE / 보조테이블의 데이터 처리 - ON에서 처리\r\n<blockquote>\r\n<p>SELECT COUNT(GRADE) AS COUNT_EMPLOY<br />\r\nFROM EMP E INNER JOIN SALGRADE SG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND SG.GRADE = 2<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 상관의 급여등급이 짝수인 부하직원들 중 급여가 3번째로 많은 사원을 찾으시오<br />\r\n-- 출력값 : 부하직원 이름, 부하직원 급여\r\n<blockquote>\r\n<p>SELECT ENAME,SAL<br />\r\nFROM (SELECT E.ENAME, E.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(E.MGR, 2) = 0)<br />\r\nWHERE RNK = 3<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.SAL<br />\r\nFROM (SELECT E1.ENAME, E1.SAL, RANK() OVER(ORDER BY E1.SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E2.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(SG.GRADE, 2) = 0) E<br />\r\nWHERE E.RNK = 3<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 짝수 급여등급이 가장 많은 부서를 구하시오.<br />\r\n-- 출력 : 부서번호, 부서명, 짝수급여등급 사원 수\r\n<blockquote>\r\n<p>SELECT DEPTNO, DNAME, CNT<br />\r\nFROM(SELECT D.DEPTNO, D.DNAME, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\nFROM DEPT D INNER JOIN EMP E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.DEPTNO = E.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(SG.GRADE, 2) = 0<br />\r\nGROUP BY D.DEPTNO, D.DNAME)<br />\r\nWHERE RNK =1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- 급여등급이 홀수인 직원들중 급여가 1500이하인 직원들의 급여를 20%인상한 다음 급여 평균을 구하시오.<br />\r\n-- 출력 : 평균 급여\r\n<blockquote>\r\n<p>SELECT AVG(UPSAL)<br />\r\nFROM (SELECT E.ENAME, E.SAL, SG.GRADE,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN MOD(SG.GRADE, 2) = 1 AND SAL &lt;= 1500<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 1.2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END UPSAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL)<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT AVG(CASE WHEN MOD(SG.GRADE, 2) = 1 AND E.SAL &lt;= 1500<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 1.2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END) AS AVG_SAL<br />\r\nFROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 상관의 급여등급이 짝수인 부하직원들 중 급여가 3번째로 많은 사원을 찾으시오<br />\r\n-- 출력값 : 부하직원 이름, 부하직원 급여\r\n<blockquote>\r\n<p>SELECT ENAME,SAL<br />\r\nFROM (SELECT E.ENAME, E.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(E.MGR, 2) = 0)<br />\r\nWHERE RNK = 3<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.SAL<br />\r\nFROM (SELECT E1.ENAME, E1.SAL, RANK() OVER(ORDER BY E1.SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E2.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(SG.GRADE, 2) = 0) E<br />\r\nWHERE E.RNK = 3<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 직업별 급여를 가장많이 받는 사람의 상사를 구하시오<br />\r\n-- 이름, 직업, 급여, 상사\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL, S_NAME<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM(SELECT ENAME, JOB, SAL, S_NAME,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY JOB ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT E1.EMPNO, E1.ENAME, E1.JOB, E1.SAL, E2.EMPNO AS S_EMPNO, E2.ENAME AS S_NAME<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO))<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, SAL, E.MGR_NAME<br />\r\nFROM(SELECT E1.ENAME, E1.JOB, E1.SAL, E2.ENAME AS MGR_NAME,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY E1.JOB ORDER BY E1.SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO) E<br />\r\nWHERE E.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- DALLAS에서 근무하는 사람들 중 샐러리가 가장 높은사람과 그 사람의 매니저(MGR)가 누구인지 구하시오<br />\r\n-- 출력: MGR,MGR_NAME,ENAME,SAL\r\n<blockquote>\r\n<p>SELECT MGR, S_NAME, ENAME, SAL<br />\r\nFROM (SELECT E1.EMPNO, E1.MGR, E1.ENAME, E1.JOB, E1.SAL, E2.EMPNO AS S_EMPNO, E2.ENAME AS S_NAME, D.LOC,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY E1.SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 LEFT OUTER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND LOC = &#39;DALLAS&#39;)<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT E1.MGR, E2.ENAME, E1.ENAME, E1.SAL<br />\r\nFROM (SELECT E.ENAME, E.SAL, E.MGR,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND D.LOC = &#39;DALLAS&#39;) E1 INNER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n&nbsp;', '2020-04-03 18:14:01', '2020-09-20 12:04:59', 2, NULL),
	(129, 1, 1, '학원 20200406~20200408 쿼리 연습', '-- 도시별 급여평균 순위를 구하시오.\r\n<blockquote>\r\n<p>SELECT CITY, AVG_CITY,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY AVG_CITY DESC) AS RNK<br />\r\nFROM (SELECT L.CITY, ROUND(AVG(E.SALARY), 2) AS AVG_CITY<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM LOCATIONS L INNER JOIN DEPARTMENTS D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON L.LOCATION_ID = D.LOCATION_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN EMPLOYEES E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.DEPARTMENT_ID = E.DEPARTMENT_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY L.CITY)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여등급이 2등급인 사원이 가장 많은 부서의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT DNAME<br />\r\nFROM (SELECT D.DEPTNO, D.DNAME, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND SG.GRADE = 2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY D.DNAME, D.DEPTNO)<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여등급이 2등급인 사원이 가장 많은 부서/의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT D.DEPTNO, D.DNAME, D.LOC<br />\r\nFROM DEPT D INNER JOIN (SELECT E.DEPTNO, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND SG.GRADE = 2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPTNO) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.DEPTNO = A.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여 등급이 2, 4등급인 사원들이 가장 많이 포함된 부서의 업무별 급여총 순위를 출력하시오.\r\n<blockquote>\r\n<p>SELECT DNAME, JOB, SUM(SAL),<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY DNAME ORDER BY SUM(SAL) DESC) AS RNK<br />\r\nFROM (SELECT DNAME, DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT D.DNAME, D.DEPTNO,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND MOD(SG.GRADE, 2) = 0<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY D.DNAME, D.DEPTNO)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE RNK = 1) DP INNER JOIN EMP E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON DP.DEPTNO = E.DEPTNO<br />\r\n<br />\r\nGROUP BY DNAME, JOB<br />\r\nORDER BY DNAME<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.SAL, E.JOB, D.DNAME,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY D.DEPTNO, E.JOB ORDER BY E.SAL DESC) AS RNK<br />\r\nFROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN (SELECT E.DEPTNO, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN SALGRADE SG<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND SG.GRADE IN (2, 4)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY E.DEPTNO) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.DEPTNO = A.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n&#39;-- KING을 제외한 사원들의 급여 최대치와 최소치를 구하고 / 그 차이를 구하여 / 전체 급여 평균과의 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT ABS(AVG(E.SAL) - ASAL.ASAL)<br />\r\nFROM EMP E INNER JOIN (SELECT (MAX(SAL) - MIN(SAL)) AS ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE MGR IS NOT NULL) ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1<br />\r\nGROUP BY ASAL.ASAL<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT A.CHA - E.AVG_SAL<br />\r\nFROM (SELECT MAX(SAL) - MIN(SAL) AS CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE ENAME != &#39;KING&#39;) A INNER JOIN (SELECT AVG(SAL) AS AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP) E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT MAX(CASE WHEN ENAME = &#39;KING&#39;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN NULL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END) -<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MIN(CASE WHEN ENAME = &#39;KING&#39;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN NULL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END) - AVG(SAL)<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 업무가 CLERK인 사원들의 상급자의 급여 순위를 포함한 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, S_ENAME, S_SAL, RNK<br />\r\nFROM(SELECT E1.ENAME, E1.JOB, E2.ENAME AS S_ENAME, E2.SAL AS S_SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY E2.SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E1 LEFT OUTER JOIN EMP E2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E1.MGR = E2.EMPNO)<br />\r\nWHERE JOB = &#39;CLERK&#39;<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 이름에 &#39;L&#39;이 들어가는 사원이 가장 많은 업무/를 구하고 그 업무가 가장 많은 부서의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT D.DEPTNO, D.DNAME, D.LOC<br />\r\nFROM DEPT D INNER JOIN (SELECT E.DEPTNO, COUNT(*),<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC ) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN (SELECT JOB, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE ENAME LIKE &#39;%L%&#39;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY JOB) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.JOB = A.JOB<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY E.DEPTNO) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON&nbsp; D.DEPTNO = A.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 12월에 입사한 사원 중 급여 순위 2등의 급여보다 / 큰 사원들중 가장 많은 사원이 있는 업무를 구하시오.\r\n<blockquote>\r\n<p>SELECT JOB<br />\r\nFROM (SELECT JOB, COUNT(JOB),<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(JOB) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE SAL &gt;= (SELECT SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT SAL, RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE TO_CHAR(HIREDATE, &#39;MM&#39;) = 12)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE RNK = 2)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY JOB)<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 12월에 입사한 사원 중&nbsp; 급여 순위 2등/의 급여보다 큰 사원들중 / 가장 많은 사원이 있는 업무를 구하시오.\r\n<blockquote>\r\n<p>SELECT JOB<br />\r\nFROM (SELECT E.JOB, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN (SELECT SAL, RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE TO_CHAR(HIREDATE, &#39;MM&#39;) = 12) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON&nbsp; E.SAL &gt; A.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY E.JOB)<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 가장 많이 입사한 연도에 입사한 사원들의 평균 급여를 구하고 평균급여보다 많이 받는 사람의 급여를 50%삭감하여 전체 사원의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.JOB,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN E.SAL &gt; A.AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 0.5<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL<br />\r\nFROM EMP E INNER JOIN (SELECT TO_CHAR(HIREDATE, &#39;YYYY&#39;), COUNT(*) AS CNT, AVG(SAL) AS AVG_SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY TO_CHAR(HIREDATE, &#39;YYYY&#39;)) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON A.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT ENAME, JOB, RSAL<br />\r\nFROM (SELECT E.*, CASE WHEN E.SAL &gt;= ASAL.ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 0.5<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN (SELECT ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM(SELECT TO_CHAR(HIREDATE, &#39;YY&#39;) AS R_YEAR, AVG(SAL) AS ASAL, COUNT(TO_CHAR(HIREDATE, &#39;YY&#39;)),<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(TO_CHAR(HIREDATE, &#39;YY&#39;)) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY TO_CHAR(HIREDATE, &#39;YY&#39;))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE RNK = 1) ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 부서별 급여 평균을 구하고 각각 부서의 사원들의 급여가 각각 부서별 급여평균보다 높으면 급여를 20%삭감하여 사원명, 사원급여,부서명,부서평균급여를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.ENAME, CASE WHEN E.SAL &gt;= ASAL.ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 0.8<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL, DNAME, ASAL.ASAL<br />\r\nFROM EMP E INNER JOIN (SELECT DEPTNO, AVG(SAL) AS ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPTNO) ASAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = ASAL.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p><br />\r\nSELECT E.ENAME, E.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN E.SAL &gt; A.AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 0.8<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL, D.DNAME, A.AVG_SAL<br />\r\nFROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN (SELECT DEPTNO, AVG(SAL) AS AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPTNO) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.DEPTNO = A.DEPTNO<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- NEW YORK에 업무하는 사원들의 전체 급여 평균과 그 사원들을 제외한 사원들의 급여 평균을 구하여 두 차이를 구하고<br />\r\n-- 구한 차이 이상의 급여를 받는 사원들의 급여를 구한차이만큼 감봉하여 전체 사원의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.COMM, E.DEPTNO,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN SAL &gt;= C.CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL - C.CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL<br />\r\nFROM EMP E INNER JOIN (SELECT NY.NY_SAL - NNY.NOT_NY_SAL AS CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT AVG(SAL) AS NY_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND D.LOC = &#39;NEW YORK&#39;) NY INNER JOIN (SELECT AVG(SAL) AS NOT_NY_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND D.LOC != &#39;NEW YORK&#39;) NNY<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1) C<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- NEW YORK에 업무하는 사원들의 전체 급여 평균과 그 사원들을 제외한 사원들의 급여 평균을 구하여 두 차이를 구하고 구한 차이 이상의 급여를 받는 사원들의 급여를 구한차이만큼 감봉하여 전체 사원의 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.JOB, E.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN E.SAL &gt;= CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL - A.CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL<br />\r\nFROM EMP E INNER JOIN (SELECT AVG(DECODE(D.LOC, &#39;NEW YORK&#39;, E.SAL, NULL)) &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - AVG(DECODE(D.LOC, &#39;NEW YORK&#39;, NULL, E.SAL)) AS CHA<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP E INNER JOIN DEPT D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPTNO = D.DEPTNO) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여 순위 중 홀수번째에 해당하는 사원들의 급여를 10%감봉하여 전체 사원의 평균을 구하고 구한 평균 이상인 사람들의 급여를 20%감봉하여 전체 급여순위와 사원정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.COMM, E.DEPTNO, R.RSAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY R.RSAL DESC) AS RNK<br />\r\nFROM EMP E INNER JOIN (SELECT CASE WHEN MOD(RNK, 2) = 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 0.9<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL, ENAME<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM(SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER (ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)) R<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.ENAME = R.ENAME<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 급여 순위 중 홀수번째에 해당하는 사원들의 급여를 10%감봉하여 전체 사원의 평균을 구하고 구한 평균 이상인 사람들의 급여를 20%감봉하여 전체 급여순위와 사원정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E.ENAME, E.JOB, E.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE WHEN E.SAL &gt;= A.AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 0.8<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END AS RSAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY CASE WHEN E.SAL &gt;= A.AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN E.SAL * 0.8<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE E.SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END DESC) AS RNK<br />\r\nFROM EMP E INNER JOIN(SELECT AVG(CASE WHEN MOD((RNK),2) = 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; THEN SAL * 0.9<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END) AS AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT SAL, RANK() OVER(ORDER BY SAL DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 업무나 부서 변동이 있었던 사원들의 급여평균을 구하시오.\r\n<blockquote>\r\n<p>SELECT AVG(E.SALARY) AS AVG_SAL<br />\r\nFROM EMPLOYEES E INNER JOIN JOB_HISTORY J<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.EMPLOYEE_ID = J.EMPLOYEE_ID<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 업무가 CLERK인 사원들의 상급자의 급여 순위를 포함한 정보를 출력하시오.\r\n<blockquote>\r\n<p>SELECT E1.ENAME, E1.JOB, E1.SAL,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY E1.SAL DESC) AS RNK<br />\r\nFROM EMP E1<br />\r\nWHERE E1.EMPNO IN (SELECT MGR<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE JOB = &#39;CLERK&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-08 22:30:07', '2020-09-20 12:11:40', 2, NULL),
	(130, 1, 1, '학원 20200409 정리(UNION, DISTINCT, ROW_NUMBER, RANK)', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600573513_jlwbcanx.png" style="width:100%" /><br />\r\n--UNION, UNION ALL\r\n<blockquote>\r\n<p>SELECT ENAME, JOB<br />\r\nFROM EMP<br />\r\nUNION<br />\r\nSELECT ENAME, JOB<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT ENAME, JOB<br />\r\nFROM EMP<br />\r\nUNION ALL<br />\r\nSELECT ENAME, JOB<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 중복 제거(DISTINCT) - 해당 값을 제거하는 것이 아니라 로우를 제거하기 때문에 효율이 떨어짐\r\n<blockquote>\r\n<p>SELECT DISTINCT JOB<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- 굳이 안써도 동일한 결과 나오도록 할 수 있음. 하지만 GROUP BY 자체는 집계함수를 쓰기 위해 만들어진 것이므로 이걸 통해서 중복제거하는 것은 좋지 않음.\r\n<blockquote>\r\n<p>SELECT JOB<br />\r\nFROM EMP<br />\r\nGROUP BY JOB<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- ROW_NUMBER\r\n<blockquote>\r\n<p>SELECT ENAME, HIREDATE,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ROW_NUMBER() OVER(ORDER BY HIREDATE DESC) AS RNUM<br />\r\nFROM EMP<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT ENAME, HIREDATE<br />\r\nFROM (SELECT ENAME, HIREDATE,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ROW_NUMBER() OVER(ORDER BY HIREDATE DESC) AS RNUM<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP)<br />\r\nWHERE RNUM BETWEEN 1 AND 10<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- ROWNUM : 가져온 데이터의 취득 순서(오라클 전용 함수)\r\n<blockquote>\r\n<p>SELECT ENAME, HIREDATE, ROWNUM<br />\r\nFROM EMP<br />\r\nORDER BY HIREDATE DESC<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT ENAME, HIREDATE, ROWNUM<br />\r\nFROM(SELECT ENAME, HIREDATE<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; FROM EMP<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; ORDER BY HIREDATE DESC)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 부하직원이 가장 많은 상급자를 구하시오.\r\n<blockquote>\r\n<p>SELECT E.FIRST_NAME<br />\r\nFROM EMPLOYEES E INNER JOIN(SELECT MANAGER_ID, COUNT(*) AS CNT,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY MANAGER_ID) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.EMPLOYEE_ID = A.MANAGER_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A.RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n<br />\r\n-- 업무나 부서 변동이 있었던 사원들의 급여평균을 구하시오.\r\n<blockquote>\r\n<p>SELECT AVG(SALARY) AS AVG_SALARY<br />\r\nFROM EMPLOYEES<br />\r\nWHERE EMPLOYEE_ID IN(SELECT EMPLOYEE_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM JOB_HISTORY)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 사원수 1, 2등인 부서들의 급여평균을 구하고 그 평균의 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT ROUND(MAX(AVG_SALARY) - MIN(AVG_SALARY), 2) AS CHA<br />\r\nFROM(SELECT DEPARTMENT_ID, COUNT(*) AS CNT, AVG(SALARY) AS AVG_SALARY,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPARTMENT_ID)<br />\r\nWHERE RNK IN(1, 2)<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>SELECT A1.AVG_SALARY - A2.AVG_SALARY<br />\r\nFROM (SELECT DEPARTMENT_ID, AVG(SALARY) AS AVG_SALARY,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPARTMENT_ID) A1 INNER JOIN (SELECT DEPARTMENT_ID, AVG(SALARY) AS AVG_SALARY,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY DEPARTMENT_ID) A2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON A1.RNK = 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND A2.RNK = 2<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-09 17:35:22', '2020-09-20 12:45:22', 2, NULL),
	(131, 1, 1, '학원 20200413 정리(INSERT, UPDATE, DELETE, DDL, SEQUENCE)', '-- DML - SELECT, INSERT, UPDATE, DELETE<br />\r\n-- DDL - CREATE(생성), ALTER(수정), DROP(삭제)<br />\r\n-- DCL - GRANT(할당), REVOKE(취소)<br />\r\n-- 문자열 - VARCHAR2(오라클) / VARCHAR(타DB) 4000byte - 한글 1000자<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BLOB : 대용량<br />\r\n-- 숫자 : NUMBER<br />\r\n-- 날짜 - DATE, DATETIME<br />\r\n-- TRANSACTION : 작업을 관리. 임시공간 사용<br />\r\n-- COMMIT : 진행중인 작업을 적용한다.<br />\r\n-- ROLLBACK : 마지막 COMMIT 시점으로 돌아간다.<br />\r\n<br />\r\n--INSERT : 데이터 삽입\r\n<blockquote>\r\n<p>INSERT INTO 테이블명(컬럼명, ....)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *순서와 타입이 동일해야함.<br />\r\nVALUES (값, ...)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- UPDATE : 수정\r\n<blockquote>\r\n<p>UPDATE 테이블명 SET 컬럼 = 값, ....<br />\r\nWHERE 조건</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- DELETE : 삭제(ROW)\r\n<blockquote>\r\n<p>DELETE FROM 테이블명<br />\r\nWHERE 조건<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 계정 생성\r\n<blockquote>\r\n<p>CREATE USER &quot;Test&quot; IDENTIFIED BY &quot;1234&quot; &nbsp;<br />\r\nDEFAULT TABLESPACE &quot;USERS&quot;<br />\r\nTEMPORARY TABLESPACE &quot;TEMP&quot;<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 권한 부여(모든 권한)\r\n<blockquote>\r\n<p>GRANT &quot;DATAPUMP_EXP_FULL_DATABASE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;DBA&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;HS_ADMIN_EXECUTE_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;ADM_PARALLEL_EXECUTE_TASK&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;CTXAPP&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;SELECT_CATALOG_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;CONNECT&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;DATAPUMP_IMP_FULL_DATABASE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;OEM_MONITOR&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;APEX_ADMINISTRATOR_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;AQ_USER_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;SCHEDULER_ADMIN&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;XDB_SET_INVOKER&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;RECOVERY_CATALOG_OWNER&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;DBFS_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;XDB_WEBSERVICES_OVER_HTTP&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;HS_ADMIN_SELECT_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;PLUSTRACE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;RESOURCE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;AQ_ADMINISTRATOR_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;DELETE_CATALOG_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;XDB_WEBSERVICES_WITH_PUBLIC&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;XDB_WEBSERVICES&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;EXECUTE_CATALOG_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;EXP_FULL_DATABASE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;GATHER_SYSTEM_STATISTICS&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;LOGSTDBY_ADMINISTRATOR&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;AUTHENTICATEDUSER&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;OEM_ADVISOR&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;HS_ADMIN_ROLE&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;XDBADMIN&quot; TO &quot;Test&quot; ;<br />\r\nGRANT &quot;IMP_FULL_DATABASE&quot; TO &quot;Test&quot; ;<br />\r\n<br />\r\n-- SYSTEM PRIVILEGES<br />\r\nGRANT CREATE JOB TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT UPDATE ANY CUBE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY TRIGGER TO &quot;Test&quot; ;<br />\r\nGRANT MANAGE ANY FILE GROUP TO &quot;Test&quot; ;<br />\r\nGRANT ALTER PUBLIC DATABASE LINK TO &quot;Test&quot; ;<br />\r\nGRANT MANAGE FILE GROUP TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY INDEX TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY SEQUENCE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT UNDER ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY LIBRARY TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY EDITION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ROLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE LIBRARY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ROLLBACK SEGMENT TO &quot;Test&quot; ;<br />\r\nGRANT CREATE TRIGGER TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT ADMINISTER DATABASE TRIGGER TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY MEASURE FOLDER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY OUTLINE TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY INDEXTYPE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY DIRECTORY TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY RULE SET TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT DEBUG CONNECT SESSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT ALTER SESSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE MATERIALIZED VIEW TO &quot;Test&quot; ;<br />\r\nGRANT MERGE ANY VIEW TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY INDEX TO &quot;Test&quot; ;<br />\r\nGRANT CREATE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY RULE SET TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY MATERIALIZED VIEW TO &quot;Test&quot; ;<br />\r\nGRANT AUDIT SYSTEM TO &quot;Test&quot; ;<br />\r\nGRANT CREATE OPERATOR TO &quot;Test&quot; ;<br />\r\nGRANT MANAGE ANY QUEUE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY SQL PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT GRANT ANY OBJECT PRIVILEGE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE INDEXTYPE TO &quot;Test&quot; ;<br />\r\nGRANT AUDIT ANY TO &quot;Test&quot; ;<br />\r\nGRANT DEBUG ANY PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY MEASURE FOLDER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY SEQUENCE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE MEASURE FOLDER TO &quot;Test&quot; ;<br />\r\nGRANT UPDATE ANY CUBE BUILD PROCESS TO &quot;Test&quot; ;<br />\r\nGRANT CREATE VIEW TO &quot;Test&quot; ;<br />\r\nGRANT ALTER DATABASE LINK TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY EVALUATION CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT DELETE ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE SESSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE RULE TO &quot;Test&quot; ;<br />\r\nGRANT BECOME USER TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT INSERT ANY MEASURE FOLDER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY SQL PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT FORCE ANY TRANSACTION TO &quot;Test&quot; ;<br />\r\nGRANT DELETE ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY SEQUENCE TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY EDITION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE EXTERNAL JOB TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY MATERIALIZED VIEW TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY CUBE BUILD PROCESS TO &quot;Test&quot; ;<br />\r\nGRANT FLASHBACK ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY RULE SET TO &quot;Test&quot; ;<br />\r\nGRANT BACKUP ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY CUBE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE TABLE TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY LIBRARY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY OUTLINE TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY CLUSTER TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY CLASS TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY RULE SET TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY SEQUENCE TO &quot;Test&quot; ;<br />\r\nGRANT UNDER ANY TYPE TO &quot;Test&quot; ;<br />\r\nGRANT MANAGE TABLESPACE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY OPERATOR TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY OPERATOR TO &quot;Test&quot; ;<br />\r\nGRANT EXEMPT IDENTITY POLICY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE TYPE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE TABLESPACE TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY TRANSACTION TO &quot;Test&quot; ;<br />\r\nGRANT DELETE ANY MEASURE FOLDER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY CUBE TO &quot;Test&quot; ;<br />\r\nGRANT LOCK ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE EVALUATION CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY TYPE TO &quot;Test&quot; ;<br />\r\nGRANT ADVISOR TO &quot;Test&quot; ;<br />\r\nGRANT CREATE PUBLIC DATABASE LINK TO &quot;Test&quot; ;<br />\r\nGRANT ANALYZE ANY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY RULE TO &quot;Test&quot; ;<br />\r\nGRANT INSERT ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ROLLBACK SEGMENT TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY JOB TO &quot;Test&quot; ;<br />\r\nGRANT ALTER USER TO &quot;Test&quot; ;<br />\r\nGRANT QUERY REWRITE TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY DICTIONARY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE PUBLIC SYNONYM TO &quot;Test&quot; ;<br />\r\nGRANT GLOBAL QUERY REWRITE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY CLUSTER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY RULE TO &quot;Test&quot; ;<br />\r\nGRANT UPDATE ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT SYSDBA TO &quot;Test&quot; ;<br />\r\nGRANT ADMINISTER RESOURCE MANAGER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY SYNONYM TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY SYNONYM TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE SYNONYM TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY PROGRAM TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY TYPE TO &quot;Test&quot; ;<br />\r\nGRANT ON COMMIT REFRESH TO &quot;Test&quot; ;<br />\r\nGRANT CREATE SEQUENCE TO &quot;Test&quot; ;<br />\r\nGRANT COMMENT ANY MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT ADMINISTER SQL TUNING SET TO &quot;Test&quot; ;<br />\r\nGRANT SYSOPER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY INDEXTYPE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY INDEX TO &quot;Test&quot; ;<br />\r\nGRANT RESTRICTED SESSION TO &quot;Test&quot; ;<br />\r\nGRANT DEQUEUE ANY QUEUE TO &quot;Test&quot; ;<br />\r\nGRANT ANALYZE ANY DICTIONARY TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY INDEXTYPE TO &quot;Test&quot; ;<br />\r\nGRANT ADMINISTER ANY SQL TUNING SET TO &quot;Test&quot; ;<br />\r\nGRANT CREATE USER TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY OPERATOR TO &quot;Test&quot; ;<br />\r\nGRANT CREATE CUBE BUILD PROCESS TO &quot;Test&quot; ;<br />\r\nGRANT CREATE PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY ROLE TO &quot;Test&quot; ;<br />\r\nGRANT UPDATE ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY LIBRARY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY VIEW TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY CLUSTER TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY RULE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER TABLESPACE TO &quot;Test&quot; ;<br />\r\nGRANT UNDER ANY VIEW TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT GRANT ANY PRIVILEGE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY TRIGGER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY VIEW TO &quot;Test&quot; ;<br />\r\nGRANT EXPORT FULL DATABASE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY EVALUATION CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT FLASHBACK ARCHIVE ADMINISTER TO &quot;Test&quot; ;<br />\r\nGRANT IMPORT FULL DATABASE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY OUTLINE TO &quot;Test&quot; ;<br />\r\nGRANT COMMENT ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE DATABASE LINK TO &quot;Test&quot; ;<br />\r\nGRANT DROP PUBLIC SYNONYM TO &quot;Test&quot; ;<br />\r\nGRANT DROP USER TO &quot;Test&quot; ;<br />\r\nGRANT CHANGE NOTIFICATION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE MINING MODEL TO &quot;Test&quot; ;<br />\r\nGRANT INSERT ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT DROP PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY MATERIALIZED VIEW TO &quot;Test&quot; ;<br />\r\nGRANT CREATE RULE SET TO &quot;Test&quot; ;<br />\r\nGRANT EXEMPT ACCESS POLICY TO &quot;Test&quot; ;<br />\r\nGRANT MANAGE SCHEDULER TO &quot;Test&quot; ;<br />\r\nGRANT READ ANY FILE GROUP TO &quot;Test&quot; ;<br />\r\nGRANT FORCE TRANSACTION TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY CUBE BUILD PROCESS TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY TYPE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT DROP PUBLIC DATABASE LINK TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY INDEXTYPE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY SQL PROFILE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER SYSTEM TO &quot;Test&quot; ;<br />\r\nGRANT UNLIMITED TABLESPACE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY ROLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY CUBE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY TRIGGER TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY TABLE TO &quot;Test&quot; ;<br />\r\nGRANT ADMINISTER SQL MANAGEMENT OBJECT TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY DIRECTORY TO &quot;Test&quot; ;<br />\r\nGRANT ENQUEUE ANY QUEUE TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY EVALUATION CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY ASSEMBLY TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY TYPE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE CLUSTER TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT EXECUTE ANY EVALUATION CONTEXT TO &quot;Test&quot; ;<br />\r\nGRANT RESUMABLE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE ANY LIBRARY TO &quot;Test&quot; ;<br />\r\nGRANT DROP ANY EDITION TO &quot;Test&quot; ;<br />\r\nGRANT CREATE PROCEDURE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER DATABASE TO &quot;Test&quot; ;<br />\r\nGRANT SELECT ANY CUBE TO &quot;Test&quot; ;<br />\r\nGRANT GRANT ANY ROLE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY RULE TO &quot;Test&quot; ;<br />\r\nGRANT CREATE CUBE DIMENSION TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ANY OPERATOR TO &quot;Test&quot; ;<br />\r\nGRANT CREATE CUBE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER RESOURCE COST TO &quot;Test&quot; ;<br />\r\nGRANT DROP TABLESPACE TO &quot;Test&quot; ;<br />\r\nGRANT ALTER ROLLBACK SEGMENT TO &quot;Test&quot; ;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 사용자 삭제\r\n<blockquote>\r\n<p>drop user &quot;Test&quot;<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 회원 테이블 생성<br />\r\n-------------<br />\r\n--회원번호(PK) - NO&nbsp;&nbsp; &nbsp;: NUMBER<br />\r\n--아이디&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - ID&nbsp;&nbsp; &nbsp;: VARCHAR2<br />\r\n--비밀번호&nbsp;&nbsp;&nbsp;&nbsp; - PW&nbsp;&nbsp; &nbsp;: VARCHAR2<br />\r\n--이름&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - NM&nbsp;&nbsp; &nbsp;: VARCHAR2<br />\r\n--생년월일&nbsp;&nbsp;&nbsp;&nbsp; - BIRTH&nbsp;&nbsp; &nbsp;: DATE\r\n<blockquote>\r\n<p>CREATE TABLE MEN<br />\r\n(<br />\r\n&nbsp; NO NUMBER NOT NULL<br />\r\n, ID VARCHAR2(100) NOT NULL<br />\r\n, PW VARCHAR2(200) NOT NULL<br />\r\n, NM VARCHAR2(200) NOT NULL<br />\r\n, BIRTH DATE DEFAULT SYSDATE NOT NULL<br />\r\n, CONSTRAINT MEN_PK PRIMARY KEY<br />\r\n&nbsp; (<br />\r\n&nbsp;&nbsp;&nbsp; NO<br />\r\n&nbsp; )<br />\r\n&nbsp; ENABLE<br />\r\n);<br />\r\n<br />\r\nCOMMENT ON COLUMN MEN.NO IS &#39;회원번호&#39;;<br />\r\n<br />\r\nCOMMENT ON COLUMN MEN.ID IS &#39;아이디&#39;;<br />\r\n<br />\r\nCOMMENT ON COLUMN MEN.PW IS &#39;비밀번호&#39;;<br />\r\n<br />\r\nCOMMENT ON COLUMN MEN.NM IS &#39;이름&#39;;<br />\r\n<br />\r\nCOMMENT ON COLUMN MEN.BIRTH IS &#39;생년월일&#39;;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 테이블 편집(EX - 컬럼명 변경)\r\n<blockquote>\r\n<p>ALTER TABLE MEN RENAME COLUMN ID TO IDE<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 추가\r\n<blockquote>\r\n<p>INSERT INTO MEM(NO, ID, PW, NM, BIRTH)<br />\r\nVALUES(1,&#39;ABC&#39;,&#39;1234&#39;,&#39;ABC&#39;,&#39;1111-11-11&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p>INSERT INTO MEM(NO, ID, PW, NM, BIRTH)<br />\r\nVALUES(2,&#39;DEF&#39;,&#39;1234&#39;,&#39;DEF&#39;,&#39;2000-01-01&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- 기본값이 들어가 있는 것은 생략 가능. NULL을 허용하는 것도 생략 가능\r\n<blockquote>\r\n<p>INSERT INTO MEM(NO, ID, PW, NM)<br />\r\nVALUES(3,&#39;GHI&#39;,&#39;1234&#39;,&#39;GHI&#39;)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n&nbsp;--변경\r\n<blockquote>\r\n<p>UPDATE MEM SET NM = &#39;가나다&#39;<br />\r\nWHERE NO = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n--삭제\r\n<blockquote>\r\n<p>DELETE FROM MEM<br />\r\nWHERE NO = 2<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 시퀀스 생성\r\n<blockquote>\r\n<p>CREATE SEQUENCE MEM_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 NOCACHE<br />\r\n;</p>\r\n</blockquote>\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600573420_lqqzhpbf.jpg" style="width:100%" /><br />\r\n<br />\r\n-- NEXTVAL : 다음값\r\n<blockquote>\r\n<p>SELECT MEM_SEQ.NEXTVAL<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n-- CURRVAL : 현재값\r\n<blockquote>\r\n<p>SELECT MEM_SEQ.CURRVAL<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 시퀀스 이용해서 테스트 계정 만들기\r\n<blockquote>\r\n<p>INSERT INTO MEM(NO, ID, PW, NM)<br />\r\nVALUES(MEM_SEQ.NEXTVAL, &#39;TEST&#39; || MEM_SEQ.NEXTVAL, &#39;1234&#39;, &#39;TESTER&#39; || MEM_SEQ.NEXTVAL)<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- LPAD(값1, 숫자, 값2) : 값1의 길이가 숫자만큼 될 때까지<br />\r\n--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 값2로 왼쪽을 채운다.\r\n<blockquote>\r\n<p>SELECT TO_CHAR(SYSDATE,&#39;YYYY&#39;) ||<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LPAD(MEM_SEQ.NEXTVAL, 8,&#39;0&#39;)<br />\r\nFROM DUAL<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-13 18:45:31', '2020-09-20 12:44:33', 3, NULL),
	(132, 1, 1, '학원 20200414 쿼리 연습', '-- 처음 입사한 사원중 급여 1위와<br />\r\n-- 마지막 입사한 사원중 급여 1위의 급여 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT ABS(LAST - FIRST) AS CHA<br />\r\nFROM (SELECT MAX(SALARY) AS LAST<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT FIRST_NAME, LAST_NAME, SALARY, RANK() OVER(ORDER BY HIRE_DATE DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE RNK = 1) L INNER JOIN (SELECT SALARY AS FIRST<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM (SELECT FIRST_NAME, LAST_NAME, SALARY, RANK() OVER(ORDER BY HIRE_DATE ASC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE RNK = 1) F<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON 1 = 1<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 부서장들의 평균 급여를 구하시오.\r\n<blockquote>\r\n<p>SELECT ROUND(AVG(SALARY),2) AS AVG_SAL<br />\r\nFROM DEPARTMENTS D INNER JOIN EMPLOYEES E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.MANAGER_ID = E.EMPLOYEE_ID<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 각 부서별 부서장의 급여와 부서별 평균급여의 차이를 구하시오.\r\n<blockquote>\r\n<p>SELECT M.DEPARTMENT_NAME, ABS(ROUND((AVG_SAL - SALARY), 2)) AS CHA<br />\r\nFROM (SELECT D.DEPARTMENT_NAME, E.SALARY<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM DEPARTMENTS D INNER JOIN EMPLOYEES E<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.MANAGER_ID = E.EMPLOYEE_ID) M<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN (SELECT D.DEPARTMENT_NAME, AVG(E.SALARY) AS AVG_SAL<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES E INNER JOIN DEPARTMENTS D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPARTMENT_ID = D.DEPARTMENT_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY D.DEPARTMENT_NAME) A<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON M.DEPARTMENT_NAME = A.DEPARTMENT_NAME<br />\r\n;</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n-- 대륙별 사원수가 가장 많은 업무를 구하시오.\r\n<blockquote>\r\n<p>SELECT REGION_NAME, J.JOB_TITLE<br />\r\nFROM (SELECT R.REGION_NAME, E.JOB_ID, COUNT(*),<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RANK() OVER(PARTITION BY R.REGION_NAME ORDER BY COUNT(*) DESC) AS RNK<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM EMPLOYEES E INNER JOIN DEPARTMENTS D<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON E.DEPARTMENT_ID = D.DEPARTMENT_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN LOCATIONS L<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON D.LOCATION_ID = L.LOCATION_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN COUNTRIES C<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON L.COUNTRY_ID = C.COUNTRY_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INNER JOIN REGIONS R<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON C.REGION_ID = R.REGION_ID<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GROUP BY E.JOB_ID, R.REGION_NAME) A INNER JOIN JOBS J<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ON A.JOB_ID = J.JOB_ID<br />\r\nWHERE RNK = 1<br />\r\n;</p>\r\n</blockquote>\r\n', '2020-04-14 15:27:12', '2020-09-20 12:48:20', 1, NULL),
	(133, 1, 1, '학원 20200416 정리(DB 설계)', '<strong>-DB 설계</strong><br />\r\n1) 요소(기능이 아닌 데이터적인 것 찾기<br />\r\n2) 중복 제거<br />\r\n3) 그룹화<br />\r\n4) 주키(PK) 설정 - 글번호, 재고 번호 등<br />\r\n5) 관계 형성 - 1:1, 1:n(1인 부분이 PK), n:m(교차 참조)<br />\r\n6) 타입 지정(여기서부터는 DB 생성 영역)<br />\r\n<br />\r\n<br />\r\n<strong>-학사 정보 ERD 테이블</strong><br />\r\n관계 연결 시 삼발이 부분에서 O(오) 모양은 외래키 널 허용 |(파이프) 모양은 널 허용하지 않는다는 의미<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600574006_glsiwtgx.jpg" style="width:100%" /><br />\r\n<br />\r\n<strong>-주키(Primary) 고유키(Uniq) 구분</strong><br />\r\n1) 공통점 : 중복을 허용하지 않음<br />\r\n2) 차이점 : 주키는 index 속성을 가지고 있으나, 고유키는 가지고 있지 않음<br />\r\n<br />\r\n<br />\r\n<strong>-외래키 제약 조건에서의 삭제</strong><br />\r\n1) 작업없음(restrict) : 자식(FK의 데이터)이 존재하면 부모쪽에서 삭제가 불가능<br />\r\n2) 종속삭제(cascade) : 부모에서 삭제시 해당 자식(FK의 데이터)을 같이 지움<br />\r\n3) 널 설정(set null) : 부모 삭제시 해당 자식(FK의 데이터)을 null로 변경. 단, FK에 해당하는 컬럼은 null을 허용해야 함.<br />\r\n<br />\r\n<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600574198_jpfpoeom.jpg" style="width:100%" />', '2020-04-16 18:26:54', '2020-09-20 12:56:44', 3, NULL),
	(134, 1, 1, '학원 20200420 정리(HTML 기초)', '<strong>-HTML(Hyper Text Markup Language)</strong> : Hyper Text(문자 + 미디어)<br />\r\n<br />\r\n<br />\r\n<strong>-태그(계층형 형태)</strong><br />\r\n&lt;태그명 속성=&quot;값&quot; 속성=&quot;값&quot; ....&gt;내용&lt;\\/태그명&gt;<br />\r\n속성의 값에 &quot;큰따옴표&quot;는 필수가 아니지만, 속성을 구분하는데 용이하므로 쓰는 것이 좋음.<br />\r\n&lt;태그1&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;태그2&gt;&lt;\\/태그2&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;태그3&gt;&lt;\\/태그3&gt;<br />\r\n&lt;\\/태그1&gt;<br />\r\n<br />\r\n<!--태그명--><!--/태그명--><br />\r\n<strong>-Server</strong> : 서비스를 통신을 통하여 제공하는 장비, 툴<br />\r\n1) WEB서버 - 웹서비스를 제공하기 위한 서버. 정적(html), apache, nginx<br />\r\n2) WAS서버(Web Application Server) - 웹 응용프로그램을 서비스하기 위한 서버. 웹서버를 포함. tomcat, Django, ....<br />\r\n<br />\r\n<br />\r\n-HTML에서 공백과 엔터는 하나의 공백으로 묶어서 처리함.<br />\r\n<br />\r\n<br />\r\n<strong>-기초태그</strong><br />\r\n1) h1~h6 : headline(제목)<br />\r\n2) b : 볼드<br />\r\n3) i : 이탤릭<br />\r\n4) br : 줄바꿈<br />\r\n5) strong : b와 동일<br />\r\n6) em : i와 동일<br />\r\n7) big : 큰글씨(150%)<br />\r\n8) small : 작은글씨(기본 사이즈보다 2point 작게)<br />\r\n9) hr : 구분선<br />\r\n10) p : 문서 단락<br />\r\n11) sub : 아랫첨자<br />\r\n12) sup : 윗첨자<br />\r\n13) pre : 공간, 간격, 라인, 띄어쓰기 등 있는 그대로 나타나도록 함<br />\r\n14) img : 이미지<br />\r\n15 map : 이미지맵<br />\r\n<br />\r\n<br />\r\n-입력과 관련된 태그 : 사용자의 입력을 받을 때 사용하는 태그<br />\r\n1) input : button(버튼), text(텍스트 입력), date(날짜), color(색깔 선택), file(파일 업로드), checkbox(체크박스 - 복수 선택 가능), radio(단일 선택), hidden(숨겨진 입력 필드 - 일종의 변수 역할)<br />\r\n2) textarea : 여러 라인 입력<br />\r\n3) button : input type=&quot;button&quot;과 동일<br />\r\n4) select : 드롭다운 메뉴 선택 / option : 값<br />\r\n5) label : 라벨', '2020-04-20 19:27:23', '2020-09-20 13:10:54', 7, NULL),
	(135, 1, 1, '학원 20200421 정리(HTML 링크, 테이블, 영역)', '<strong>-앵커(a)</strong> : 링크, 한 번에 하나씩 걸 수 있음.<br />\r\n<br />\r\n<strong>-List 관련 태그</strong> :&nbsp; ul(순서가 없는 목록), ol(순서가 있는 목록), dl(주제-설명)\r\n<table border="1" cellspacing="0" style="border-collapse:collapse; border:0.56pt solid #0a0000; width:100%">\r\n	<tbody>\r\n		<tr>\r\n			<td style="height:85.04pt; vertical-align:top; width:150.40pt">\r\n			<p><span style="font-family:맑은 고딕">&lt;ul&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Coffee&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Tea&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Milk&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;/ul&gt;</span></p>\r\n			</td>\r\n			<td style="height:85.04pt; vertical-align:top; width:150.40pt">\r\n			<p><span style="font-family:맑은 고딕">&lt;ol&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Chapter 1. HTML&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Chapter 2. CSS&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;li&gt;Chapter 3. JAVASCRIPT&lt;/li&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;/ol&gt;</span></p>\r\n			</td>\r\n			<td style="height:85.04pt; vertical-align:top; width:150.40pt">\r\n			<p><span style="font-family:맑은 고딕">&lt;dl&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;dt&gt;HTML&lt;/dt&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;dd&gt;- Hyper Text Mark-up Language&lt;/dd&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;dt&gt;CSS&lt;/dt&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;dd&gt;- Cascading Style Sheet&lt;/dd&gt;</span><br />\r\n			<span style="font-family:맑은 고딕">&lt;/dl&gt;</span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600575235_sebygrmr.jpg" style="width:100%" /><br />\r\n<br />\r\n<br />\r\n<strong>-테이블 </strong>: table로 선언. thead(머리), tbody(바디), tfoot(발)로 구성되어 있음<br />\r\n1) colgroup, col : 가로 사이즈 정의(col)를 위해 그룹화(colgroup)<br />\r\n2) thead : 가운데 정렬, 볼드 기본으로 적용<br />\r\n3) tr : 한 줄<br />\r\n4) th : 헤더 한 칸<br />\r\n5) tbody : 테이블 내용<br />\r\n6) td : 바디 한칸 / rowspan(세로병합), colspan(가로병합) 속성 존재<br />\r\n7) tfoot : 잘 안쓰지만 페이징 용도로 쓰는 경우 있음<br />\r\n<br />\r\n<br />\r\n-영역 관련 태그<br />\r\n1) DIV - CSS display : block(내용이 차지하는 높이에 가로 100%를 영역으로 지정) - 가로 영역<br />\r\n2) SPAN - CSS diplay : inline(내용만큼만 크기 지정) - 세로 영역<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600575534_gfvwwcib.jpg" style="height:119px; width:143px" /><br />\r\n&nbsp;</p>\r\n', '2020-04-21 22:23:16', '2020-09-20 13:19:00', 2, NULL),
	(136, 1, 1, '학원 20200422 정리(CSS 기초1)', '<strong>-CSS(Cascading Style Sheet) SELECTOR</strong><br />\r\n선택자. CSS를 적용할 대상을 지정<br />\r\n태그명, 클래스(.), 아이디(#), name([속성=&#39;값&#39;])<br />\r\n<br />\r\n<br />\r\n<strong>-HTML의 기본 속성</strong><br />\r\n1) id : 개발용. 중복 권장 X<br />\r\n2) name : 개발용, 정보 전달용, 중복 허용<br />\r\n3) class : 디자인용, CSS<br />\r\n<br />\r\n<br />\r\n<strong>-웹에서의 색상 표현</strong><br />\r\n1) 색상명 : red<br />\r\n2) rgb(숫자1, 숫자2, 숫자3) : red(0~255) / green(0~255) / blue(0~255)<br />\r\n3) 16진수 표현법 : 위의 rgb를 16진수로 표현. #0000FF - 파란색(FF)<br />\r\n<br />\r\n<br />\r\n<strong>-SELECTOR SELECTOR</strong><br />\r\n앞의 셀렉터 하위 요소들 중 뒤쪽 셀렉터인 것. 자식. 자식의 자식 등 모든 요소를 나타냄\r\n<blockquote>\r\n<p>#a .b1 {<br />\r\n&nbsp;&nbsp;&nbsp; background-color: maroon;<br />\r\n}</p>\r\n</blockquote>\r\n<br />\r\n<br />\r\n<strong>-SELECTOR &gt; SELECTOR</strong><br />\r\n앞 셀렉터 하위에서 뒤쪽 셀렉터인 것. 자식만 해당<br />\r\n<br />\r\n<br />\r\n<strong>-display 속성</strong><br />\r\n1) block : 가로 100%, div 기본 속성<br />\r\n2) inline : 내용만큼만, span 기본 속성(크기지정 X)<br />\r\n3) inline-block : 기본적으로는 inline과 동일하지만, 크기 지정 가능함<br />\r\n<br />\r\n<br />\r\n<strong>-padding과 마진</strong><br />\r\n1) margin : 밖에 내용을 밀어냄(크기 변화X)<br />\r\n2) padding : 안쪽 내용에서 영역을 밀어냄(크기 변화O)<br />\r\n<br />\r\n<br />\r\n<strong>-border-radius</strong><br />\r\n둥근테두리, top-left, top-light, bottom-left, bottom-right<br />\r\n<br />\r\n<br />\r\n<strong>-font-family</strong><br />\r\n사용자의 PC에 해당 폰트가 있는 경우 앞에서부터 적용. 만약 해당 폰트가 없으면 다음폰트로 시도하며, 최종적으로 아무것도 없는 경우 브라우저 기본 폰트 사용<br />\r\n<br />\r\n<br />\r\n<strong>-font-size</strong><br />\r\n기본적으로 pt를 쓰는 것을 권장. pt, %<br />\r\n폰트에서 %는 부모의 크기에서 몇 %인지를 나타냄<br />\r\n<br />\r\n<br />\r\n<strong>-브라우저 기본 마진(크롬 기준 8px) 없애기</strong><br />\r\nbody {<br />\r\n&nbsp;&nbsp;&nbsp; font-size: 0px;<br />\r\n&nbsp;&nbsp;&nbsp; margin: 0px;<br />\r\n}', '2020-04-22 23:23:59', '2020-09-20 13:34:07', 2, NULL),
	(137, 1, 1, '학원 20200423 정리(CSS 기초2)', '<strong>-position</strong><br />\r\n1) static : 순차적<br />\r\n2) absolute : absolute 또는 최상의 부모를 기준으로 위치<br />\r\n3) fixed : 브라우저를 기준으로 위치(브라우저 크기에 영향을 받음)<br />\r\n4) relative : 기본은 static과 동일. 대상 지정 시 대상을 기준으로 위치<br />\r\n<br />\r\n<br />\r\n<strong>-z-index </strong>: 사람눈 기준으로 위치. 값이 클수록 가까이 있음.<br />\r\n<br />\r\n<br />\r\n<strong>-display: none</strong> - 보여질 영역이 없음<br />\r\n<br />\r\n<br />\r\n<strong>-visibility: hidden</strong> - 내용을 보여주지 않음. 영역은 그대로 남아있음<br />\r\n<br />\r\n<br />\r\n<strong>-overflow</strong><br />\r\n1) hidden : 넘치는 것을 감춤. 보이는 영역 이후에는 짤림<br />\r\n2) scroll : 스크롤바 생김<br />\r\n3) auto : 자동으로 스크롤 생김<br />\r\n4) 그외 nowrap, pre, pre-wrap 등 있음<br />\r\n<br />\r\n<br />\r\n<strong>-text-decoration : line-throught </strong>: 들여쓰기(메뉴 표시할 때 간격 조정용으로 씀)<br />\r\n<br />\r\n<br />\r\n<strong>-CSS를 이용해서 ...을 간단하게 처리하는 방법</strong><br />\r\n1) overflow:hidden으로 넘치는 것을 감추고<br />\r\n2) white-space: nowrap으로 글자가 넘치게 설정한 후<br />\r\n3) text-overflow: ellipsis으로 넘쳐서 감추어진 내용을 ...으로 변경<br />\r\n<br />\r\n<br />\r\n<strong>-background-repeat </strong>: 배경반복 제어(repeat-x, no-repeat)<br />\r\n<br />\r\n<br />\r\n-테이블을 만들 때 border-collapse를 사용. separate일 경우 CSS가 안먹힘<br />\r\n<br />\r\n<br />\r\n-div 세로 정렬<br />\r\n<span style="font-family:맑은 고딕">.wrap {</span><br />\r\n<span style="font-family:맑은 고딕">display: inline-block;</span><br />\r\n<span style="font-family:맑은 고딕">width: 200px;</span><br />\r\n<span style="font-family:맑은 고딕">height: 200px;</span><br />\r\n<span style="font-family:맑은 고딕">vertical-align: top;</span><br />\r\n<span style="font-family:맑은 고딕">}</span><br />\r\n<span style="font-family:맑은 고딕">.con_wrap {</span><br />\r\n<span style="font-family:맑은 고딕">display: table;</span><br />\r\n<span style="font-family:맑은 고딕">width: 198px;</span><br />\r\n<span style="font-family:맑은 고딕">height: 198px;</span><br />\r\n<span style="font-family:맑은 고딕">border: 1px solid #000000;</span><br />\r\n<span style="font-family:맑은 고딕">}</span><br />\r\n<span style="font-family:맑은 고딕">.con {</span><br />\r\n<span style="font-family:맑은 고딕">display: table-cell;</span><br />\r\n<span style="font-family:맑은 고딕">text-align: center;</span><br />\r\n<span style="font-family:맑은 고딕">vertical-align: middle;</span><br />\r\n<span style="font-family:맑은 고딕">}</span>', '2020-04-23 23:12:35', '2020-09-20 13:51:19', 1, NULL),
	(138, 1, 1, '학원 20200424 정리(CSS 기초3)', '<strong>-Gradient</strong><br />\r\nBackground-color가 아닌 background-image를 씀<br />\r\n<span style="font-family:맑은 고딕">background-image: linear-gradient(30deg, rgba(0,0,255,0.7), red, #FF88AA );</span><br />\r\n<br />\r\n<strong>-Shadow 관련</strong> : text-Shadow, box-shadow<br />\r\n<br />\r\n<strong>-투명도 관련 : </strong>opacity, rgba 사용', '2020-04-24 21:37:22', '2020-09-20 13:52:55', 1, NULL),
	(139, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(140, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(141, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(142, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(143, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(144, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(145, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(146, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(147, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(148, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(149, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(150, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(151, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(152, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 0, '2020-09-20 09:58:08'),
	(153, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-22 21:48:36', NULL, 1, '2020-09-20 10:57:27'),
	(154, 1, 1, '더미', '<blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(255, 0, 0);">Test22P </span>{<br>&nbsp;<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("부모메소드");<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class <span style="color: rgb(58, 50, 195);">Test22C </span>extends <span style="color: rgb(255, 0, 0);">Test22P</span>{</div><div><br></div><div>&nbsp;public void o() {<br>&nbsp;&nbsp;super.p();<br>&nbsp;}<br>&nbsp;<br>&nbsp;@Override<br>&nbsp;public void p() {<br>&nbsp;&nbsp;System.out.println("자식메소드");<br>&nbsp;}<br>&nbsp;<br>}<br></div></blockquote><blockquote class=se2_quote8 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:1px solid #e5e5e5;background:url(https://static.se2.naver.com/static/img/bg_b1.png) repeat;_background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'https://static.se2.naver.com/static/img/bg_b1.png\',sizingMethod=\'scale\');color:#888888;"><div>public class Test22 {</div><div>&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 객체 생성<br>&nbsp;&nbsp;Test22C test = new Test22C();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 원래 부모의 p 값<br>&nbsp;&nbsp;test.o();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;// 오버라이딩된 p의 값<br>&nbsp;&nbsp;test.p();<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;}</div><div>}<br></div></blockquote><blockquote class=se2_quote9 style="_zoom:1;margin:0 0 30px 0;padding:10px;border:2px solid #e5e5e5;color:#888888;">자식메소드<br>부모메소드<br></blockquote><p>&nbsp;</p>', '2020-03-24 18:23:21', NULL, 1, '2020-09-20 11:08:24'),
	(170, 1, 1, '1부터 1000까지 출력(라인 수 = 최대 출력 개수)', '<p>public class Test01 {</p><p><br></p><p><span style="white-space:pre">	</span>public static void main(String[] args) {</p><p><span style="white-space:pre">		</span>int lineNum = 1;</p><p><span style="white-space:pre">		</span>int checkNum = 0;</p><p><br></p><p><span style="white-space:pre">		</span>for (int i = 1; i &lt;= 1000; i++) {</p><p><span style="white-space:pre">			</span>System.out.print(i + " ");</p><p><span style="white-space:pre">			</span>checkNum++;</p><p><span style="white-space:pre">			</span>if(checkNum == lineNum) {</p><p><span style="white-space:pre">				</span>lineNum++;</p><p><span style="white-space:pre">				</span>checkNum = 0;</p><p><span style="white-space:pre">				</span>System.out.println();</p><p><span style="white-space:pre">			</span>}</p><p><span style="white-space:pre">		</span>}</p><p><span style="white-space:pre">	</span>}</p><p>}</p><p><br></p>', '2020-05-04 14:19:02', NULL, 5, NULL),
	(171, 1, 1, '페이징 오라클용(row_number 이용)', '&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; // [paging - 1] 현재 페이지 취득<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int currentPage = Integer.parseInt(params.get(&quot;page&quot;));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 2] 총 게시물 수를 구함<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int getBoardListCnt = iBoardService.getBoardListCnt();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 3] 페이지당 게시글 수 지정(10개)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int viewCount = 10;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 4] 페이징 개수 지정(5개)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int pageCount = 5;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 5] 시작 게시글 번호 계산 : (현재P - 1) * 페이지당 게시글 수 + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int startCount = (currentPage - 1) * viewCount + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 6] 종료 게시글 번호 계산 : 현재P * 페이지당 게시글 수<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int endCount = currentPage * viewCount;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 7] 총 페이지 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;1) 총게시물 수 % 페이지당 게시글의 결과가 0일 아닐 경우 : 총 게시물 수 / 페이지당 게시글 수<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;2) 총게시물 수 % 페이지당 게시글의 결과가 0일 경우 : 총게시물 수 / 페이지당 게시글 수&nbsp; + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int maxPageCount = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(getBoardListCnt % viewCount &gt; 0) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;maxPageCount = (getBoardListCnt / viewCount) + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;maxPageCount = getBoardListCnt / viewCount;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 8] 현재 페이지 기준 시작 페이지 번호 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;1) 현재 페이지 % 페이징 개수의 결과가 0이 아닐 경우 : (현재 페이지 / 페이징 개수) + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;2) 현재 페이지 % 페이징 개수의 결과가 0일 경우 : 현재 페이지 - 페이징 개수 + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int startPageCount = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(currentPage % pageCount != 0) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;startPageCount = (currentPage / pageCount) + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;startPageCount = currentPage - pageCount + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 9] 현재 페이지 기준 종료 페이지 번호 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;시작 페이지 + 페이징 개수 - 1(단, 최대 페이지보다 클 경우&nbsp; 종료페이지는 최대페이지로...)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int endPageCount = startPageCount + pageCount - 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(endPageCount &gt;= maxPageCount) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;endPageCount = maxPageCount;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;', '2020-09-12 14:33:23', '2020-09-12 16:01:19', 9, NULL),
	(172, 1, 1, '페이징 mysql용(limit 이용)', '// [paging - 1] 현재 페이지 취득<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int currentPage = Integer.parseInt(params.get(&quot;page&quot;));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 2] 총 게시물 수를 구함<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int getBoardListCnt = iBoardService.getBoardListCnt();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 3] 페이지당 게시글 수 지정(10개) : (취득한 현재 페이지 - 1) * 10<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int viewCount = 10;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;params.put(&quot;limitCnt&quot;, Integer.toString(viewCount));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;params.put(&quot;limitStart&quot;, Integer.toString(((currentPage - 1) * 10)));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// [paging - 4] 페이징 개수 지정(5개)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int pageCount = 5;<br />\r\n<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 5] 총 페이지 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;1) 총게시물 수 % 페이지당 게시글의 결과가 0일 아닐 경우 : 총 게시물 수 / 페이지당 게시글 수<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;2) 총게시물 수 % 페이지당 게시글의 결과가 0일 경우 : 총게시물 수 / 페이지당 게시글 수&nbsp; + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int maxPageCount = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(getBoardListCnt % viewCount &gt; 0) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;maxPageCount = (getBoardListCnt / viewCount) + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;maxPageCount = getBoardListCnt / viewCount;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 6] 현재 페이지 기준 시작 페이지 번호 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;1) 현재 페이지 % 페이징 개수의 결과가 0이 아닐 경우 : (현재 페이지 / 페이징 개수) + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;2) 현재 페이지 % 페이징 개수의 결과가 0일 경우 : 현재 페이지 - 페이징 개수 + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int startPageCount = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(currentPage % pageCount != 0) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;startPageCount = (currentPage / pageCount) * pageCount + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;startPageCount = currentPage - pageCount + 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/*<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;[paging - 7] 현재 페이지 기준 종료 페이지 번호 계산<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;시작 페이지 + 페이징 개수 - 1(단, 최대 페이지보다 클 경우&nbsp; 종료페이지는 최대페이지로...)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; */<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int endPageCount = startPageCount + pageCount - 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(endPageCount &gt;= maxPageCount) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;endPageCount = maxPageCount;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}', '2020-09-12 16:00:24', NULL, 8, NULL),
	(173, 2, 1, '제주 올레 쇠소깍다리 출발지점', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047057_otrnfjvu.jpg" style="width:100%" />', '2019-12-21 16:24:42', NULL, 3, NULL),
	(174, 2, 1, '제주 올레길 우도 출발지점', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047182_iidgeapb.jpg" style="width:100%" />', '2019-12-22 14:23:10', NULL, 5, NULL),
	(175, 2, 1, '제주 올레길 21코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047322_lfhzmujh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047338_cliodygu.jpg" style="width:100%" />', '2020-01-08 12:02:11', NULL, 2, NULL),
	(176, 2, 1, '제주 올레길 1코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047424_dtmedooi.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047439_hzmbtnfz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047476_jjqwhrlk.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047500_ypwivznl.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600047526_flvracct.jpg" style="width:100%" />', '2020-01-08 16:08:18', NULL, 4, NULL),
	(177, 2, 1, '제주 올레 1코스(2차)', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048231_fxvfnmvw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048243_ztozhstb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048255_fllzqwco.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048267_ncnaceju.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048280_pefokphq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048290_soyznwkn.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048305_kuhlbuvh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048315_rcewfmdm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048333_rnyeoazg.jpg" style="width:100%" />', '2020-01-15 13:15:24', NULL, 2, NULL),
	(178, 2, 1, '제주올레 2코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048702_mtdilqdf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048713_kozauoss.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048725_pwcisuuc.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048735_tqudpbsw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048746_ahkitfhr.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048755_qxiqzhlb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048766_cmwlymzp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048778_iucnxvpo.jpg" style="width:100%" />', '2020-01-15 17:21:02', NULL, 4, NULL),
	(179, 2, 1, '여수 해상 케이블카', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048971_tepemhwa.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048983_phtbmjmt.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600048993_tpnkmsct.jpg" style="width:100%" />', '2020-01-20 20:22:56', NULL, 2, NULL),
	(180, 2, 1, '여수/순천 여행', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049360_ywtfrcuq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049370_kytehtvd.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049380_xttwjrxy.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049418_ppvcqkkw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049431_gfbwkqac.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049443_ybsvozos.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049453_ottrbwed.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049463_mmqzhvov.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049489_qfsxfxee.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600049502_caxknevn.jpg" style="width:100%" />', '2020-01-21 15:34:08', NULL, 3, NULL),
	(181, 2, 1, '제주 올레길 10코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050092_hawklwaa.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050104_ubakplyd.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050115_xuppoesz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050128_kcwrycdx.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050141_khaaqktm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050154_jfkqlyjx.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050184_tkcpayah.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050197_bsuekcdz.jpg" style="width:100%" />', '2020-01-27 18:06:00', NULL, 2, NULL),
	(182, 2, 1, '제주 올레길 2코스(2차)', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050584_irkberkb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050609_kgorrype.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050618_lbkybfwc.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050630_exhahmqp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050645_ozxozahz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050659_mgbshaig.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050671_vkkonbjk.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050685_hcpyjlvq.jpg" style="width:100%" />', '2020-01-28 14:37:02', '2020-09-19 16:27:25', 4, NULL),
	(183, 2, 1, '제주 올레길 3코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050917_mtbedeim.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050929_yfavkrky.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050938_elpeqzvx.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050948_iwwxvcoe.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600050958_arfdjkpa.jpg" style="width:100%" />', '2020-01-28 17:05:32', NULL, 2, NULL),
	(184, 2, 1, '제주 올레길 10-1코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051410_jujhvxct.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051421_bvfnhhlp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051449_apxxjbhy.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051461_nybsjbjh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051472_ssjgsxai.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051484_hdfyeunj.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051509_wgmjxbfk.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051524_pwgnmpkf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051547_hvnbsydd.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051561_clfgnycf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051574_ipmrkeer.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051583_likuimdh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051596_kcyvknce.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051609_gayncmil.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051621_zezmhgvq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051635_rklogrld.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600051647_lbjukrzk.jpg" style="width:100%" />', '2020-01-29 15:07:21', NULL, 4, NULL),
	(185, 2, 1, '제주 올레길 16코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052010_vmbecyhf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052021_pkquheif.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052032_jtrgwgji.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052040_kskvxhrq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052053_wwtouscq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052063_fqmvnnnx.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052073_gotdmfaw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052085_gwkrbklu.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052095_fvbthruk.jpg" style="width:100%" />', '2020-02-02 18:04:27', NULL, 5, NULL),
	(186, 2, 1, '제주 올레길 17코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052379_ajasjkwt.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052391_ctfqgjfi.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052403_tqrkoxdh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052414_itgnyduf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052424_gahzczjm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052436_rzjzlrqu.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052448_sxauekjq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052457_giiurilj.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052467_rmkyzclf.jpg" style="width:100%" />', '2020-02-03 15:32:56', NULL, 3, NULL),
	(187, 2, 1, '제주 올레길 18코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052895_udvwewuz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052905_ykwmubpd.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052913_aacusylk.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052924_ocrqwvrr.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052937_kdsmbcaz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052948_uheplkzy.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600052962_zcffvwtp.jpg" style="width:100%" />', '2020-02-06 17:51:45', NULL, 4, NULL),
	(188, 2, 1, '제주 올레길 19코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053125_gqeqcqkf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053208_qenmrtef.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053219_ahjhskhv.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053229_tzkkynpt.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053237_opdozisl.jpg" style="width:100%" />', '2020-02-07 13:20:22', NULL, 10, NULL),
	(189, 2, 1, '안양천 벚꽃', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053368_rybxhcqj.jpg" style="width:100%" />', '2020-04-26 14:41:42', NULL, 15, NULL),
	(190, 1, 1, '집 와이파이 정보', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053420_hvpsggny.jpg" style="width:100%" />', '2020-09-14 12:17:14', NULL, 9, NULL),
	(191, 2, 1, '테스트', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600053838_inxjtnxa.jpg" style="width:100%" />', '2020-09-14 12:24:14', NULL, 5, '2020-09-14 14:13:28'),
	(192, 2, 1, '수정 테스트', 'ㅇㄴㅁㅇㅁㄴㅇㅁㄴ<br />\r\n<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065049_rzzdefpt.jpg" style="height:3264px; width:1468px" />', '2020-09-14 14:13:36', '2020-09-14 15:32:44', 21, '2020-09-14 15:33:23'),
	(193, 2, 1, '테스트', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065235_ipvqyqwc.jpg" style="width:100%" />', '2020-09-14 15:33:27', '2020-09-14 15:41:49', 7, '2020-09-14 15:41:53'),
	(194, 2, 1, 'ㅇㅁㄴ', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065670_vpqlzbhe.jpg" style="height:1816px; width:4032px" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065476_ooufoplh.jpg" style="width:100%" />ㅇㄴㅁㅇㅁㄴ', '2020-09-14 15:37:42', '2020-09-14 15:41:15', 4, '2020-09-14 15:41:27'),
	(195, 2, 1, '다시테스트', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065773_gpmyynvd.jpg" style="height:4032px; width:1816px" />', '2020-09-14 15:42:40', '2020-09-14 15:42:58', 2, '2020-09-14 15:43:09'),
	(196, 2, 1, 'ㅇㅁㄴㅇㅁㄴ', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600065803_fjnoauzl.jpg" style="width:100%" />ㅇㄴㅁㅇ', '2020-09-14 15:43:14', '2020-09-14 15:43:35', 2, '2020-09-14 15:43:43'),
	(197, 1, 1, 'nginx 413 Request Entity Too Large 에러 해결', '2020/09/15 18:07:24 [error] 1082867#0: *12513 client intended to send too large body: 2022206 bytes, client: 112.133.63.117, server: yeonghoon.kim, request: &quot;POST /imageUpload?CKEditor=contentDetail&amp;CKEditorFuncNum=0&amp;langCode=ko HTTP/1.1&quot;, host: &quot;yeonghoon.kim&quot;, referrer: &quot;https://yeonghoon.kim/galleryAdd&quot;<br />\r\n<br />\r\n업로드 용량 제한에 걸리지도 않았는데, 파일을 업로드 했을 때 에러 뜸.<br />\r\n(로컬에서만 테스트해서 몰랐는데, 실제 서버에서 해당 에러 발생)<br />\r\n<br />\r\nnginx 공식 문서에서 말하길...<br />\r\n<strong>용량을 조절하거나, 0을 줘서 비활성화 하라고 함</strong><br />\r\n&nbsp;\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:100%">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>Defines a timeout for reading client request header. If a client does not transmit the entire header within this time, the request is terminated with the 408 (Request Time-out) error.</p>\r\n\r\n			<div>\r\n			<table cellspacing="0">\r\n				<tbody>\r\n					<tr>\r\n						<th>Syntax:</th>\r\n						<td><code><strong>client_max_body_size</strong> <code><em>size</em></code>;</code></td>\r\n					</tr>\r\n					<tr>\r\n						<th>Default:</th>\r\n						<td>\r\n						<p>client_max_body_size 1m;</p>\r\n						</td>\r\n					</tr>\r\n					<tr>\r\n						<th>Context:</th>\r\n						<td><code>http</code>, <code>server</code>, <code>location</code></td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n			</div>\r\n\r\n			<p>Sets the maximum allowed size of the client request body, specified in the &ldquo;Content-Length&rdquo; request header field. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting <code><em>size</em></code> to 0 disables checking of client request body size.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', '2020-09-15 18:25:33', '2020-09-16 09:20:29', 8, NULL),
	(198, 2, 1, '제주 올레길 11코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600161990_fzrlgnri.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162013_gtmwtmlf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162040_qgmkztwe.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162069_ilrqskqw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162101_ffqjfplu.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162128_wbtwwbzw.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162154_qnagzofv.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162183_irxldkkm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162211_ywbyknpq.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162234_emztqrbf.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600162257_gfsvpewj.jpg" style="width:100%" />', '2020-09-15 18:32:12', '2020-09-15 18:33:12', 7, NULL),
	(199, 2, 1, '제주 올레길 19코스(2차)', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253114_yelakkuy.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253131_yqjykssd.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253153_zzvyalwn.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253199_tmyjccxv.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253216_uvvbmsgc.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253238_wmugafxi.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253262_sfaqahrg.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253289_jdhvzqhm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253313_qopqhjia.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253338_cwoayvgh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253358_duiiwvsp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253378_ylnmidqb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253402_koodmfnm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253426_uemzvaba.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253449_tomczcqh.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253471_dhqasvvm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253498_remupqez.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253523_hmppfmws.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253552_ndczcxuj.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253570_frmeqilk.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600253589_ubnjcjku.jpg" style="width:100%" />', '2020-09-16 19:53:34', NULL, 5, NULL),
	(200, 2, 1, '제주 올레길 7-1코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338387_onfojzgy.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338408_hqvfiuzp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338433_qujqwbqp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338458_qrqptcjp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338516_fodfupqv.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338536_zthwgiag.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338557_jxlsishu.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338576_ohrgshzb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600338599_qvbrodta.jpg" style="width:100%" />', '2020-09-17 19:30:32', NULL, 3, NULL),
	(201, 2, 1, '제주 올레길 15-B코스', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468751_mykrswvg.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468786_uwynjshp.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468812_njmgwbam.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468835_fsrizstg.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468860_uudwigvm.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468886_osewdtxl.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468910_eyjhoizj.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468954_jbfwlkbz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600468976_hkelmvex.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600469003_vwavyzlo.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600469025_ihmovbnl.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600469048_ozgczjdr.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600469092_trstknxp.jpg" style="width:100%" />', '2020-09-19 07:45:43', NULL, 5, NULL),
	(202, 2, 1, '표선해수욕장, 표선카라반캠핑장', '<img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501089_uxdiwymu.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501107_jehlwype.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501128_hudvwhhz.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501148_lehlbanb.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501169_oflncxut.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501185_eaobatlt.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501206_jnzwxbil.jpg" style="width:100%" /><img alt="" src="https://kr.object.iwinv.kr/yeonghoon.kim/1600501220_aatzjmfo.jpg" style="width:100%" />', '2020-09-19 16:41:10', NULL, 2, NULL),
	(204, 1, 1, 'ㅂㅂㅂㅂ', 'sdasdasdasㅇㄴㅁㅇㅁㄴㅇㄴㅁㅇdasdsadsadㄹㅇㅁㄴㅇㅁasaaaaㅇㅁㄴㅇㅁㄴㅇㄹㄹㄹㅇㅁㄴㅁㄴㅁㄴㅁㄴㅁㄴ', '2020-09-20 16:10:29', '2020-09-20 16:33:59', 19, '2020-09-20 16:34:25');
/*!40000 ALTER TABLE `board_content` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.board_content_file 구조 내보내기
DROP TABLE IF EXISTS `board_content_file`;
CREATE TABLE IF NOT EXISTS `board_content_file` (
  `board_content_file_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '첨부파일번호',
  `board_content_no` int(11) unsigned NOT NULL COMMENT '게시글번호',
  `board_content_file_path1` tinytext DEFAULT NULL COMMENT '첨부파일경로1',
  `board_content_file_path2` tinytext DEFAULT NULL COMMENT '첨부파일경로2',
  `board_content_file_name1` tinytext DEFAULT NULL COMMENT '첨부파일1 이름',
  `board_content_file_name2` tinytext DEFAULT NULL COMMENT '첨부파일2 이름',
  PRIMARY KEY (`board_content_file_no`),
  KEY `board_content.FK` (`board_content_no`),
  CONSTRAINT `board_content.FK` FOREIGN KEY (`board_content_no`) REFERENCES `board_content` (`board_content_no`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COMMENT='게시글 첨부파일 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.board_content_file:~31 rows (대략적) 내보내기
/*!40000 ALTER TABLE `board_content_file` DISABLE KEYS */;
REPLACE INTO `board_content_file` (`board_content_file_no`, `board_content_no`, `board_content_file_path1`, `board_content_file_path2`, `board_content_file_name1`, `board_content_file_name2`) VALUES
	(16, 49, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812071_zizvyfeg.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812071_ysqvnxhz.show', 'CentOS7 BIND 1차, 2차 구성.pdf', 'CentOS7 BIND 1차, 2차 구성.show'),
	(17, 45, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812118_sdlxwsga.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812118_lcifgfkr.show', 'CentOS7 BIND 설치 및 설정.pdf', 'CentOS7 BIND 설치 및 설정.show'),
	(18, 51, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812139_kpsthsag.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812139_tukonhlu.show', 'CentOS7 Google Authenticator구글 OTP SSH 적용.pdf', 'CentOS7 Google Authenticator구글 OTP SSH 적용.show'),
	(19, 50, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812175_rbywlwvw.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812175_tesphqxn.show', 'CentOS7 MariaDB 설치 및 설정RPM.pdf', 'CentOS7 MariaDB 설치 및 설정RPM.show'),
	(20, 40, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812202_chbwcdni.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812202_hbymbwnc.show', 'CentOS7 Minimal 설치 및 네트워크 설정.pdf', 'CentOS7 Minimal 설치 및 네트워크 설정.show'),
	(21, 42, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812222_gztgnhqa.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812222_srdvmjni.show', 'CentOS7 vsftpd 설치 및 설정.pdf', 'CentOS7 vsftpd 설치 및 설정.show'),
	(22, 43, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812257_tyucvnty.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812257_ocduxhhj.show', 'CentOS7 네트워크 장치명 변경eth0.pdf', 'CentOS7 네트워크 장치명 변경eth0.show'),
	(23, 46, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812311_qjevmicu.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812311_psbbzevk.show', 'CentOS7 메일 서버 구축 1 - Sendmail 설치 및 설정.pdf', 'CentOS7 메일 서버 구축 1 - Sendmail 설치 및 설정.show'),
	(24, 47, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812341_tsnpsvxg.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812341_kmpjxsvl.show', 'CentOS7 메일 서버 구축 2 - Dovecot 설치 및 설정.pdf', 'CentOS7 메일 서버 구축 2 - Dovecot 설치 및 설정.show'),
	(25, 48, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812366_wbmrpnae.pdf', NULL, 'CentOS7 메일 서버 구축 3 - 도메인 레코드 설정 및 수발신 테스트.pdf', ''),
	(26, 41, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812390_xmkviosl.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812390_zabhbwep.show', 'CentOS7 설치 후 기본 설정.pdf', 'CentOS7 설치 후 기본 설정.show'),
	(27, 39, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812415_zmfwmqop.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812415_dyfjzcdu.show', 'ssh 클라이언트 소개 및 서버 접속 방법.pdf', 'ssh 클라이언트 소개 및 서버 접속 방법.show'),
	(28, 44, 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812433_wdpdbevb.pdf', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599812433_vrunfccg.show', '도메인 구매 및 사용 방법.pdf', '도메인 구매 및 사용 방법.show'),
	(33, 119, NULL, NULL, '', ''),
	(34, 120, NULL, NULL, '', ''),
	(35, 124, 'https://kr.object.iwinv.kr/yeonghoon.kim/1600568451_nwcpdidw.xlsx', NULL, '20200330_쿼리.xlsx', ''),
	(36, 125, NULL, NULL, '', ''),
	(37, 126, NULL, NULL, '', ''),
	(38, 127, NULL, NULL, '', ''),
	(39, 128, NULL, NULL, '', ''),
	(40, 129, NULL, NULL, '', ''),
	(41, 130, NULL, NULL, '', ''),
	(42, 131, NULL, NULL, '', ''),
	(43, 132, NULL, NULL, '', ''),
	(44, 133, 'https://kr.object.iwinv.kr/yeonghoon.kim/1600573859_deikusqx.xlsx', NULL, '20200416_DB설계_테이블정의서.xlsx', ''),
	(45, 134, NULL, NULL, '', ''),
	(46, 135, NULL, NULL, '', ''),
	(47, 136, NULL, NULL, '', ''),
	(48, 137, NULL, NULL, '', ''),
	(49, 138, NULL, NULL, '', ''),
	(50, 204, 'https://kr.object.iwinv.kr/yeonghoon.kim/1600585984_isbewlxi.png', NULL, 'bg_b1.png', '');
/*!40000 ALTER TABLE `board_content_file` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.board_type 구조 내보내기
DROP TABLE IF EXISTS `board_type`;
CREATE TABLE IF NOT EXISTS `board_type` (
  `board_type_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '게시판구분번호',
  `board_type_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`board_type_no`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='게시판 구분에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.board_type:~2 rows (대략적) 내보내기
/*!40000 ALTER TABLE `board_type` DISABLE KEYS */;
REPLACE INTO `board_type` (`board_type_no`, `board_type_delete_yn`) VALUES
	(1, 1),
	(2, 1);
/*!40000 ALTER TABLE `board_type` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.brief_history 구조 내보내기
DROP TABLE IF EXISTS `brief_history`;
CREATE TABLE IF NOT EXISTS `brief_history` (
  `brief_history_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '약력번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `brief_history_education` varchar(20) DEFAULT NULL COMMENT '학력',
  `brief_history_career` varchar(20) DEFAULT NULL COMMENT '경력',
  `brief_history_certificate` varchar(20) DEFAULT NULL COMMENT '자격',
  `brief_history_upload_path` tinytext DEFAULT NULL COMMENT '사진경로',
  PRIMARY KEY (`brief_history_no`),
  KEY `brief_hisotry_member.FK` (`member_no`),
  CONSTRAINT `brief_hisotry_member.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='약력에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.brief_history:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `brief_history` DISABLE KEYS */;
REPLACE INTO `brief_history` (`brief_history_no`, `member_no`, `brief_history_education`, `brief_history_career`, `brief_history_certificate`, `brief_history_upload_path`) VALUES
	(1, 1, '동아대학교(4년) 사학과', '인프라엔지니어 4년 5개월', '정보처리기사 외 3', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600501633_xdqyfobr.png');
/*!40000 ALTER TABLE `brief_history` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.career 구조 내보내기
DROP TABLE IF EXISTS `career`;
CREATE TABLE IF NOT EXISTS `career` (
  `career_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '경력번호',
  `company_no` int(11) unsigned NOT NULL COMMENT '회사번호',
  `career_responsibility` varchar(50) NOT NULL COMMENT '주요업무',
  `career_description` text NOT NULL COMMENT '경력기술',
  `career_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  `career_department` varchar(50) NOT NULL COMMENT '근무부서',
  PRIMARY KEY (`career_no`),
  KEY `career_company.FK` (`company_no`),
  CONSTRAINT `career_company.FK` FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COMMENT='경력에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.career:~8 rows (대략적) 내보내기
/*!40000 ALTER TABLE `career` DISABLE KEYS */;
REPLACE INTO `career` (`career_no`, `company_no`, `career_responsibility`, `career_description`, `career_delete_yn`, `career_department`) VALUES
	(1, 12, '인프라 관리 및 정보보호 관리', '- 웹하드(쉐어박스, 파일함, 미투디스크) 인프라 운영\r\n- IDC 인프라 자산 관리\r\n- 시스템 구축 및 관리(윈도우, CentOS, Apache, Nginx, PHP, MySQL, SVN, SSL, 도메인, proftpd, sphinx, raid)\r\n- 시스템 모니터링 및 자동화(nagios, ansible)\r\n- 시스템 장애 대응 처리\r\n- 신규 개발 관련 인프라 구축(kvm 가상화)\r\n- 사내 방화벽 관리(FortiGate-300D)\r\n- ISMS 심사 대응(보안 조치 및 문서작업)', 1, '개발팀'),
	(2, 5, '23dsadasd', '123dsadsadas', 0, 'ㅇㄴㅁㅇeㅁㄴㅇasdasdasd'),
	(3, 11, '호스팅 기술지원, IDC 보안 관제, 네트워크 장애처리', '- cloudv, iwinv 서버 부분 기술지원\r\n- 서버 조립 및 OS 설치(CentOS, Ubuntu, Windows Server)\r\n- 프로그램 설치 및 설정(Apache, Nginx, IIS, PHP, Tomcat, MySQL, MariaDB, MS-SQL, Sendmail, Dovecot, BIND, PDNS 등)\r\n- 간단한 shell script 작성(백업, 모니터링 스크립트 등)\r\n- 고객 서버 장애처리(하드웨어 교체, 시스템 점검, 시스템 복구)\r\n- PLANET, Edgecore L2, L3 스위치 세팅\r\n- 해킹 사고 및 DDoS 탐지 및 대응', 1, '기술지원팀(2015.07 ~ 2017.12)'),
	(4, 11, '웹호스팅 기술지원 및 서버 운영, 공공기관 클라우드 개발 초기 인프라 구축', '- 아이비호스팅, iwinv 웹호스팅 서비스 운영(Apache, PHP, MySQL, BIND, QMAIL, SSL, 도메인)\r\n- 웹호스팅 고객 응대(문의사항 처리, 사이트 이전, DB 마이그레이션 등)\r\n- 서버 모니터링 및 장애 대응\r\n- 서버 로그 분석\r\n- 프로젝트 초기 인프라 구축(서버 초기 세팅 및 프로그램 설치, 서버 이중화)\r\n- 프로그램 초기 세팅 및 설정(16대 - Apache, PHP, MySQL, PDNS, Sendmail, MongoDB, Node.js)\r\n- 서버 이중화 설정(bonding, MySQL Replication, Corosync, DRBD)\r\n- TLS 통신 설정(MySQL, MongoDB, Sendmail)', 1, '웹호스팅팀(2018.01 ~ 2018.06)'),
	(5, 11, '웹호스팅 기술지원 및 서버 운영', '- 아이비호스팅, iwinv 웹호스팅 서비스 운영(Apache, PHP, MySQL, BIND, SSL, 도메인)\r\n- 웹호스팅 고객 응대(문의사항 처리, 사이트 이전, DB 마이그레이션 등)\r\n- 서버 모니터링 및 장애 대응\r\n- 서버 로그 분석', 1, '제2연구소(2018.07 ~ 2018.11)'),
	(6, 6, '마아sdsadasd아', 'dasdasdㅌㄹㅇㄴㄹ', 0, 'dsadasd'),
	(7, 9, 'ㅇㅁㄴㅇㅁㄴㅇㅁㄴ', 'ㅇㅁㄴㅇㅇㅁㄴㅇㄴㅁㅇㅁㄴㅇㅇㄴㅁㅁㄴ', 1, 'ㅇㅁㄴㅇㅁㄴ'),
	(9, 13, 'dasd', 'asdsadas', 1, 'dasdsa');
/*!40000 ALTER TABLE `career` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.certificate 구조 내보내기
DROP TABLE IF EXISTS `certificate`;
CREATE TABLE IF NOT EXISTS `certificate` (
  `certificate_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '자격증번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `certificate_name` varchar(20) NOT NULL COMMENT '자격증명',
  `certificate_organization` varchar(20) NOT NULL COMMENT '발급기관',
  `certificate_pass_yn` tinyint(1) unsigned NOT NULL COMMENT '합격여부',
  `certificate_issue_date` date NOT NULL COMMENT '발급일자',
  `certificate_upload_path` tinytext DEFAULT NULL COMMENT '증명서류경로',
  `certificate_delete_yn` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`certificate_no`),
  KEY `certificate_member.FK` (`member_no`),
  CONSTRAINT `certificate_member.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COMMENT='자격증에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.certificate:~7 rows (대략적) 내보내기
/*!40000 ALTER TABLE `certificate` DISABLE KEYS */;
REPLACE INTO `certificate` (`certificate_no`, `member_no`, `certificate_name`, `certificate_organization`, `certificate_pass_yn`, `certificate_issue_date`, `certificate_upload_path`, `certificate_delete_yn`) VALUES
	(1, 1, '컴퓨터활용능력 2급', '대한상공회의소 ', 1, '2012-08-17', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067893_saiokxgn.jpg', 1),
	(3, 1, '사무자동화산업기사', '한국산업인력공단 ', 1, '2012-08-17', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067869_mvuvpqux.jpg', 1),
	(4, 1, 'PC정비사1급', '한국정보통신자격협회 ', 1, '2013-11-26', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067841_yyvkvbgh.jpg', 1),
	(5, 1, '정보처리기사', '한국산업인력공단', 1, '2015-05-08', NULL, 0),
	(6, 1, '정보처리기사', '한국산업인력공단', 1, '2015-05-08', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067831_lanrpced.jpg', 1),
	(7, 1, 'ㄴㅁㅇㅁㄴㅇㅁㄴ', 'dasdsadㅁㄴㅇㅁㄴㅇ', 1, '2020-07-17', NULL, 0),
	(8, 1, 'rewrwer', 'wrwerwerwer', 1, '2020-09-10', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599557334_ywamcoue.jpg', 0);
/*!40000 ALTER TABLE `certificate` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.comment 구조 내보내기
DROP TABLE IF EXISTS `comment`;
CREATE TABLE IF NOT EXISTS `comment` (
  `comment_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '댓글번호',
  `board_content_no` int(11) unsigned NOT NULL COMMENT '게시글번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `comment_content` text NOT NULL COMMENT '내용',
  `comment_reg_time` datetime NOT NULL DEFAULT current_timestamp() COMMENT '등록시간',
  `comment_mod_time` datetime DEFAULT NULL COMMENT '수정시간',
  `comment_del_time` datetime DEFAULT NULL COMMENT '삭제시간',
  PRIMARY KEY (`comment_no`),
  KEY `comment_board_content_no.FK` (`board_content_no`),
  CONSTRAINT `comment_board_content_no.FK` FOREIGN KEY (`board_content_no`) REFERENCES `board_content` (`board_content_no`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='댓글 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.comment:~0 rows (대략적) 내보내기
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.company 구조 내보내기
DROP TABLE IF EXISTS `company`;
CREATE TABLE IF NOT EXISTS `company` (
  `company_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '회사번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `company_name` varchar(20) NOT NULL COMMENT '회사명',
  `company_startdate` date NOT NULL COMMENT '입사년월',
  `company_enddate` date NOT NULL COMMENT '퇴사년월',
  `company_upload_path` tinytext DEFAULT NULL COMMENT '증명서류경로',
  `company_delete_yn` tinyint(1) unsigned DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`company_no`),
  KEY `member.fk` (`member_no`),
  CONSTRAINT `member.fk` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COMMENT='회사에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.company:~14 rows (대략적) 내보내기
/*!40000 ALTER TABLE `company` DISABLE KEYS */;
REPLACE INTO `company` (`company_no`, `member_no`, `company_name`, `company_startdate`, `company_enddate`, `company_upload_path`, `company_delete_yn`) VALUES
	(1, 1, '스마일서브', '2019-01-30', '2020-12-13', NULL, 0),
	(2, 1, 'fdsfsdf', '2020-09-02', '2020-09-04', NULL, 0),
	(3, 1, 'dasdasda', '2020-09-01', '2020-09-05', NULL, 0),
	(4, 1, 'dasdas', '2020-09-04', '2020-09-05', NULL, 0),
	(5, 1, '기프트엠', '2019-01-31', '2019-12-13', NULL, 0),
	(6, 1, '스마일서브', '2015-07-11', '2018-11-05', NULL, 0),
	(7, 1, 'ㅁㅁㅁ', '2020-09-08', '2025-09-11', NULL, 0),
	(8, 1, '아야어여오요우유으이', '2001-09-01', '2020-09-05', NULL, 0),
	(9, 1, '이상한회사', '2020-09-01', '2020-09-05', NULL, 0),
	(10, 1, '기프트엠', '2019-01-31', '2019-12-13', NULL, 0),
	(11, 1, '스마일서브', '2015-07-11', '2018-11-05', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067778_rpfwqmbn.jpg', 1),
	(12, 1, '기프트엠', '2019-01-31', '2019-12-13', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067767_xwvijfco.jpg', 1),
	(13, 1, 'dsadsa', '2020-09-09', '2020-09-08', NULL, 0),
	(14, 1, 'ㅇㄴㄹㄴㅇㄹ', '2020-09-15', '2020-09-08', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599556186_dvxmhgzz.png', 0);
/*!40000 ALTER TABLE `company` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.education 구조 내보내기
DROP TABLE IF EXISTS `education`;
CREATE TABLE IF NOT EXISTS `education` (
  `education_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '학력번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `education_name` varchar(20) NOT NULL COMMENT '학교명',
  `education_department` varchar(20) DEFAULT NULL COMMENT '학과명',
  `education_status` int(1) unsigned NOT NULL COMMENT '상태',
  `education_startdate` date NOT NULL COMMENT '입학년월',
  `education_enddate` date DEFAULT NULL COMMENT '졸업년월',
  `education_etc` varchar(20) DEFAULT NULL COMMENT '기타사항',
  `education_upload_path` tinytext DEFAULT NULL COMMENT '증명서류경로',
  `education_delete_yn` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`education_no`),
  KEY `education_member.FK` (`member_no`),
  CONSTRAINT `education_member.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COMMENT='학력에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.education:~19 rows (대략적) 내보내기
/*!40000 ALTER TABLE `education` DISABLE KEYS */;
REPLACE INTO `education` (`education_no`, `member_no`, `education_name`, `education_department`, `education_status`, `education_startdate`, `education_enddate`, `education_etc`, `education_upload_path`, `education_delete_yn`) VALUES
	(1, 1, '오천고등학교', NULL, 1, '2003-03-01', '2006-02-01', '인문계열', NULL, 1),
	(2, 1, '동아대학교', '사학과', 1, '2006-03-01', '2013-02-19', '학점 : 3.0 / 4.5', 'https://kr.object.iwinv.kr/yeonghoon.kim/1600067755_ytdjwjfn.jpg', 1),
	(3, 1, '오천중학교', NULL, 2, '2000-09-12', '2002-11-13', '테스트용용', NULL, 0),
	(4, 1, 'dsadsad', 'dasdas', 1, '2020-09-15', '2020-09-11', 'dasdasd', NULL, 0),
	(5, 1, 'dsadas', 'dasdasd', 2, '2020-09-04', '2020-09-04', '', NULL, 0),
	(6, 1, 'dasdas', NULL, 3, '2020-09-09', NULL, NULL, NULL, 0),
	(7, 1, 'dsadasda', NULL, 3, '2020-09-04', NULL, NULL, NULL, 0),
	(8, 1, 'dsadasd', 'sadasdsa', 4, '2020-09-01', '2020-09-09', 'dasdasdasda', NULL, 0),
	(9, 1, 'dsad', 'asdasdas', 1, '2020-09-02', '2020-09-09', 'dwewqeqw', NULL, 0),
	(10, 1, 'dasdasd', 'dsadasd', 2, '2006-03-20', '2013-02-09', 'dsadsadsadas', NULL, 0),
	(11, 1, 'dasd', 'sadas', 4, '2020-09-08', '2020-09-16', 'dsadas', NULL, 0),
	(12, 1, 'dsad', 'asdasd', 1, '2020-09-16', '2020-09-19', 'dsadasdwqeqweasd', NULL, 0),
	(13, 1, 'dsadsa', 'dsadsa', 2, '2020-09-04', '2020-09-04', 'dsadasas', NULL, 0),
	(14, 1, 'dsada', 'sdsadsa', 1, '2020-09-08', '2020-09-09', 'dsadsadas', NULL, 0),
	(15, 1, 'dasdsad', 'asdasdas', 2, '2020-09-16', '2020-09-11', NULL, NULL, 0),
	(16, 1, 'dsadsa', 'dsadas', 2, '2020-09-10', '2020-09-17', 'dsadasd', NULL, 0),
	(17, 1, 'dasdsa', 'dasd', 1, '2020-09-15', '2020-09-01', NULL, NULL, 0),
	(21, 1, '테스트학교', '1234', 4, '2020-09-06', '2020-09-08', '테스트입니다', NULL, 0),
	(22, 1, 'doa', 'aaaa', 1, '2020-09-08', '2020-09-09', 'aaaa', 'https://kr.object.iwinv.kr/yeonghoon.kim/1599550374_vosusdks.jpg', 0);
/*!40000 ALTER TABLE `education` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.gallery_thumbnail 구조 내보내기
DROP TABLE IF EXISTS `gallery_thumbnail`;
CREATE TABLE IF NOT EXISTS `gallery_thumbnail` (
  `gallery_thumbnail_no` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '갤러리 섬네일 번호',
  `board_content_no` int(10) unsigned NOT NULL COMMENT '게시판 컨텐츠 번호',
  `gallery_thumbnail_path` tinytext DEFAULT NULL COMMENT '갤러리 섬네일 경로',
  PRIMARY KEY (`gallery_thumbnail_no`) USING BTREE,
  KEY `thumnail_board_content.FK` (`board_content_no`),
  CONSTRAINT `thumnail_board_content.FK` FOREIGN KEY (`board_content_no`) REFERENCES `board_content` (`board_content_no`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8mb4 COMMENT='갤러리 썸네일 생성';

-- 테이블 데이터 yeonghoon.kim.gallery_thumbnail:~27 rows (대략적) 내보내기
/*!40000 ALTER TABLE `gallery_thumbnail` DISABLE KEYS */;
REPLACE INTO `gallery_thumbnail` (`gallery_thumbnail_no`, `board_content_no`, `gallery_thumbnail_path`) VALUES
	(8, 173, 'resources/upload/s_1600047057_otrnfjvu.jpg'),
	(9, 174, 'resources/upload/s_1600047182_iidgeapb.jpg'),
	(10, 175, 'resources/upload/s_1600047338_cliodygu.jpg'),
	(11, 176, 'resources/upload/s_1600047439_hzmbtnfz.jpg'),
	(12, 177, 'resources/upload/s_1600048315_rcewfmdm.jpg'),
	(13, 178, 'resources/upload/s_1600048746_ahkitfhr.jpg'),
	(14, 179, 'resources/upload/s_1600048993_tpnkmsct.jpg'),
	(15, 180, 'resources/upload/s_1600049489_qfsxfxee.jpg'),
	(16, 181, 'resources/upload/s_1600050184_tkcpayah.jpg'),
	(17, 182, 'resources/upload/s_s_1600050659_mgbshaig.jpg'),
	(18, 183, 'resources/upload/s_1600050938_elpeqzvx.jpg'),
	(19, 184, 'resources/upload/s_1600051635_rklogrld.jpg'),
	(20, 185, 'resources/upload/s_1600052095_fvbthruk.jpg'),
	(21, 186, 'resources/upload/s_1600052457_giiurilj.jpg'),
	(22, 187, 'resources/upload/s_1600052924_ocrqwvrr.jpg'),
	(23, 188, 'resources/upload/s_1600053229_tzkkynpt.jpg'),
	(24, 189, 'resources/upload/s_1600053368_rybxhcqj.jpg'),
	(25, 191, 'resources/upload/s_1600053838_inxjtnxa.jpg'),
	(26, 194, 'resources/upload/s_1600065670_vpqlzbhe.jpg'),
	(27, 193, 'resources/upload/s_1600065235_ipvqyqwc.jpg'),
	(28, 195, 'resources/upload/s_1600065773_gpmyynvd.jpg'),
	(29, 196, 'resources/upload/s_1600065803_fjnoauzl.jpg'),
	(30, 198, 'resources/upload/s_1600162257_gfsvpewj.jpg'),
	(31, 199, 'resources/upload/s_1600253449_tomczcqh.jpg'),
	(32, 200, 'resources/upload/s_1600338557_jxlsishu.jpg'),
	(33, 201, 'resources/upload/s_1600469048_ozgczjdr.jpg'),
	(34, 202, 'resources/upload/s_1600501089_uxdiwymu.jpg');
/*!40000 ALTER TABLE `gallery_thumbnail` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.member 구조 내보내기
DROP TABLE IF EXISTS `member`;
CREATE TABLE IF NOT EXISTS `member` (
  `member_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '회원번호',
  `member_email` varchar(50) NOT NULL COMMENT '이메일',
  `member_password` tinytext NOT NULL COMMENT '패스워드',
  `member_name` varchar(5) NOT NULL COMMENT '이름',
  `member_address` varchar(40) DEFAULT NULL COMMENT '주소',
  `member_address_detail` varchar(10) DEFAULT NULL COMMENT '상세주소',
  `member_gender` tinyint(1) unsigned DEFAULT NULL COMMENT '성별',
  `member_tel` varchar(15) DEFAULT NULL COMMENT '전화번호',
  `member_birthday` smallint(4) unsigned DEFAULT NULL COMMENT '생일',
  `member_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COMMENT='회원에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.member:~6 rows (대략적) 내보내기
/*!40000 ALTER TABLE `member` DISABLE KEYS */;
REPLACE INTO `member` (`member_no`, `member_email`, `member_password`, `member_name`, `member_address`, `member_address_detail`, `member_gender`, `member_tel`, `member_birthday`, `member_delete_yn`) VALUES
	(1, 'me@yeonghoon.kim', '$2a$10$rf8DyZyWJiMjD7Yru/oiGOiW3p3F7.E3QXjNpCxVye1Za/Mj8F2xe', '김영훈', '서울특별시 금천구 독산동', '동흥빌라 303호', NULL, '01051661219', 1987, 1),
	(14, 'test@test.com', '$2a$10$rf8DyZyWJiMjD7Yru/oiGOiW3p3F7.E3QXjNpCxVye1Za/Mj8F2xe', '테스트', NULL, '1', 0, '05422222222', NULL, 1),
	(15, 'test1@test.com', '$2a$10$VIVOeY4w0RgOhKvXGFT0xexcwIR.SzpCBr.CADJ6QewihfhaHUrcu', 'test1', NULL, '1111', 0, '05111111111', NULL, 1),
	(16, '123@natec.om', '$2a$10$Bu7GNU9rvQAuFP2BZyW6reXYic2OnBxfA6ri2klUcb.C0frwV/zui', '123', NULL, 'ㅁㄴㅇ', 1, '04412321313', NULL, 1),
	(17, '1234@1234.com', '$2a$10$LqHhbEt18lzf0aXiaLLc/Ocjf0/lunmRMaZapmjcOLqqNW7zZWipu', '1234', '서울 강남구 압구정로 102', '1234', 0, '01122222222', NULL, 0),
	(18, 'test@test123.com', '$2a$10$kGAEvGm1Qe1Bju9KrnTI7u2nTVF2fVjWBBNqRsDM9mKc6frIAsCKu', 'test1', '대전 동구 판교2길 7', '1111', 1, '05111111111', NULL, 1);
/*!40000 ALTER TABLE `member` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.tech 구조 내보내기
DROP TABLE IF EXISTS `tech`;
CREATE TABLE IF NOT EXISTS `tech` (
  `tech_no` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '기술번호',
  `member_no` int(11) unsigned NOT NULL COMMENT '회원번호',
  `tech_category_no` int(11) unsigned NOT NULL COMMENT '기술분류번호',
  `tech_name` varchar(20) NOT NULL COMMENT '기술명',
  `tech_delete_yn` tinyint(1) unsigned NOT NULL DEFAULT 1 COMMENT '삭제여부',
  PRIMARY KEY (`tech_no`),
  KEY `tech_member.FK` (`member_no`),
  KEY `tech_category.FK` (`tech_category_no`),
  CONSTRAINT `tech_category.FK` FOREIGN KEY (`tech_category_no`) REFERENCES `tech_category` (`tech_category_no`),
  CONSTRAINT `tech_member.FK` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COMMENT='기술에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.tech:~40 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tech` DISABLE KEYS */;
REPLACE INTO `tech` (`tech_no`, `member_no`, `tech_category_no`, `tech_name`, `tech_delete_yn`) VALUES
	(3, 1, 1, 'Java', 1),
	(4, 1, 1, 'Javascript', 1),
	(5, 1, 1, 'HTML', 1),
	(6, 1, 1, 'CSS', 1),
	(7, 1, 2, 'Spring', 1),
	(9, 1, 2, 'MyBatis', 1),
	(10, 1, 2, 'Bootstrap', 1),
	(11, 1, 3, 'jQuery', 1),
	(12, 1, 3, 'jQueryUi', 1),
	(13, 1, 4, 'Oracle', 1),
	(14, 1, 4, 'MariaDB', 1),
	(15, 1, 5, 'Tomcat', 1),
	(16, 1, 5, 'Nginx', 1),
	(17, 1, 5, 'Apache', 1),
	(18, 1, 6, 'Git', 1),
	(19, 1, 6, 'Subversion', 1),
	(20, 1, 7, '카카오 우편번호 서비스', 1),
	(21, 1, 8, 'Eclipse', 1),
	(22, 1, 8, 'SQLDeveloper', 1),
	(23, 1, 8, 'HeidiSQL', 1),
	(24, 1, 8, 'TortoiseSVN', 1),
	(25, 1, 8, 'Git for Windows', 1),
	(26, 1, 4, '배고파', 0),
	(27, 1, 5, 'dasdsadas', 0),
	(28, 1, 3, 'zzzzzzzzzzzzzzzzzz', 0),
	(30, 1, 2, 'edsad', 0),
	(31, 1, 4, 'wqeqweqw', 0),
	(32, 1, 3, '', 0),
	(33, 1, 4, '가나다라', 0),
	(34, 1, 1, '1', 0),
	(35, 1, 2, '2', 0),
	(36, 1, 3, '3', 0),
	(37, 1, 4, '4', 0),
	(38, 1, 5, '5', 0),
	(39, 1, 6, '6', 0),
	(40, 1, 7, '7', 0),
	(41, 1, 8, '8', 0),
	(42, 1, 8, 'phpMyAdmin', 1),
	(43, 1, 2, 'aaa', 0),
	(44, 1, 7, 'iwinv object storage', 1);
/*!40000 ALTER TABLE `tech` ENABLE KEYS */;

-- 테이블 yeonghoon.kim.tech_category 구조 내보내기
DROP TABLE IF EXISTS `tech_category`;
CREATE TABLE IF NOT EXISTS `tech_category` (
  `tech_category_no` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `tech_category_name` varchar(20) NOT NULL,
  `tech_category_delete_yn` tinyint(3) unsigned NOT NULL DEFAULT 1,
  PRIMARY KEY (`tech_category_no`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COMMENT='기술분류에 대한 정보를 담는 테이블';

-- 테이블 데이터 yeonghoon.kim.tech_category:~8 rows (대략적) 내보내기
/*!40000 ALTER TABLE `tech_category` DISABLE KEYS */;
REPLACE INTO `tech_category` (`tech_category_no`, `tech_category_name`, `tech_category_delete_yn`) VALUES
	(1, '언어', 1),
	(2, '프레임워크', 1),
	(3, '라이브러리', 1),
	(4, '데이터베이스', 1),
	(5, '서버', 1),
	(6, '형상관리', 1),
	(7, 'API', 1),
	(8, '그외 사용도구', 1);
/*!40000 ALTER TABLE `tech_category` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
